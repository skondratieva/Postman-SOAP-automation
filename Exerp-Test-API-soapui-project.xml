<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="a2794139-5ca8-46da-9c02-0a8b36f876d4" activeEnvironment="Default" name="Exerp Test API" resourceRoot="" soapui-version="5.4.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" id="c4f94e0a-aac1-4bfd-8bed-73d4eb141203" wsaVersion="NONE" name="SubscriptionAPIBinding" type="wsdl" bindingName="{http://v5.api.eclub.procard.dk/}SubscriptionAPIBinding" soapVersion="1_1" anonymous="optional" definition="https://lite-test.exerp.com/api/v5/SubscriptionAPI?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://lite-test.exerp.com/api/v5/SubscriptionAPI?wsdl"><con:part><con:url>https://lite-test.exerp.com/api/v5/SubscriptionAPI?wsdl</con:url><con:content><![CDATA[<definitions name="SubscriptionAPIService" targetNamespace="http://v5.api.eclub.procard.dk/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://v5.api.eclub.procard.dk/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <types>
    <xs:schema targetNamespace="http://v5.api.eclub.procard.dk/" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="APIException" type="tns:APIException"/>
      <xs:complexType name="apiPersonKey">
        <xs:complexContent>
          <xs:extension base="tns:compositeKey">
            <xs:sequence>
              <xs:element minOccurs="0" name="externalId" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="compositeKey">
        <xs:sequence>
          <xs:element name="center" type="xs:int"/>
          <xs:element name="id" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="subscription">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="assignedAddOns" nillable="true" type="tns:assignedAddOn"/>
          <xs:element minOccurs="0" name="billedUntilDate" type="xs:string"/>
          <xs:element minOccurs="0" name="bindingEndDate" type="xs:string"/>
          <xs:element minOccurs="0" name="changeRestrictionEnabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="endDate" type="xs:string"/>
          <xs:element name="freeDays" type="xs:int"/>
          <xs:element minOccurs="0" name="paymentAgreementKey" type="tns:compositeSubKey"/>
          <xs:element minOccurs="0" name="personId" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="price" type="xs:string"/>
          <xs:element minOccurs="0" name="product" type="tns:subscriptionProduct"/>
          <xs:element minOccurs="0" name="startDate" type="xs:string"/>
          <xs:element minOccurs="0" name="state" type="tns:subscriptionState"/>
          <xs:element minOccurs="0" name="subState" type="tns:subscriptionSubState"/>
          <xs:element minOccurs="0" name="subscriptionId" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="windowOfOpportunity" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="assignedAddOn">
        <xs:sequence>
          <xs:element minOccurs="0" name="endDate" type="xs:string"/>
          <xs:element minOccurs="0" name="initialPeriodEndDate" type="xs:string"/>
          <xs:element minOccurs="0" name="initialPeriodPrice" type="xs:decimal"/>
          <xs:element minOccurs="0" name="initialPeriodStartDate" type="xs:string"/>
          <xs:element name="key" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="price" type="xs:string"/>
          <xs:element name="pricePeriodLength" type="xs:int"/>
          <xs:element minOccurs="0" name="pricePeriodUnit" type="tns:timeUnit"/>
          <xs:element minOccurs="0" name="startDate" type="xs:string"/>
          <xs:element minOccurs="0" name="startupCampaignEndDate" type="xs:string"/>
          <xs:element minOccurs="0" name="startupCampaignPrice" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="compositeSubKey">
        <xs:complexContent>
          <xs:extension base="tns:compositeKey">
            <xs:sequence>
              <xs:element name="subId" type="xs:int"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="subscriptionProduct">
        <xs:sequence>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element minOccurs="0" name="externalId" type="xs:string"/>
          <xs:element minOccurs="0" name="globalId" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element name="periodLength" type="xs:int"/>
          <xs:element minOccurs="0" name="periodUnit" type="tns:timeUnit"/>
          <xs:element minOccurs="0" name="rank" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="sellingPoints" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:subscriptionType"/>
          <xs:element minOccurs="0" name="webname" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="APIException">
        <xs:sequence>
          <xs:element minOccurs="0" name="errorCode" type="tns:errorCode"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="errorDetail" type="tns:errorDetail"/>
          <xs:element minOccurs="0" name="errorMessage" type="xs:string"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="errorDetail">
        <xs:sequence>
          <xs:element minOccurs="0" name="info" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:errorDetailType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="subscriptionStopInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="lastPaidDay" type="xs:string"/>
          <xs:element minOccurs="0" name="lastTrainingDay" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="newFreeze">
        <xs:sequence>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
          <xs:element name="endDate" type="xs:string"/>
          <xs:element name="startDate" type="xs:string"/>
          <xs:element name="subscriptionId" type="tns:compositeKey"/>
          <xs:element name="type" type="tns:freezeType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="availableAddOnProductsForProductParameters">
        <xs:sequence>
          <xs:element name="onlyAvailableOnWeb" type="xs:boolean"/>
          <xs:element minOccurs="0" name="personKey" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="personType" type="tns:personType"/>
          <xs:element name="productId" type="tns:compositeKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="availableAddOnProduct">
        <xs:sequence>
          <xs:element minOccurs="0" name="productGroups">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="productGroup" type="tns:productGroupImpl"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="bindingPeriodLength" type="xs:int"/>
          <xs:element minOccurs="0" name="bindingPeriodUnit" type="tns:timeUnit"/>
          <xs:element minOccurs="0" name="campaignPrice" type="xs:string"/>
          <xs:element minOccurs="0" name="campaignSource" type="xs:string"/>
          <xs:element minOccurs="0" name="campaignText" type="xs:string"/>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="periodPriceSource" type="xs:string"/>
          <xs:element minOccurs="0" name="periodPriceText" type="xs:string"/>
          <xs:element minOccurs="0" name="price" type="xs:string"/>
          <xs:element name="pricePeriodLength" type="xs:int"/>
          <xs:element minOccurs="0" name="pricePeriodUnit" type="tns:timeUnit"/>
          <xs:element name="productKey" type="xs:int"/>
          <xs:element name="required" type="xs:boolean"/>
          <xs:element minOccurs="0" name="validTo" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="productGroupImpl">
        <xs:sequence>
          <xs:element minOccurs="0" name="color" type="xs:string"/>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element minOccurs="0" name="externalId" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element name="primary" type="xs:boolean"/>
          <xs:element minOccurs="0" name="productGroupKey" type="xs:int"/>
          <xs:element minOccurs="0" name="rank" type="xs:int"/>
          <xs:element minOccurs="0" name="showInShop" type="xs:boolean"/>
          <xs:element minOccurs="0" name="showInSubscriptionSales" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAvailableFreezesParameters">
        <xs:sequence>
          <xs:element name="fromDate" type="xs:string"/>
          <xs:element name="subscriptionId" type="tns:compositeKeyImpl"/>
          <xs:element name="toDate" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="compositeKeyImpl">
        <xs:sequence>
          <xs:element name="center" type="xs:int"/>
          <xs:element name="id" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="availableFreeze">
        <xs:sequence>
          <xs:element minOccurs="0" name="allowedFreezeCount" type="xs:int"/>
          <xs:element minOccurs="0" name="allowedFreezeWithinPeriod" type="xs:int"/>
          <xs:element minOccurs="0" name="freezeMaximumDuration" type="xs:int"/>
          <xs:element minOccurs="0" name="freezeMaximumDurationUnit" type="xs:string"/>
          <xs:element minOccurs="0" name="freezeMinimumDuration" type="xs:int"/>
          <xs:element minOccurs="0" name="freezeMinimumDurationUnit" type="xs:string"/>
          <xs:element minOccurs="0" name="freezePeriodNumberOfUnits" type="xs:int"/>
          <xs:element minOccurs="0" name="freezePeriodPrice" type="xs:string"/>
          <xs:element minOccurs="0" name="freezePeriodUnit" type="xs:string"/>
          <xs:element minOccurs="0" name="freezeStartProduct" type="tns:product"/>
          <xs:element minOccurs="0" name="subscriptionId" type="tns:compositeKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="product">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="barcodes" nillable="true" type="tns:barcode"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="price" type="xs:string"/>
          <xs:element minOccurs="0" name="productGroups">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="productGroup" type="tns:productGroup"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="productId" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="ref" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:productType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="barcode">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="productGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="color" type="xs:string"/>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element minOccurs="0" name="externalId" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element name="primary" type="xs:boolean"/>
          <xs:element name="productGroupKey" type="xs:int"/>
          <xs:element minOccurs="0" name="rank" type="xs:int"/>
          <xs:element minOccurs="0" name="showInShop" type="xs:boolean"/>
          <xs:element minOccurs="0" name="showInSubscriptionSales" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSubscriptionCreationInformationParameters">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignCode" type="xs:string"/>
          <xs:element name="ownerKey" type="tns:apiPersonKey"/>
          <xs:element name="startDate" type="xs:string"/>
          <xs:element name="subscriptionTypeKey" type="tns:compositeKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="subscriptionCreationInformation">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="availableAddOnProducts" nillable="true" type="tns:availableAddOnProduct"/>
          <xs:element minOccurs="0" name="bindingEndDate" type="xs:string"/>
          <xs:element minOccurs="0" name="campaignPeriod" type="tns:subscriptionCreationPeriod"/>
          <xs:element minOccurs="0" name="initialPeriod" type="tns:subscriptionCreationPeriod"/>
          <xs:element minOccurs="0" name="normalPrice" type="tns:productPrice"/>
          <xs:element minOccurs="0" name="prorataPeriod" type="tns:subscriptionCreationPeriod"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="subscriptionCreationPeriod">
        <xs:sequence>
          <xs:element minOccurs="0" name="endDate" type="xs:string"/>
          <xs:element minOccurs="0" name="price" type="tns:productPrice"/>
          <xs:element minOccurs="0" name="startDate" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="productPrice">
        <xs:sequence>
          <xs:element minOccurs="0" name="customerPrice" type="xs:string"/>
          <xs:element minOccurs="0" name="normalPrice" type="xs:string"/>
          <xs:element minOccurs="0" name="sponsorPrice" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="sellCASHSubscriptionParameter">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="addOnProductKeys" type="xs:int"/>
          <xs:element minOccurs="0" name="addOnProductPriceOverrides">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="addOnProductPriceOverride" type="tns:addOnProductPriceOverride"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="addonProducts" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="campaignCode" type="xs:string"/>
          <xs:element minOccurs="0" name="creationPrice" type="xs:string"/>
          <xs:element minOccurs="0" name="overrideAdminFeeProductPrice" type="xs:string"/>
          <xs:element minOccurs="0" name="paymentInfo" type="tns:paymentInfo"/>
          <xs:element minOccurs="0" name="periodEnd" type="xs:string"/>
          <xs:element minOccurs="0" name="periodPrice" type="xs:string"/>
          <xs:element name="periodStart" type="xs:string"/>
          <xs:element name="personId" type="tns:apiPersonKey"/>
          <xs:element name="subscriptionProductId" type="tns:compositeKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addOnProductPriceOverride">
        <xs:sequence>
          <xs:element name="addOnProductKey" type="tns:compositeKey"/>
          <xs:element name="price" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="paymentInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="amountPaidByCustomer" type="xs:string"/>
          <xs:element minOccurs="0" name="creditCardPaymentInfo" type="tns:creditCardPaymentInfo"/>
          <xs:element minOccurs="0" name="creditCardTransactionRef" type="xs:string"/>
          <xs:element minOccurs="0" name="installmentPlanConfigExternalId" type="xs:string"/>
          <xs:element minOccurs="0" name="paymentAgreementKeyForCollection" type="tns:compositeSubKey"/>
          <xs:element name="paymentMethod" type="tns:paymentMethod"/>
          <xs:element minOccurs="0" name="shoppingBasketCenter" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="creditCardPaymentInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="cardDetailsEncrypted" type="xs:string"/>
          <xs:element name="createAgreement" type="xs:boolean"/>
          <xs:element minOccurs="0" name="replacePaymentAgreementKey" type="tns:compositeSubKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="sellClipcardParameters">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignCode" type="xs:string"/>
          <xs:element name="paymentInfo" type="tns:paymentInfo"/>
          <xs:element name="personId" type="tns:apiPersonKey"/>
          <xs:element name="productId" type="tns:compositeKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="invoice">
        <xs:sequence>
          <xs:element minOccurs="0" name="employeeKey" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="payerKey" type="tns:apiPersonKey"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="invoiceLines" nillable="true" type="tns:invoiceLine"/>
          <xs:element minOccurs="0" name="invoiceText" type="xs:string"/>
          <xs:element minOccurs="0" name="totalAmount" type="xs:string"/>
          <xs:element minOccurs="0" name="totalVAT" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="vatInfos" nillable="true" type="tns:vatInfo"/>
          <xs:element minOccurs="0" name="salesTaxes">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="salesTax" type="tns:salesTax"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="invoiceLine">
        <xs:sequence>
          <xs:element minOccurs="0" name="amount" type="xs:string"/>
          <xs:element minOccurs="0" name="productKey" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="purchaserKey" type="tns:apiPersonKey"/>
          <xs:element name="quantity" type="xs:int"/>
          <xs:element minOccurs="0" name="text" type="xs:string"/>
          <xs:element minOccurs="0" name="vatInfo" type="tns:vatInfo"/>
          <xs:element minOccurs="0" name="salesTaxes">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="salesTax" type="tns:salesTax"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="vatInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="amount" type="xs:string"/>
          <xs:element minOccurs="0" name="rate" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="salesTax">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="amount" type="xs:string"/>
          <xs:element minOccurs="0" name="rate" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="availableClipcard">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="availableInstallmentPlanConfigs" nillable="true" type="tns:installmentPlanConfig"/>
          <xs:element minOccurs="0" name="campaignText" type="xs:string"/>
          <xs:element minOccurs="0" name="clips" type="xs:int"/>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element minOccurs="0" name="externalId" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="normalPrice" type="xs:string"/>
          <xs:element minOccurs="0" name="price" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="productGroups" nillable="true" type="tns:productGroup"/>
          <xs:element minOccurs="0" name="productId" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="rank" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="sellingPoints" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="sponsoredAmount" type="xs:string"/>
          <xs:element minOccurs="0" name="validPeriodLength" type="xs:int"/>
          <xs:element minOccurs="0" name="validPeriodLengthUnit" type="tns:timeUnit"/>
          <xs:element minOccurs="0" name="webname" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="installmentPlanConfig">
        <xs:sequence>
          <xs:element minOccurs="0" name="adminFee" type="xs:decimal"/>
          <xs:element minOccurs="0" name="amountPerInstallment" type="xs:decimal"/>
          <xs:element minOccurs="0" name="externalId" type="xs:string"/>
          <xs:element minOccurs="0" name="firstInstallmentPaidInPOS" type="xs:boolean"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="numberOfInstallments" type="xs:int"/>
          <xs:element minOccurs="0" name="type" type="tns:installmentPlanConfigType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="freeze">
        <xs:sequence>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
          <xs:element minOccurs="0" name="endDate" type="xs:string"/>
          <xs:element minOccurs="0" name="freezeKey" type="tns:compositeSubKey"/>
          <xs:element minOccurs="0" name="startDate" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:freezeType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="sellEFTMembershipParameters">
        <xs:sequence>
          <xs:element minOccurs="0" name="addOnProductKeys">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="addOnProductKey" type="tns:compositeKey"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="addOnProductPriceOverrides">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="addOnProductPriceOverride" type="tns:addOnProductPriceOverride"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="campaignCode" type="xs:string"/>
          <xs:element minOccurs="0" name="checkValidAgreement" type="xs:boolean"/>
          <xs:element minOccurs="0" name="overrideAdminFeeProductPrice" type="xs:decimal"/>
          <xs:element minOccurs="0" name="overrideCreationProductPrice" type="xs:decimal"/>
          <xs:element name="paymentInfo" type="tns:paymentInfo"/>
          <xs:element minOccurs="0" name="periodPrice" type="xs:decimal"/>
          <xs:element name="personId" type="tns:apiPersonKey"/>
          <xs:element name="productId" type="tns:compositeKey"/>
          <xs:element name="startDate" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addOnSaleResult">
        <xs:sequence>
          <xs:element minOccurs="0" name="invoiceAmount" type="xs:string"/>
          <xs:element minOccurs="0" name="invoiceKey" type="tns:compositeKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="priceListParameters">
        <xs:sequence>
          <xs:element name="centerId" type="xs:int"/>
          <xs:element minOccurs="0" name="companyAgreementRef" type="xs:string"/>
          <xs:element minOccurs="0" name="onlyAvailableOnWeb" type="xs:boolean"/>
          <xs:element minOccurs="0" name="onlyWithPrivileges" type="xs:boolean"/>
          <xs:element name="productGroupKey" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="targetGroupKeys" nillable="true" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="availableSubscription">
        <xs:sequence>
          <xs:element minOccurs="0" name="adminFeePrice" type="tns:productPrice"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="availableAddOnProducts" nillable="true" type="tns:availableAddOnProduct"/>
          <xs:element minOccurs="0" name="availableFreeze" type="tns:availableFreeze"/>
          <xs:element minOccurs="0" name="bindingPeriodLength" type="xs:int"/>
          <xs:element minOccurs="0" name="campaignEndDate" type="xs:string"/>
          <xs:element minOccurs="0" name="campaignPrice" type="xs:string"/>
          <xs:element minOccurs="0" name="campaignSource" type="xs:string"/>
          <xs:element minOccurs="0" name="campaignSponsoredAmount" type="xs:string"/>
          <xs:element minOccurs="0" name="campaignStartDate" type="xs:string"/>
          <xs:element minOccurs="0" name="campaignText" type="xs:string"/>
          <xs:element minOccurs="0" name="creationNormalPrice" type="xs:string"/>
          <xs:element minOccurs="0" name="creationPrice" type="xs:string"/>
          <xs:element minOccurs="0" name="creationPriceSource" type="xs:string"/>
          <xs:element minOccurs="0" name="creationPriceText" type="xs:string"/>
          <xs:element minOccurs="0" name="creationSponseredAmount" type="xs:string"/>
          <xs:element minOccurs="0" name="externalId" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="periodLength" type="xs:int"/>
          <xs:element minOccurs="0" name="periodNormalPrice" type="xs:string"/>
          <xs:element minOccurs="0" name="periodPrice" type="xs:string"/>
          <xs:element minOccurs="0" name="periodPriceSource" type="xs:string"/>
          <xs:element minOccurs="0" name="periodPriceSourceEndDate" type="xs:string"/>
          <xs:element minOccurs="0" name="periodPriceSourceType" type="tns:periodPriceSourceType"/>
          <xs:element minOccurs="0" name="periodPriceText" type="xs:string"/>
          <xs:element minOccurs="0" name="periodSponseredAmount" type="xs:string"/>
          <xs:element minOccurs="0" name="periodUnit" type="tns:timeUnit"/>
          <xs:element minOccurs="0" name="proRataPrice" type="xs:string"/>
          <xs:element minOccurs="0" name="proRataSponsoredAmount" type="xs:string"/>
          <xs:element minOccurs="0" name="product" type="tns:subscriptionProduct"/>
          <xs:element minOccurs="0" name="productId" type="tns:compositeKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="freezeByPaymentCycleParameters">
        <xs:sequence>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
          <xs:element name="paymentCycles" type="xs:int"/>
          <xs:element name="subscriptionId" type="tns:compositeKey"/>
          <xs:element name="type" type="tns:freezeType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="changeEFTSubscriptionParameters">
        <xs:sequence>
          <xs:element name="centerId" type="xs:int"/>
          <xs:element name="personKey" type="tns:apiPersonKey"/>
          <xs:element name="existingSubscriptionKey" type="tns:compositeKey"/>
          <xs:element name="newSubscriptionProductKey" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="startDate" type="xs:string"/>
          <xs:element minOccurs="0" name="periodPriceOverride" type="xs:decimal"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="addOnProductKeys" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="changeEFTSubscriptionDetails">
        <xs:sequence>
          <xs:element minOccurs="0" name="subscriptionTypeKey" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="subscriptionName" type="xs:string"/>
          <xs:element minOccurs="0" name="changeFullAmountToPay" type="xs:decimal"/>
          <xs:element minOccurs="0" name="productGlobalName" type="xs:string"/>
          <xs:element minOccurs="0" name="oldSubscription" type="tns:subscription"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="addons" nillable="true" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="changeEFTSubscriptionResult">
        <xs:sequence>
          <xs:element name="newSubscriptionKey" type="tns:compositeKey"/>
          <xs:element name="invoiceKey" type="tns:compositeKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateCampaignCodeParameters">
        <xs:sequence>
          <xs:element name="campaignCode" type="xs:string"/>
          <xs:element name="center" type="xs:int"/>
          <xs:element minOccurs="0" name="personKey" type="tns:apiPersonKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="campaignInformationForPerson">
        <xs:sequence>
          <xs:element name="activeCampaign" type="xs:boolean"/>
          <xs:element minOccurs="0" name="dateInterval" type="tns:interval"/>
          <xs:element name="exists" type="xs:boolean"/>
          <xs:element name="id" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element name="personPastUsages" type="xs:int"/>
          <xs:element name="usageLimit" type="xs:int"/>
          <xs:element name="valid" type="xs:boolean"/>
          <xs:element minOccurs="0" name="webText" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="interval">
        <xs:sequence>
          <xs:element name="from" type="xs:string"/>
          <xs:element name="to" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="stopFreezePeriodInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="nextDeductionPrice" type="xs:string"/>
          <xs:element minOccurs="0" name="nextDeductionDate" type="xs:string"/>
          <xs:element minOccurs="0" name="endDate" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteSubscriptionsParameters">
        <xs:sequence>
          <xs:element name="personKey" type="tns:apiPersonKey"/>
          <xs:element name="subscriptionKey" type="tns:compositeKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateClipcardEndDateParameters">
        <xs:sequence>
          <xs:element name="clipcardId" type="tns:compositeSubKey"/>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
          <xs:element name="validUntilDate" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="clipcard">
        <xs:sequence>
          <xs:element minOccurs="0" name="assignedStaffFullName" type="xs:string"/>
          <xs:element minOccurs="0" name="assignedStaffGroup" type="xs:int"/>
          <xs:element minOccurs="0" name="assignedStaffKey" type="tns:apiPersonKey"/>
          <xs:element name="blocked" type="xs:boolean"/>
          <xs:element name="cancelled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="clipcardId" type="tns:compositeSubKey"/>
          <xs:element minOccurs="0" name="clipcardTypeName" type="xs:string"/>
          <xs:element minOccurs="0" name="clipsInitial" type="xs:int"/>
          <xs:element minOccurs="0" name="clipsLeft" type="xs:int"/>
          <xs:element name="finished" type="xs:boolean"/>
          <xs:element minOccurs="0" name="invoiceLineId" type="tns:compositeSubKey"/>
          <xs:element minOccurs="0" name="mainSubscriptionId" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="personId" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="validUntilDate" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAvailableSubscriptionsParameters">
        <xs:sequence>
          <xs:element minOccurs="0" name="alternativeCenter" type="xs:int"/>
          <xs:element minOccurs="0" name="campaignCode" type="xs:string"/>
          <xs:element minOccurs="0" name="includeFreeze" type="xs:boolean"/>
          <xs:element name="onlyAvailableOnWEB" type="xs:boolean"/>
          <xs:element name="personKey" type="tns:apiPersonKey"/>
          <xs:element name="subscriptionType" type="tns:subscriptionType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAvailableClipcardsForPersonParameters">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignCode" type="xs:string"/>
          <xs:element name="center" type="xs:int"/>
          <xs:element name="onlyAvailableOnWeb" type="xs:boolean"/>
          <xs:element name="personKey" type="tns:apiPersonKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="availableSubscriptionsParameters">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignCode" type="xs:string"/>
          <xs:element name="centerId" type="xs:int"/>
          <xs:element minOccurs="0" name="companyAgreementId" type="tns:compositeSubKey"/>
          <xs:element minOccurs="0" name="includeFreeze" type="xs:boolean"/>
          <xs:element name="onlyAvailableOnWeb" type="xs:boolean"/>
          <xs:element name="personType" type="tns:personType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAvailableClipcardsForBookingAndFriendsParameter">
        <xs:sequence>
          <xs:element name="bookingId" type="tns:compositeKey"/>
          <xs:element name="minimumClips" type="xs:int"/>
          <xs:element name="personKey" type="tns:apiPersonKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="subscriptionContractSummaryParameters">
        <xs:sequence>
          <xs:element minOccurs="0" name="addOnProductPriceOverrides">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="addOnProductPriceOverride" type="tns:addOnProductPriceOverride"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="addonProductKeys">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="addonProductKey" type="xs:int"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="campaignCode" type="xs:string"/>
          <xs:element name="centerId" type="xs:int"/>
          <xs:element minOccurs="0" name="clearingHouseType" type="tns:clearingHouseType"/>
          <xs:element minOccurs="0" name="companyAgreementKey" type="tns:compositeSubKey"/>
          <xs:element minOccurs="0" name="paymentAgreementDeductionDay" type="xs:int"/>
          <xs:element minOccurs="0" name="paymentAgreementToUseKey" type="tns:compositeSubKey"/>
          <xs:element minOccurs="0" name="personKey" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="personType" type="tns:personType"/>
          <xs:element name="startDate" type="xs:string"/>
          <xs:element name="subscriptionProductKey" type="tns:compositeKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="subscriptionContractSummary">
        <xs:sequence>
          <xs:element minOccurs="0" name="adminFeePrice" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="availableAddOnProducts" nillable="true" type="tns:assignedAddOn"/>
          <xs:element minOccurs="0" name="bindingEndDate" type="xs:string"/>
          <xs:element minOccurs="0" name="bindingPeriodLength" type="xs:int"/>
          <xs:element minOccurs="0" name="contractPreview" type="tns:mimeDocument"/>
          <xs:element minOccurs="0" name="creationNormalPrice" type="xs:string"/>
          <xs:element minOccurs="0" name="creationPrice" type="xs:string"/>
          <xs:element minOccurs="0" name="creationPriceSource" type="xs:string"/>
          <xs:element minOccurs="0" name="creationPriceText" type="xs:string"/>
          <xs:element minOccurs="0" name="creationSponseredAmount" type="xs:string"/>
          <xs:element minOccurs="0" name="externalId" type="xs:string"/>
          <xs:element minOccurs="0" name="firstDeductionAmount" type="xs:string"/>
          <xs:element minOccurs="0" name="firstDeductionDate" type="xs:string"/>
          <xs:element minOccurs="0" name="firstDeductionPeriodEndDate" type="xs:string"/>
          <xs:element minOccurs="0" name="firstDeductionPeriodStartDate" type="xs:string"/>
          <xs:element minOccurs="0" name="initialPeriodCampaignSource" type="xs:string"/>
          <xs:element minOccurs="0" name="initialPeriodEndDate" type="xs:string"/>
          <xs:element minOccurs="0" name="initialPeriodNormalPrice" type="xs:string"/>
          <xs:element minOccurs="0" name="initialPeriodPrice" type="xs:string"/>
          <xs:element minOccurs="0" name="initialPeriodStartDate" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="normalPeriodPrice" type="xs:string"/>
          <xs:element minOccurs="0" name="normalPeriodPriceSource" type="xs:string"/>
          <xs:element minOccurs="0" name="normalPeriodPriceText" type="xs:string"/>
          <xs:element minOccurs="0" name="normalPeriodSponseredAmount" type="xs:string"/>
          <xs:element minOccurs="0" name="periodLength" type="xs:int"/>
          <xs:element minOccurs="0" name="periodPriceSourceEndDate" type="xs:string"/>
          <xs:element minOccurs="0" name="periodPriceSourceType" type="tns:periodPriceSourceType"/>
          <xs:element minOccurs="0" name="periodUnit" type="xs:int"/>
          <xs:element minOccurs="0" name="proRataPrice" type="xs:string"/>
          <xs:element minOccurs="0" name="proRataSponsoredAmount" type="xs:string"/>
          <xs:element minOccurs="0" name="product" type="tns:subscriptionProduct"/>
          <xs:element minOccurs="0" name="productKey" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="startDate" type="xs:string"/>
          <xs:element minOccurs="0" name="startupCampaignEndDate" type="xs:string"/>
          <xs:element minOccurs="0" name="startupCampaignPrice" type="xs:string"/>
          <xs:element minOccurs="0" name="startupCampaignSource" type="xs:string"/>
          <xs:element minOccurs="0" name="startupCampaignStartDate" type="xs:string"/>
          <xs:element minOccurs="0" name="startupCampaignText" type="xs:string"/>
          <xs:element minOccurs="0" name="totalAmount" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="mimeDocument">
        <xs:sequence>
          <xs:element minOccurs="0" name="data" type="xs:base64Binary"/>
          <xs:element minOccurs="0" name="type" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAvailableClipcardsForAnonymousParameters">
        <xs:sequence>
          <xs:element minOccurs="0" name="campaignCode" type="xs:string"/>
          <xs:element name="centerId" type="xs:int"/>
          <xs:element minOccurs="0" name="companyAgreementId" type="tns:compositeSubKey"/>
          <xs:element name="onlyAvailableOnWeb" type="xs:boolean"/>
          <xs:element name="personType" type="tns:personType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAvailableClipcardsForAnonymousResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="clipcards">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="clipcard" type="tns:availableClipcard"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="availableSubscriptionsForScopeParameters">
        <xs:sequence>
          <xs:element name="onlyAvailableOnWeb" type="xs:boolean"/>
          <xs:element name="personType" type="tns:personType"/>
          <xs:element name="scopeId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="availableScopeSubscriptions">
        <xs:sequence>
          <xs:element minOccurs="0" name="centerId" type="xs:int"/>
          <xs:element minOccurs="0" name="availableSubscriptions">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="availableSubscription" type="tns:availableSubscription"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="timeUnit">
        <xs:restriction base="xs:string">
          <xs:enumeration value="WEEK"/>
          <xs:enumeration value="DAY"/>
          <xs:enumeration value="MONTH"/>
          <xs:enumeration value="YEAR"/>
          <xs:enumeration value="HOUR"/>
          <xs:enumeration value="MINUTE"/>
          <xs:enumeration value="SECOND"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="subscriptionType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="CASH"/>
          <xs:enumeration value="EFT"/>
          <xs:enumeration value="RECURRING_CLIPCARD"/>
          <xs:enumeration value="PROSPECT"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="subscriptionState">
        <xs:restriction base="xs:string">
          <xs:enumeration value="ACTIVE"/>
          <xs:enumeration value="ENDED"/>
          <xs:enumeration value="FROZEN"/>
          <xs:enumeration value="WINDOW"/>
          <xs:enumeration value="CREATED"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="subscriptionSubState">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NONE"/>
          <xs:enumeration value="AWAITING_ACTIVATION"/>
          <xs:enumeration value="UPGRADED"/>
          <xs:enumeration value="DOWNGRADED"/>
          <xs:enumeration value="EXTENDED"/>
          <xs:enumeration value="TRANSFERRED"/>
          <xs:enumeration value="REGRETTED"/>
          <xs:enumeration value="CANCELLED"/>
          <xs:enumeration value="BLOCKED"/>
          <xs:enumeration value="CHANGED"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="errorCode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UNKNOWN_ERROR"/>
          <xs:enumeration value="CREATE_EXCEPTION"/>
          <xs:enumeration value="REMOVE_EXCEPTION"/>
          <xs:enumeration value="SECURITY"/>
          <xs:enumeration value="SECURITY_ROLE"/>
          <xs:enumeration value="ARGUMENT_IS_NULL"/>
          <xs:enumeration value="ILLEGAL_ARGUMENT"/>
          <xs:enumeration value="PARSE_ERROR"/>
          <xs:enumeration value="ENTITY_NOT_FOUND"/>
          <xs:enumeration value="CONFLICTING_CHANGE"/>
          <xs:enumeration value="INVALID_ZIPCODE"/>
          <xs:enumeration value="INVALID_SOCIAL_SECURITY_NUMBER"/>
          <xs:enumeration value="INVALID_COMPANYID"/>
          <xs:enumeration value="INVALID_PHONE_NUMBER"/>
          <xs:enumeration value="CLIENT"/>
          <xs:enumeration value="ENTITY_IDENTIFIER_STATUS"/>
          <xs:enumeration value="DUPLICATE_PERSON"/>
          <xs:enumeration value="DUPLICATE_EXTERNAL_ID"/>
          <xs:enumeration value="FRIEND_RESTRICTION"/>
          <xs:enumeration value="EMPLOYEE_ALREADY_EXIST"/>
          <xs:enumeration value="DUPLICATE_COMPANY"/>
          <xs:enumeration value="EXPENSIVE_SEARCH"/>
          <xs:enumeration value="MULTIPLE_PERSONS_FOUND"/>
          <xs:enumeration value="NOT_DELIVERABLE"/>
          <xs:enumeration value="CIRCULAR_REFERENCE"/>
          <xs:enumeration value="REFERENCE"/>
          <xs:enumeration value="PERSON_NOT_EDITABLE"/>
          <xs:enumeration value="PERSON_TRANSFER"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_FOUND"/>
          <xs:enumeration value="ACCOUNT_RECEIVABLE_IS_BLOCKED"/>
          <xs:enumeration value="BANK_ACCOUNT_IS_BLOCKED"/>
          <xs:enumeration value="DEBIT_MAX"/>
          <xs:enumeration value="INVALID_PAYMENT_AGREEMENT"/>
          <xs:enumeration value="INVALID_BANK_INFO"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_CREDITOR_FOUND"/>
          <xs:enumeration value="PARTICIPATION_TIME_INTERVAL_OVERLAP"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLACKLISTED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLOCKED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="BOOKING_WAITING_LIST_FULL"/>
          <xs:enumeration value="BOOKING_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_RESTRICTION"/>
          <xs:enumeration value="OUTSIDE_BOOKING_WINDOW_EXCEPTION"/>
          <xs:enumeration value="CUSTOMER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="CENTER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_COLLECTION_NOT_PAID_FOR"/>
          <xs:enumeration value="NO_PRIVILEGE_FOR_PARTICIPATION"/>
          <xs:enumeration value="ALL_PARTICIPATIONS_TAKEN"/>
          <xs:enumeration value="SHOWUP_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_CANCELLATION"/>
          <xs:enumeration value="TOO_EARLY_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="TOO_EARLY_TO_SHOWUP"/>
          <xs:enumeration value="TOO_LATE_TO_SHOWUP"/>
          <xs:enumeration value="PARTICIPANT_TOO_MANY_OPEN_BOOKINGS"/>
          <xs:enumeration value="RESOURCE_OCCUPIED"/>
          <xs:enumeration value="RESOURCE_START_TIME_RESTRICTION"/>
          <xs:enumeration value="RESOURCE_TIME_RESTRICTION"/>
          <xs:enumeration value="ACTIVITY_STATE_INVALID"/>
          <xs:enumeration value="NO_PARENT_BOOKING_FOUND"/>
          <xs:enumeration value="STAFF_BLACKLISTED"/>
          <xs:enumeration value="STAFF_OCCUPIED"/>
          <xs:enumeration value="TOO_MANY_SUB_STAFF_USAGES"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_BOOKED"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_SHOWEDUP"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_BOOKING"/>
          <xs:enumeration value="LISTS_FULL"/>
          <xs:enumeration value="TOO_LATE_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="PARTICIPANT_OCCUPIED"/>
          <xs:enumeration value="FULL_BOOKING_RESTRICTION"/>
          <xs:enumeration value="IN_ADVANCE_LIMIT_BOOKING_RESTRICTION"/>
          <xs:enumeration value="PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="PARTICIPANT_BLACKLISTED"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BOOKING"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CENTER"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CUSTOMER"/>
          <xs:enumeration value="UNABLE_TO_REFRESH_WAITING_LIST"/>
          <xs:enumeration value="TOO_FEW_PARTICIPANTS"/>
          <xs:enumeration value="FREEZE_MAX_PREBOOK_PERIOD"/>
          <xs:enumeration value="FREEZE_MIN_OR_MAX_DURATION"/>
          <xs:enumeration value="FREEZE_TOO_LONG"/>
          <xs:enumeration value="FREEZE_TOO_SHORT"/>
          <xs:enumeration value="FREEZE_MAX_NUMBER_REACHED"/>
          <xs:enumeration value="TOO_MANY_FREEZES_PERIOD"/>
          <xs:enumeration value="TOO_MANY_FREEZES_TOTAL"/>
          <xs:enumeration value="FREEZE_MAX_TOTAL_DURATION_REACHED"/>
          <xs:enumeration value="FREEZE_NOT_ALLOWED"/>
          <xs:enumeration value="FREEZE_START_AND_STOP_DATE"/>
          <xs:enumeration value="FREEZE_START_IN_THE_PAST"/>
          <xs:enumeration value="FREEZE_END_BEFORE_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_AFTER_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_BEFORE_SUBSCRIPTION_START"/>
          <xs:enumeration value="FREEZE_OVERLAP"/>
          <xs:enumeration value="FREEZE_FUTURE_FREEZE"/>
          <xs:enumeration value="BOOKINGS_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="PARTICIPATION_ALREADY_CANCELLED"/>
          <xs:enumeration value="PARTICIPATION_CANCELLED"/>
          <xs:enumeration value="MINIMUM_AGE_EXCEPTION"/>
          <xs:enumeration value="TEMPLATE_NOT_DEFINED"/>
          <xs:enumeration value="INVALID_OTHER_PAYER_TYPE"/>
          <xs:enumeration value="DIFFERENT_COUNTRY_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_IS_NOT_STAFF"/>
          <xs:enumeration value="OTHER_PAYER_HAS_OTHER_PAYER"/>
          <xs:enumeration value="NO_VALID_ACCOUNT_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_STATUS_NOT_VALID_FOR_ATTEND"/>
          <xs:enumeration value="ATTENDING_PERSON_BLACKLISTED"/>
          <xs:enumeration value="MISSING_PRIVILEGE_FOR_ATTEND"/>
          <xs:enumeration value="ATTEND_NOT_POSSIBLE_AT_SPECIFIED_TIME"/>
          <xs:enumeration value="CLIPCARD_NOT_USABLE"/>
          <xs:enumeration value="TOO_MANY_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="NOT_ENOUGH_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="LOGIN_BLOCKED"/>
          <xs:enumeration value="PASSWORD_EXPIRED"/>
          <xs:enumeration value="PERSON_DELETED"/>
          <xs:enumeration value="PERSON_ANONYMIZED"/>
          <xs:enumeration value="INVALID_PICTURE"/>
          <xs:enumeration value="PERSON_NOT_FOUND_FOR_VENDING"/>
          <xs:enumeration value="TOO_MANY_MATCHES"/>
          <xs:enumeration value="PASSWORD_NOT_SET"/>
          <xs:enumeration value="PASSWORD_TOO_SHORT"/>
          <xs:enumeration value="CANNOT_PARTICIPATE_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="INVALID_STATUS"/>
          <xs:enumeration value="CONCURRENT_CALLS"/>
          <xs:enumeration value="CANNOT_UPDATE_COMPLETED_QUESTIONNAIRE"/>
          <xs:enumeration value="MISSING_ADMIN_FEE_PRODUCT"/>
          <xs:enumeration value="LOGIN_NOT_VALID"/>
          <xs:enumeration value="ACTIVE_TASKS_ALREADY_EXISTS_FOR_PERSON"/>
          <xs:enumeration value="TASK_TYPE_EXTERNAL_KEY_DOES_NOT_EXIST"/>
          <xs:enumeration value="SUBSCRIPTION_OF_SAME_TYPE"/>
          <xs:enumeration value="PERSON_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_KEY_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_BLOCKED"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_UNBLOCKED"/>
          <xs:enumeration value="INVALID_EMAIL"/>
          <xs:enumeration value="CENTER_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_TYPE_NOT_STRING"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_UPDATE_NOT_ALLOWED"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_VALUE_NOT_ALLOWED"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="CHILD_MUST_HAVE_AT_LEAST_ONE_PARENT"/>
          <xs:enumeration value="CHILD_HAS_TOO_MANY_PARENTS"/>
          <xs:enumeration value="PARENT_HAS_TOO_MANY_CHILDREN"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_ALREADY_EXISTS"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_DOES_NOT_EXIST"/>
          <xs:enumeration value="GUARDIAN_IS_TOO_YOUNG"/>
          <xs:enumeration value="CHILD_IS_TOO_OLD"/>
          <xs:enumeration value="AGE_NOT_SET"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_PERSON_MISMATCH"/>
          <xs:enumeration value="PAYMENT_CYCLE_TYPE_NOT_ALLOWED_EXCEPTION"/>
          <xs:enumeration value="SUBSCRIPTION_DOES_NOT_BELONG_TO_MEMBER"/>
          <xs:enumeration value="CANNOT_DELETE_SUBSCRIPTION"/>
          <xs:enumeration value="NO_PAYMENT_AGREEMENT_FOUND"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_VALID_FOR_SALES"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_ACTIVE"/>
          <xs:enumeration value="PAYMENT_CYCLE_NOT_ALLOWED"/>
          <xs:enumeration value="SUBSCRIPTION_SALE_OUTSIDE_HOME_CLUB_NOT_ALLOWED"/>
          <xs:enumeration value="BELOW_REQUIRED_AGE_FOR_EMAIL_CAPTURE"/>
          <xs:enumeration value="ROLE_NOT_FOUND"/>
          <xs:enumeration value="ACTION_NOT_ALLOWED"/>
          <xs:enumeration value="SCOPE_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_BLOCKED"/>
          <xs:enumeration value="ROLE_NOT_ASSIGNED"/>
          <xs:enumeration value="INVALID_EMPLOYEE_KEY"/>
          <xs:enumeration value="MISSING_PRIVILEGES"/>
          <xs:enumeration value="DATE_PARSE_ERROR"/>
          <xs:enumeration value="DATE_INVALID"/>
          <xs:enumeration value="CLIPCARD_NOT_ACTIVE"/>
          <xs:enumeration value="GROUP_ALREADY_EXIST"/>
          <xs:enumeration value="EMPLOYEE_AND_PERSON_KEY_SET"/>
          <xs:enumeration value="MULTIPLE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="MULTIPLE_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_ACTIVE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="errorDetailType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="MISSING_ACCESS_GROUP"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_DATE"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_TIME"/>
          <xs:enumeration value="MISSING_PRIVILEGES_COUNT"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="ALLOWED_BOOKING_WINDOW_TIMESLOT"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="cancelUsageType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="CHECK"/>
          <xs:enumeration value="CANCEL"/>
          <xs:enumeration value="IGNORE"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="freezeType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UNCONDITIONAL"/>
          <xs:enumeration value="CONDITIONAL"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="personType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="PRIVATE"/>
          <xs:enumeration value="STUDENT"/>
          <xs:enumeration value="STAFF"/>
          <xs:enumeration value="FRIEND"/>
          <xs:enumeration value="CORPORATE"/>
          <xs:enumeration value="ONEMANCORPORATE"/>
          <xs:enumeration value="FAMILY"/>
          <xs:enumeration value="SENIOR"/>
          <xs:enumeration value="GUEST"/>
          <xs:enumeration value="CHILD"/>
          <xs:enumeration value="EXTERNAL_STAFF"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="productType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="GOOD"/>
          <xs:enumeration value="SERVICE"/>
          <xs:enumeration value="CLIPCARD"/>
          <xs:enumeration value="SUBSCRIPTION"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="paymentMethod">
        <xs:restriction base="xs:string">
          <xs:enumeration value="CASH_ACCOUNT"/>
          <xs:enumeration value="PAYMENT_ACCOUNT"/>
          <xs:enumeration value="SHOPPING_BASKET"/>
          <xs:enumeration value="INSTALLMENT_PLAN"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="installmentPlanConfigType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="FIXED_NUMBER"/>
          <xs:enumeration value="FIXED_AMOUNT"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="periodPriceSourceType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="CAMPAIGN"/>
          <xs:enumeration value="COMPANY_AGREEMENT"/>
          <xs:enumeration value="TARGET_GROUP"/>
          <xs:enumeration value="OTHER"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="clearingHouseType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="EFT"/>
          <xs:enumeration value="INVOICE"/>
          <xs:enumeration value="CREDIT_CARD"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType final="#all" name="subscriptionArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:subscription"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="availableAddOnProductArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:availableAddOnProduct"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="availableClipcardArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:availableClipcard"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="freezeArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:freeze"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="compositeKeyArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:compositeKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="availableSubscriptionArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:availableSubscription"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="clipcardArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:clipcard"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="availableScopeSubscriptionsArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:availableScopeSubscriptions"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </types>
  <message name="SubscriptionAPI_getSubscriptionCreationInformationResponse">
    <part name="return" type="tns:subscriptionCreationInformation"/>
  </message>
  <message name="SubscriptionAPI_getStopFreezePeriodInfoResponse">
    <part name="return" type="tns:stopFreezePeriodInfo"/>
  </message>
  <message name="SubscriptionAPI_freezeByPaymentCycleResponse"/>
  <message name="SubscriptionAPI_stopSubscription">
    <part name="subscriptionKey" type="tns:compositeKey"/>
    <part name="date" type="xsd:string"/>
    <part name="cancelUsage" type="tns:cancelUsageType"/>
  </message>
  <message name="SubscriptionAPI_getInvoicePreviewForClipcardSaleResponse">
    <part name="return" type="tns:invoice"/>
  </message>
  <message name="SubscriptionAPI_getAvailableSubscriptionsForPersonResponse">
    <part name="return" type="tns:availableSubscriptionArray"/>
  </message>
  <message name="SubscriptionAPI_cancelFreezeResponse"/>
  <message name="SubscriptionAPI_sellClipcard">
    <part name="parameters" type="tns:sellClipcardParameters"/>
  </message>
  <message name="SubscriptionAPI_stopAddOnResponse"/>
  <message name="SubscriptionAPI_changeFreezeEndDateResponse"/>
  <message name="SubscriptionAPI_getInvoicePreviewForClipcardSale">
    <part name="parameters" type="tns:sellClipcardParameters"/>
  </message>
  <message name="SubscriptionAPI_changeEFTSusbcriptionResponse">
    <part name="return" type="tns:changeEFTSubscriptionResult"/>
  </message>
  <message name="SubscriptionAPI_getAvailableSubscriptionsAnonymous">
    <part name="parameters" type="tns:availableSubscriptionsParameters"/>
  </message>
  <message name="SubscriptionAPI_getFreezesResponse">
    <part name="return" type="tns:freezeArray"/>
  </message>
  <message name="SubscriptionAPI_sellAddOns">
    <part name="subscriptionKey" type="tns:compositeKey"/>
    <part name="addonProductKeys" type="tns:compositeKeyArray"/>
    <part name="paymentInfo" type="tns:paymentInfo"/>
    <part name="startDate" type="xsd:string"/>
  </message>
  <message name="SubscriptionAPI_getAvailableFreeze">
    <part name="parameters" type="tns:getAvailableFreezesParameters"/>
  </message>
  <message name="SubscriptionAPI_getAvailableSubscriptionsForScopeResponse">
    <part name="return" type="tns:availableScopeSubscriptionsArray"/>
  </message>
  <message name="SubscriptionAPI_sellClipcardResponse">
    <part name="return" type="tns:compositeKey"/>
  </message>
  <message name="SubscriptionAPI_getFreezes">
    <part name="subscriptionKey" type="tns:compositeKey"/>
    <part name="includeOld" type="xsd:boolean"/>
  </message>
  <message name="SubscriptionAPI_getPersonClipCardsResponse">
    <part name="return" type="tns:clipcardArray"/>
  </message>
  <message name="SubscriptionAPI_getSubscriptionProductsForChangeEFTSubscription">
    <part name="centerId" type="xsd:int"/>
    <part name="personKey" type="tns:apiPersonKey"/>
    <part name="onlyAvailableOnWeb" type="xsd:boolean"/>
  </message>
  <message name="SubscriptionAPI_sellClipcardToPersonOverridePrivilegeResponse">
    <part name="return" type="tns:compositeKey"/>
  </message>
  <message name="SubscriptionAPI_sellAddOnsResponse">
    <part name="return" type="tns:addOnSaleResult"/>
  </message>
  <message name="SubscriptionAPI_getSubscriptionProductsForChangeEFTSubscriptionResponse">
    <part name="return" type="tns:availableSubscriptionArray"/>
  </message>
  <message name="SubscriptionAPI_deleteSubscription">
    <part name="parameters" type="tns:deleteSubscriptionsParameters"/>
  </message>
  <message name="SubscriptionAPI_stopFreeze">
    <part name="freezeKey" type="tns:compositeSubKey"/>
  </message>
  <message name="SubscriptionAPI_getAvailableClipcardsForBookingResponse">
    <part name="return" type="tns:availableClipcardArray"/>
  </message>
  <message name="SubscriptionAPI_sellEFTMembershipResponse">
    <part name="return" type="tns:compositeKey"/>
  </message>
  <message name="SubscriptionAPI_getAvailableAddOnProductsResponse">
    <part name="return" type="tns:availableAddOnProductArray"/>
  </message>
  <message name="SubscriptionAPI_stopAddOn">
    <part name="subscriptionAddonKey" type="xsd:int"/>
    <part name="stopDate" type="xsd:string"/>
  </message>
  <message name="SubscriptionAPI_getPersonSubscriptionsResponse">
    <part name="return" type="tns:subscriptionArray"/>
  </message>
  <message name="SubscriptionAPI_cancelStopSubscription">
    <part name="subscriptionKey" type="tns:compositeKey"/>
  </message>
  <message name="SubscriptionAPI_updateClipcardEndDate">
    <part name="parameters" type="tns:updateClipcardEndDateParameters"/>
  </message>
  <message name="SubscriptionAPI_createFreezeResponse"/>
  <message name="SubscriptionAPI_getSubscriptionPriceList">
    <part name="parameters" type="tns:priceListParameters"/>
  </message>
  <message name="SubscriptionAPI_getPriceForPeriod">
    <part name="subscriptionProductKey" type="tns:compositeKey"/>
    <part name="periodPrice" type="xsd:string"/>
    <part name="fromDate" type="xsd:string"/>
    <part name="toDate" type="xsd:string"/>
  </message>
  <message name="SubscriptionAPI_createFreeze">
    <part name="freeze" type="tns:newFreeze"/>
  </message>
  <message name="SubscriptionAPI_getPersonClipCards">
    <part name="personKey" type="tns:apiPersonKey"/>
    <part name="finished" type="xsd:boolean"/>
    <part name="cancelled" type="xsd:boolean"/>
    <part name="blocked" type="xsd:boolean"/>
  </message>
  <message name="SubscriptionAPI_updateClipcardEndDateResponse">
    <part name="return" type="tns:clipcard"/>
  </message>
  <message name="SubscriptionAPI_getAvailableClipcardsForPerson">
    <part name="parameters" type="tns:getAvailableClipcardsForPersonParameters"/>
  </message>
  <message name="SubscriptionAPI_validateCampaignCodeResponse">
    <part name="return" type="tns:campaignInformationForPerson"/>
  </message>
  <message name="SubscriptionAPI_stopFreezeResponse"/>
  <message name="SubscriptionAPI_getAvailableClipcardsForAnonymous">
    <part name="parameters" type="tns:getAvailableClipcardsForAnonymousParameters"/>
  </message>
  <message name="SubscriptionAPI_changeFreezeEndDate">
    <part name="freezeKey" type="tns:compositeSubKey"/>
    <part name="endDate" type="xsd:string"/>
  </message>
  <message name="SubscriptionAPI_getAvailableSubscriptionsForPerson">
    <part name="parameters" type="tns:getAvailableSubscriptionsParameters"/>
  </message>
  <message name="SubscriptionAPI_deleteSubscriptionResponse">
    <part name="return" type="tns:compositeKey"/>
  </message>
  <message name="SubscriptionAPI_getSubscriptionCreationInformation">
    <part name="parameters" type="tns:getSubscriptionCreationInformationParameters"/>
  </message>
  <message name="SubscriptionAPI_getAvailableClipcardsForBooking">
    <part name="personKey" type="tns:apiPersonKey"/>
    <part name="bookingKey" type="tns:compositeKey"/>
  </message>
  <message name="SubscriptionAPI_updateSubscriptionPrice">
    <part name="subscriptionKey" type="tns:compositeKey"/>
    <part name="price" type="xsd:string"/>
    <part name="binding" type="xsd:boolean"/>
    <part name="fromDate" type="xsd:string"/>
    <part name="note" type="xsd:string"/>
  </message>
  <message name="SubscriptionAPI_getSubscritionContractSummary">
    <part name="parameters" type="tns:subscriptionContractSummaryParameters"/>
  </message>
  <message name="SubscriptionAPI_cancelStopSubscriptionResponse"/>
  <message name="SubscriptionAPI_changeEFTSusbcription">
    <part name="changeEFTSubscriptionParameters" type="tns:changeEFTSubscriptionParameters"/>
    <part name="paymentInfo" type="tns:paymentInfo"/>
  </message>
  <message name="SubscriptionAPI_getClipcardPriceListResponse">
    <part name="return" type="tns:availableClipcardArray"/>
  </message>
  <message name="SubscriptionAPI_getAvailableAddOnProductsForProductResponse">
    <part name="return" type="tns:availableAddOnProductArray"/>
  </message>
  <message name="SubscriptionAPI_getStopFreezePeriodInfo">
    <part name="freezeKey" type="tns:compositeSubKey"/>
  </message>
  <message name="SubscriptionAPI_getClipcardPriceList">
    <part name="parameters" type="tns:priceListParameters"/>
  </message>
  <message name="SubscriptionAPI_validateCampaignCode">
    <part name="parameters" type="tns:validateCampaignCodeParameters"/>
  </message>
  <message name="SubscriptionAPI_getAvailableFreezeResponse">
    <part name="return" type="tns:availableFreeze"/>
  </message>
  <message name="SubscriptionAPI_getAvailableAddOnProductsForProduct">
    <part name="parameters" type="tns:availableAddOnProductsForProductParameters"/>
  </message>
  <message name="SubscriptionAPI_adjustClipsOnClipcard">
    <part name="clipcardKey" type="tns:compositeSubKey"/>
    <part name="numberOfClips" type="xsd:int"/>
    <part name="comment" type="xsd:string"/>
  </message>
  <message name="SubscriptionAPI_stopSubscriptionResponse">
    <part name="return" type="tns:subscriptionStopInfo"/>
  </message>
  <message name="SubscriptionAPI_getChangeEFTSubscriptionDetailsResponse">
    <part name="return" type="tns:changeEFTSubscriptionDetails"/>
  </message>
  <message name="SubscriptionAPI_sellEFTMembership">
    <part name="parameters" type="tns:sellEFTMembershipParameters"/>
  </message>
  <message name="SubscriptionAPI_getSubscriptionPriceListResponse">
    <part name="return" type="tns:availableSubscriptionArray"/>
  </message>
  <message name="SubscriptionAPI_getAvailableAddOnProducts">
    <part name="subscriptionKey" type="tns:compositeKey"/>
  </message>
  <message name="SubscriptionAPI_getInvoicePreviewForSubscriptionSaleResponse">
    <part name="return" type="tns:invoice"/>
  </message>
  <message name="SubscriptionAPI_sellNewCASHSubscription">
    <part name="parameters" type="tns:sellCASHSubscriptionParameter"/>
  </message>
  <message name="SubscriptionAPI_sellClipcardToPersonOverridePrivilege">
    <part name="personKey" type="tns:apiPersonKey"/>
    <part name="productKey" type="tns:compositeKey"/>
    <part name="paymentInfo" type="tns:paymentInfo"/>
    <part name="clipcardPriceOverride" type="xsd:string"/>
  </message>
  <message name="SubscriptionAPI_getAvailableSubscriptionsAnonymousResponse">
    <part name="return" type="tns:availableSubscriptionArray"/>
  </message>
  <message name="SubscriptionAPI_getSubscritionContractSummaryResponse">
    <part name="return" type="tns:subscriptionContractSummary"/>
  </message>
  <message name="SubscriptionAPI_getPriceForPeriodResponse">
    <part name="return" type="xsd:string"/>
  </message>
  <message name="SubscriptionAPI_freezeByPaymentCycle">
    <part name="parameters" type="tns:freezeByPaymentCycleParameters"/>
  </message>
  <message name="SubscriptionAPI_getPersonSubscriptions">
    <part name="personKey" type="tns:apiPersonKey"/>
    <part name="onlyActive" type="xsd:boolean"/>
  </message>
  <message name="SubscriptionAPI_getAvailableClipcardsForBookingAndFriendsResponse">
    <part name="return" type="tns:availableClipcardArray"/>
  </message>
  <message name="SubscriptionAPI_sellNewCASHSubscriptionResponse">
    <part name="return" type="tns:compositeKey"/>
  </message>
  <message name="SubscriptionAPI_getAvailableClipcardsForPersonResponse">
    <part name="return" type="tns:availableClipcardArray"/>
  </message>
  <message name="SubscriptionAPI_updateSubscriptionPriceResponse"/>
  <message name="SubscriptionAPI_cancelFreeze">
    <part name="freezeKey" type="tns:compositeSubKey"/>
  </message>
  <message name="SubscriptionAPI_getAvailableClipcardsForAnonymousResponse">
    <part name="return" type="tns:getAvailableClipcardsForAnonymousResponse"/>
  </message>
  <message name="SubscriptionAPI_adjustClipsOnClipcardResponse">
    <part name="return" type="xsd:int"/>
  </message>
  <message name="SubscriptionAPI_getChangeEFTSubscriptionDetails">
    <part name="parameters" type="tns:changeEFTSubscriptionParameters"/>
  </message>
  <message name="SubscriptionAPI_getInvoicePreviewForSubscriptionSale">
    <part name="parameters" type="tns:sellEFTMembershipParameters"/>
  </message>
  <message name="APIException">
    <part element="tns:APIException" name="APIException"/>
  </message>
  <message name="SubscriptionAPI_getAvailableClipcardsForBookingAndFriends">
    <part name="parameters" type="tns:getAvailableClipcardsForBookingAndFriendsParameter"/>
  </message>
  <message name="SubscriptionAPI_getAvailableSubscriptionsForScope">
    <part name="parameters" type="tns:availableSubscriptionsForScopeParameters"/>
  </message>
  <portType name="SubscriptionAPI">
    <operation name="adjustClipsOnClipcard" parameterOrder="clipcardKey numberOfClips comment">
      <input message="tns:SubscriptionAPI_adjustClipsOnClipcard"/>
      <output message="tns:SubscriptionAPI_adjustClipsOnClipcardResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="cancelFreeze" parameterOrder="freezeKey">
      <input message="tns:SubscriptionAPI_cancelFreeze"/>
      <output message="tns:SubscriptionAPI_cancelFreezeResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="cancelStopSubscription" parameterOrder="subscriptionKey">
      <input message="tns:SubscriptionAPI_cancelStopSubscription"/>
      <output message="tns:SubscriptionAPI_cancelStopSubscriptionResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="changeEFTSusbcription" parameterOrder="changeEFTSubscriptionParameters paymentInfo">
      <input message="tns:SubscriptionAPI_changeEFTSusbcription"/>
      <output message="tns:SubscriptionAPI_changeEFTSusbcriptionResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="changeFreezeEndDate" parameterOrder="freezeKey endDate">
      <input message="tns:SubscriptionAPI_changeFreezeEndDate"/>
      <output message="tns:SubscriptionAPI_changeFreezeEndDateResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="createFreeze" parameterOrder="freeze">
      <input message="tns:SubscriptionAPI_createFreeze"/>
      <output message="tns:SubscriptionAPI_createFreezeResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="deleteSubscription" parameterOrder="parameters">
      <input message="tns:SubscriptionAPI_deleteSubscription"/>
      <output message="tns:SubscriptionAPI_deleteSubscriptionResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="freezeByPaymentCycle" parameterOrder="parameters">
      <input message="tns:SubscriptionAPI_freezeByPaymentCycle"/>
      <output message="tns:SubscriptionAPI_freezeByPaymentCycleResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getAvailableAddOnProducts" parameterOrder="subscriptionKey">
      <input message="tns:SubscriptionAPI_getAvailableAddOnProducts"/>
      <output message="tns:SubscriptionAPI_getAvailableAddOnProductsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getAvailableAddOnProductsForProduct" parameterOrder="parameters">
      <input message="tns:SubscriptionAPI_getAvailableAddOnProductsForProduct"/>
      <output message="tns:SubscriptionAPI_getAvailableAddOnProductsForProductResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getAvailableClipcardsForAnonymous" parameterOrder="parameters">
      <input message="tns:SubscriptionAPI_getAvailableClipcardsForAnonymous"/>
      <output message="tns:SubscriptionAPI_getAvailableClipcardsForAnonymousResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getAvailableClipcardsForBooking" parameterOrder="personKey bookingKey">
      <input message="tns:SubscriptionAPI_getAvailableClipcardsForBooking"/>
      <output message="tns:SubscriptionAPI_getAvailableClipcardsForBookingResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getAvailableClipcardsForBookingAndFriends" parameterOrder="parameters">
      <input message="tns:SubscriptionAPI_getAvailableClipcardsForBookingAndFriends"/>
      <output message="tns:SubscriptionAPI_getAvailableClipcardsForBookingAndFriendsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getAvailableClipcardsForPerson" parameterOrder="parameters">
      <input message="tns:SubscriptionAPI_getAvailableClipcardsForPerson"/>
      <output message="tns:SubscriptionAPI_getAvailableClipcardsForPersonResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getAvailableFreeze" parameterOrder="parameters">
      <input message="tns:SubscriptionAPI_getAvailableFreeze"/>
      <output message="tns:SubscriptionAPI_getAvailableFreezeResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getAvailableSubscriptionsAnonymous" parameterOrder="parameters">
      <input message="tns:SubscriptionAPI_getAvailableSubscriptionsAnonymous"/>
      <output message="tns:SubscriptionAPI_getAvailableSubscriptionsAnonymousResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getAvailableSubscriptionsForPerson" parameterOrder="parameters">
      <input message="tns:SubscriptionAPI_getAvailableSubscriptionsForPerson"/>
      <output message="tns:SubscriptionAPI_getAvailableSubscriptionsForPersonResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getAvailableSubscriptionsForScope" parameterOrder="parameters">
      <input message="tns:SubscriptionAPI_getAvailableSubscriptionsForScope"/>
      <output message="tns:SubscriptionAPI_getAvailableSubscriptionsForScopeResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getChangeEFTSubscriptionDetails" parameterOrder="parameters">
      <input message="tns:SubscriptionAPI_getChangeEFTSubscriptionDetails"/>
      <output message="tns:SubscriptionAPI_getChangeEFTSubscriptionDetailsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getClipcardPriceList" parameterOrder="parameters">
      <input message="tns:SubscriptionAPI_getClipcardPriceList"/>
      <output message="tns:SubscriptionAPI_getClipcardPriceListResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getFreezes" parameterOrder="subscriptionKey includeOld">
      <input message="tns:SubscriptionAPI_getFreezes"/>
      <output message="tns:SubscriptionAPI_getFreezesResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getInvoicePreviewForClipcardSale" parameterOrder="parameters">
      <input message="tns:SubscriptionAPI_getInvoicePreviewForClipcardSale"/>
      <output message="tns:SubscriptionAPI_getInvoicePreviewForClipcardSaleResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getInvoicePreviewForSubscriptionSale" parameterOrder="parameters">
      <input message="tns:SubscriptionAPI_getInvoicePreviewForSubscriptionSale"/>
      <output message="tns:SubscriptionAPI_getInvoicePreviewForSubscriptionSaleResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getPersonClipCards" parameterOrder="personKey finished cancelled blocked">
      <input message="tns:SubscriptionAPI_getPersonClipCards"/>
      <output message="tns:SubscriptionAPI_getPersonClipCardsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getPersonSubscriptions" parameterOrder="personKey onlyActive">
      <input message="tns:SubscriptionAPI_getPersonSubscriptions"/>
      <output message="tns:SubscriptionAPI_getPersonSubscriptionsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getPriceForPeriod" parameterOrder="subscriptionProductKey periodPrice fromDate toDate">
      <input message="tns:SubscriptionAPI_getPriceForPeriod"/>
      <output message="tns:SubscriptionAPI_getPriceForPeriodResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getStopFreezePeriodInfo" parameterOrder="freezeKey">
      <input message="tns:SubscriptionAPI_getStopFreezePeriodInfo"/>
      <output message="tns:SubscriptionAPI_getStopFreezePeriodInfoResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getSubscriptionCreationInformation" parameterOrder="parameters">
      <input message="tns:SubscriptionAPI_getSubscriptionCreationInformation"/>
      <output message="tns:SubscriptionAPI_getSubscriptionCreationInformationResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getSubscriptionPriceList" parameterOrder="parameters">
      <input message="tns:SubscriptionAPI_getSubscriptionPriceList"/>
      <output message="tns:SubscriptionAPI_getSubscriptionPriceListResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getSubscriptionProductsForChangeEFTSubscription" parameterOrder="centerId personKey onlyAvailableOnWeb">
      <input message="tns:SubscriptionAPI_getSubscriptionProductsForChangeEFTSubscription"/>
      <output message="tns:SubscriptionAPI_getSubscriptionProductsForChangeEFTSubscriptionResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getSubscritionContractSummary" parameterOrder="parameters">
      <input message="tns:SubscriptionAPI_getSubscritionContractSummary"/>
      <output message="tns:SubscriptionAPI_getSubscritionContractSummaryResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="sellAddOns" parameterOrder="subscriptionKey addonProductKeys paymentInfo startDate">
      <input message="tns:SubscriptionAPI_sellAddOns"/>
      <output message="tns:SubscriptionAPI_sellAddOnsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="sellClipcard" parameterOrder="parameters">
      <input message="tns:SubscriptionAPI_sellClipcard"/>
      <output message="tns:SubscriptionAPI_sellClipcardResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="sellClipcardToPersonOverridePrivilege" parameterOrder="personKey productKey paymentInfo clipcardPriceOverride">
      <input message="tns:SubscriptionAPI_sellClipcardToPersonOverridePrivilege"/>
      <output message="tns:SubscriptionAPI_sellClipcardToPersonOverridePrivilegeResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="sellEFTMembership" parameterOrder="parameters">
      <input message="tns:SubscriptionAPI_sellEFTMembership"/>
      <output message="tns:SubscriptionAPI_sellEFTMembershipResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="sellNewCASHSubscription" parameterOrder="parameters">
      <input message="tns:SubscriptionAPI_sellNewCASHSubscription"/>
      <output message="tns:SubscriptionAPI_sellNewCASHSubscriptionResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="stopAddOn" parameterOrder="subscriptionAddonKey stopDate">
      <input message="tns:SubscriptionAPI_stopAddOn"/>
      <output message="tns:SubscriptionAPI_stopAddOnResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="stopFreeze" parameterOrder="freezeKey">
      <input message="tns:SubscriptionAPI_stopFreeze"/>
      <output message="tns:SubscriptionAPI_stopFreezeResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="stopSubscription" parameterOrder="subscriptionKey date cancelUsage">
      <input message="tns:SubscriptionAPI_stopSubscription"/>
      <output message="tns:SubscriptionAPI_stopSubscriptionResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="updateClipcardEndDate" parameterOrder="parameters">
      <input message="tns:SubscriptionAPI_updateClipcardEndDate"/>
      <output message="tns:SubscriptionAPI_updateClipcardEndDateResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="updateSubscriptionPrice" parameterOrder="subscriptionKey price binding fromDate note">
      <input message="tns:SubscriptionAPI_updateSubscriptionPrice"/>
      <output message="tns:SubscriptionAPI_updateSubscriptionPriceResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="validateCampaignCode" parameterOrder="parameters">
      <input message="tns:SubscriptionAPI_validateCampaignCode"/>
      <output message="tns:SubscriptionAPI_validateCampaignCodeResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
  </portType>
  <binding name="SubscriptionAPIBinding" type="tns:SubscriptionAPI">
    <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="adjustClipsOnClipcard">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="cancelFreeze">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="cancelStopSubscription">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="changeEFTSusbcription">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="changeFreezeEndDate">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="createFreeze">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="deleteSubscription">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="freezeByPaymentCycle">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getAvailableAddOnProducts">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getAvailableAddOnProductsForProduct">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getAvailableClipcardsForAnonymous">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getAvailableClipcardsForBooking">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getAvailableClipcardsForBookingAndFriends">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getAvailableClipcardsForPerson">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getAvailableFreeze">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getAvailableSubscriptionsAnonymous">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getAvailableSubscriptionsForPerson">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getAvailableSubscriptionsForScope">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getChangeEFTSubscriptionDetails">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getClipcardPriceList">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getFreezes">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getInvoicePreviewForClipcardSale">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getInvoicePreviewForSubscriptionSale">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getPersonClipCards">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getPersonSubscriptions">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getPriceForPeriod">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getStopFreezePeriodInfo">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getSubscriptionCreationInformation">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getSubscriptionPriceList">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getSubscriptionProductsForChangeEFTSubscription">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getSubscritionContractSummary">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="sellAddOns">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="sellClipcard">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="sellClipcardToPersonOverridePrivilege">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="sellEFTMembership">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="sellNewCASHSubscription">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="stopAddOn">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="stopFreeze">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="stopSubscription">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="updateClipcardEndDate">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="updateSubscriptionPrice">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="validateCampaignCode">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
  </binding>
  <service name="SubscriptionAPIService">
    <port binding="tns:SubscriptionAPIBinding" name="SubscriptionAPIPort">
      <soap:address location="https://lite-test.exerp.com/api/v5/SubscriptionAPI"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://lite-test.exerp.com/api/v5/SubscriptionAPI</con:endpoint></con:endpoints><con:operation id="c245eb3b-90b5-411c-800a-9852a1adf7f6" isOneWay="false" action="" name="adjustClipsOnClipcard" bindingOperationName="adjustClipsOnClipcard" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="f8490f91-d636-49b7-8da3-f371078e9423" isOneWay="false" action="" name="cancelFreeze" bindingOperationName="cancelFreeze" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="924537b3-41eb-420f-83d2-a63b14078a80" isOneWay="false" action="" name="cancelStopSubscription" bindingOperationName="cancelStopSubscription" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="a4be79cb-7e79-4210-847a-a19682d7af24" isOneWay="false" action="" name="changeEFTSusbcription" bindingOperationName="changeEFTSusbcription" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="c1f3bb9d-088c-4486-8776-6e8b373ece80" isOneWay="false" action="" name="changeFreezeEndDate" bindingOperationName="changeFreezeEndDate" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="d831cc2f-6d86-4e91-95ac-f467981d31ca" isOneWay="false" action="" name="createFreeze" bindingOperationName="createFreeze" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="d6e08656-d905-4a1a-badb-ceab3c9e1f15" isOneWay="false" action="" name="deleteSubscription" bindingOperationName="deleteSubscription" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="ae08bfe6-9d69-46f2-84de-b32d9ee30fb0" isOneWay="false" action="" name="freezeByPaymentCycle" bindingOperationName="freezeByPaymentCycle" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="dfbf860b-2aae-4d6e-b700-4fab160e053c" isOneWay="false" action="" name="getAvailableAddOnProducts" bindingOperationName="getAvailableAddOnProducts" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="984d5471-89a3-471a-8147-29b1de790070" name="getAvailableAddOnProducts"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://skilld.exerp.qa/api/v5/SubscriptionAPI</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:getAvailableAddOnProducts>
         <subscriptionKey>
            <center>1400</center>
            <id>1602</id>
         </subscriptionKey>
      </v5:getAvailableAddOnProducts>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>100emp1</con:username><con:password>vombat</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/SubscriptionAPI/getAvailableAddOnProductsRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="b845a344-e324-4f5c-8593-d04b3fc79fbc" isOneWay="false" action="" name="getAvailableAddOnProductsForProduct" bindingOperationName="getAvailableAddOnProductsForProduct" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e951208a-44b7-42bf-98e0-637bdaa208b5" name="getAvailableAddOnProductsForProduct"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://skilld.exerp.qa/api/v5/SubscriptionAPI</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:getAvailableAddOnProductsForProduct>
         <parameters>
            <onlyAvailableOnWeb>?</onlyAvailableOnWeb>
            <!--Optional:-->
            <personType>PRIVATE</personType>
            <productId>
               <center>1400</center>
               <id>202</id>
            </productId>
         </parameters>
      </v5:getAvailableAddOnProductsForProduct>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>100emp1</con:username><con:password>vombat</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/SubscriptionAPI/getAvailableAddOnProductsForProductRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="8dc9ea6f-a05a-4a9c-a32c-df270276ea48" isOneWay="false" action="" name="getAvailableClipcardsForAnonymous" bindingOperationName="getAvailableClipcardsForAnonymous" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="ac7d9ca1-ace7-478f-9c99-a9acfdffdeaf" isOneWay="false" action="" name="getAvailableClipcardsForBooking" bindingOperationName="getAvailableClipcardsForBooking" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="1d69082c-b853-4ad1-8e3b-f2a195996e08" isOneWay="false" action="" name="getAvailableClipcardsForBookingAndFriends" bindingOperationName="getAvailableClipcardsForBookingAndFriends" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="8a916355-69f2-43ee-af38-1d73913de9e9" isOneWay="false" action="" name="getAvailableClipcardsForPerson" bindingOperationName="getAvailableClipcardsForPerson" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="18bcffdc-8efc-4edf-bfdf-e10a94f15481" isOneWay="false" action="" name="getAvailableFreeze" bindingOperationName="getAvailableFreeze" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="246496da-b1b9-4594-8ada-2e973339a28b" isOneWay="false" action="" name="getAvailableSubscriptionsAnonymous" bindingOperationName="getAvailableSubscriptionsAnonymous" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="bca8639b-6a5b-45a2-bef4-85f854476437" name="getAvailableSubscriptionsAnonymous"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://skilld.exerp.qa/api/v5/SubscriptionAPI</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:getAvailableSubscriptionsAnonymous>
         <parameters>
            <centerId>1400</centerId>
            <onlyAvailableOnWeb>true</onlyAvailableOnWeb>
            <personType>PRIVATE</personType>
         </parameters>
      </v5:getAvailableSubscriptionsAnonymous>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>100emp1</con:username><con:password>vombat</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/SubscriptionAPI/getAvailableSubscriptionsAnonymousRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="f9662390-d4b0-4b22-8b8b-3315a97f3e58" isOneWay="false" action="" name="getAvailableSubscriptionsForPerson" bindingOperationName="getAvailableSubscriptionsForPerson" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8a9a66c0-ab73-45b7-b748-8f61579784e3" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://skilld.exerp.qa/api/v5/SubscriptionAPI</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:getAvailableSubscriptionsForPerson>
         <parameters>
            <personKey>
               <center>131</center>
               <id>1707</id>
               <!--Optional:-->
               <externalId>11194</externalId>
            </personKey>
            <subscriptionType>EFT</subscriptionType>
         </parameters>
      </v5:getAvailableSubscriptionsForPerson>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>100emp2401</con:username><con:password>b8n1OfNkej</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/SubscriptionAPI/getAvailableSubscriptionsForPersonRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="014d976c-5c03-4f3e-9cf0-33699e392372" isOneWay="false" action="" name="getAvailableSubscriptionsForScope" bindingOperationName="getAvailableSubscriptionsForScope" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="30cf3de9-7a1f-4863-8254-7a25a42c3a5a" isOneWay="false" action="" name="getChangeEFTSubscriptionDetails" bindingOperationName="getChangeEFTSubscriptionDetails" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="2926320b-eea2-47cb-bb07-586c7b52f194" isOneWay="false" action="" name="getClipcardPriceList" bindingOperationName="getClipcardPriceList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="b93a1b63-425c-4323-82a1-348b00f83324" isOneWay="false" action="" name="getFreezes" bindingOperationName="getFreezes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="7f9c7ea1-85a9-4efc-975a-35eda172c40d" isOneWay="false" action="" name="getInvoicePreviewForClipcardSale" bindingOperationName="getInvoicePreviewForClipcardSale" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="80d102fa-a78a-467e-b9f0-94745f087c55" isOneWay="false" action="" name="getInvoicePreviewForSubscriptionSale" bindingOperationName="getInvoicePreviewForSubscriptionSale" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="c75f8ef4-7e3e-4698-8242-4575ab55da0a" isOneWay="false" action="" name="getPersonClipCards" bindingOperationName="getPersonClipCards" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="c381e473-f7da-4c43-9f1a-51a2495550a0" isOneWay="false" action="" name="getPersonSubscriptions" bindingOperationName="getPersonSubscriptions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8a3d6cee-3e39-40a1-90a4-db3d397f9cc5" name="getPersonSubscriptions"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://skilld.exerp.qa/api/v5/SubscriptionAPI</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:getPersonSubscriptions>
         <personKey>
            <center>121</center>
            <id>816</id>
         </personKey>
         <onlyActive>true</onlyActive>
      </v5:getPersonSubscriptions>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>100emp1</con:username><con:password>vombat</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/SubscriptionAPI/getPersonSubscriptionsRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="6cc6e5c3-bedc-4b93-be2d-443ef013f0b7" isOneWay="false" action="" name="getPriceForPeriod" bindingOperationName="getPriceForPeriod" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="629232bd-2ef8-473f-8d89-8f684e9d60ed" isOneWay="false" action="" name="getStopFreezePeriodInfo" bindingOperationName="getStopFreezePeriodInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="7b4df39d-e358-4547-a99b-a51a200961d5" isOneWay="false" action="" name="getSubscriptionCreationInformation" bindingOperationName="getSubscriptionCreationInformation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="e1084434-1c26-457b-8cc9-694719186199" isOneWay="false" action="" name="getSubscriptionPriceList" bindingOperationName="getSubscriptionPriceList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="77e64442-56c4-4f4f-b5ea-18b443195740" isOneWay="false" action="" name="getSubscriptionProductsForChangeEFTSubscription" bindingOperationName="getSubscriptionProductsForChangeEFTSubscription" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="e88275c3-19dc-490a-94ba-9115cc25da3a" isOneWay="false" action="" name="getSubscritionContractSummary" bindingOperationName="getSubscritionContractSummary" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="89cb0b1f-aeb1-439e-b70f-9660e9283ff5" name="getSubscriptionContractSummary"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://skilld.exerp.qa/api/v5/SubscriptionAPI</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:getSubscriptionContractSummary>
         <parameters>
            <centerId>121</centerId>
            <!--Optional:-->
            <clearingHouseType>EFT</clearingHouseType>
            <personType>PRIVATE</personType>
            <startDate>2019-04-18</startDate>
            <subscriptionProductKey>
               <center>121</center>
               <id>2008</id>
            </subscriptionProductKey>
         </parameters>
      </v5:getSubscriptionContractSummary>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>100emp1</con:username><con:password>vombat</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/SubscriptionAPI/getSubscritionContractSummaryRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="dd092581-67c4-40d3-a3cd-755b8453eb19" isOneWay="false" action="" name="sellAddOns" bindingOperationName="sellAddOns" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="50e9776d-885b-4454-97b0-29edc0a54129" name="sellAddOns"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://skilld.exerp.qa/api/v5/SubscriptionAPI</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:sellAddOns>
         <subscriptionKey>
            <center>?</center>
            <id>?</id>
         </subscriptionKey>
         <addonProductKeys>
            <!--Zero or more repetitions:-->
            <item>
               <center>?</center>
               <id>?</id>
            </item>
         </addonProductKeys>
         <paymentInfo>
            <!--Optional:-->
            <amountPaidByCustomer>?</amountPaidByCustomer>
            <!--Optional:-->
            <creditCardPaymentInfo>
               <!--Optional:-->
               <cardDetailsEncrypted>?</cardDetailsEncrypted>
               <createAgreement>?</createAgreement>
               <!--Optional:-->
               <replacePaymentAgreementKey>
                  <center>?</center>
                  <id>?</id>
                  <subId>?</subId>
               </replacePaymentAgreementKey>
            </creditCardPaymentInfo>
            <!--Optional:-->
            <creditCardTransactionRef>?</creditCardTransactionRef>
            <!--Optional:-->
            <installmentPlanConfigExternalId>?</installmentPlanConfigExternalId>
            <!--Optional:-->
            <paymentAgreementKeyForCollection>
               <center>?</center>
               <id>?</id>
               <subId>?</subId>
            </paymentAgreementKeyForCollection>
            <paymentMethod>?</paymentMethod>
            <!--Optional:-->
            <shoppingBasketCenter>?</shoppingBasketCenter>
         </paymentInfo>
         <startDate>?</startDate>
      </v5:sellAddOns>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>100emp1</con:username><con:password>vombat</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/SubscriptionAPI/sellAddOnsRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="c149755d-f31f-49d1-ac4f-2b6f1d32964a" isOneWay="false" action="" name="sellClipcard" bindingOperationName="sellClipcard" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="30e83828-b4f8-43d3-9c7d-f1289b5b9dea" isOneWay="false" action="" name="sellClipcardToPersonOverridePrivilege" bindingOperationName="sellClipcardToPersonOverridePrivilege" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="930ce253-cf05-4464-a661-63ad34ba08f0" isOneWay="false" action="" name="sellEFTMembership" bindingOperationName="sellEFTMembership" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="56b11da7-a675-4a5c-97b8-e7f09be4304e" name="sellEFTMembership"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://skilld.exerp.qa/api/v5/SubscriptionAPI</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:sellEFTMembership>
         <parameters>
            <!--Optional:-->
            <addOnProductKeys>
               <!--1 or more repetitions:-->
               <addOnProductKey>
                  <center>?</center>
                  <id>?</id>
               </addOnProductKey>
            </addOnProductKeys>
            <!--Optional:-->
            <addOnProductPriceOverrides>
               <!--1 or more repetitions:-->
               <addOnProductPriceOverride>
                  <addOnProductKey>
                     <center>?</center>
                     <id>?</id>
                  </addOnProductKey>
                  <price>?</price>
               </addOnProductPriceOverride>
            </addOnProductPriceOverrides>
            <!--Optional:-->
            <campaignCode>?</campaignCode>
            <!--Optional:-->
            <checkValidAgreement>?</checkValidAgreement>
            <!--Optional:-->
            <overrideAdminFeeProductPrice>?</overrideAdminFeeProductPrice>
            <!--Optional:-->
            <overrideCreationProductPrice>?</overrideCreationProductPrice>
            <paymentInfo>
               <!--Optional:-->
               <amountPaidByCustomer>?</amountPaidByCustomer>
               <!--Optional:-->
               <creditCardPaymentInfo>
                  <!--Optional:-->
                  <cardDetailsEncrypted>?</cardDetailsEncrypted>
                  <createAgreement>?</createAgreement>
                  <!--Optional:-->
                  <replacePaymentAgreementKey>
                     <center>?</center>
                     <id>?</id>
                     <subId>?</subId>
                  </replacePaymentAgreementKey>
               </creditCardPaymentInfo>
               <!--Optional:-->
               <creditCardTransactionRef>?</creditCardTransactionRef>
               <!--Optional:-->
               <installmentPlanConfigExternalId>?</installmentPlanConfigExternalId>
               <!--Optional:-->
               <paymentAgreementKeyForCollection>
                  <center>?</center>
                  <id>?</id>
                  <subId>?</subId>
               </paymentAgreementKeyForCollection>
               <paymentMethod>?</paymentMethod>
               <!--Optional:-->
               <shoppingBasketCenter>?</shoppingBasketCenter>
            </paymentInfo>
            <!--Optional:-->
            <periodPrice>?</periodPrice>
            <personId>
               <center>?</center>
               <id>?</id>
               <!--Optional:-->
               <externalId>?</externalId>
            </personId>
            <productId>
               <center>?</center>
               <id>?</id>
            </productId>
            <startDate>?</startDate>
         </parameters>
      </v5:sellEFTMembership>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>100emp1</con:username><con:password>vombat</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/SubscriptionAPI/sellEFTMembershipRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="2ee44bbd-1737-46f8-aadd-34fc092371c8" isOneWay="false" action="" name="sellNewCASHSubscription" bindingOperationName="sellNewCASHSubscription" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="991ee7ab-accd-462a-aeb1-0132d7df651e" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://lite-test.exerp.com/api/v5/SubscriptionAPI</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:sellNewCASHSubscription>
         <parameters>
            <!--Zero or more repetitions:-->
            <addOnProductKeys>?</addOnProductKeys>
            <!--Optional:-->
            <addOnProductPriceOverrides>
               <!--1 or more repetitions:-->
               <addOnProductPriceOverride>
                  <addOnProductKey>
                     <center>?</center>
                     <id>?</id>
                  </addOnProductKey>
                  <price>?</price>
               </addOnProductPriceOverride>
            </addOnProductPriceOverrides>
            <!--Zero or more repetitions:-->
            <addonProducts>
               <center>?</center>
               <id>?</id>
            </addonProducts>
            <!--Optional:-->
            <campaignCode>?</campaignCode>
            <!--Optional:-->
            <creationPrice>?</creationPrice>
            <!--Optional:-->
            <overrideAdminFeeProductPrice>?</overrideAdminFeeProductPrice>
            <!--Optional:-->
            <paymentInfo>
               <!--Optional:-->
               <amountPaidByCustomer>?</amountPaidByCustomer>
               <!--Optional:-->
               <creditCardPaymentInfo>
                  <!--Optional:-->
                  <cardDetailsEncrypted>?</cardDetailsEncrypted>
                  <createAgreement>?</createAgreement>
                  <!--Optional:-->
                  <replacePaymentAgreementKey>
                     <center>?</center>
                     <id>?</id>
                     <subId>?</subId>
                  </replacePaymentAgreementKey>
               </creditCardPaymentInfo>
               <!--Optional:-->
               <creditCardTransactionRef>?</creditCardTransactionRef>
               <!--Optional:-->
               <installmentPlanConfigExternalId>?</installmentPlanConfigExternalId>
               <!--Optional:-->
               <paymentAgreementKeyForCollection>
                  <center>?</center>
                  <id>?</id>
                  <subId>?</subId>
               </paymentAgreementKeyForCollection>
               <paymentMethod>?</paymentMethod>
               <!--Optional:-->
               <shoppingBasketCenter>?</shoppingBasketCenter>
            </paymentInfo>
            <!--Optional:-->
            <periodEnd>?</periodEnd>
            <!--Optional:-->
            <periodPrice>?</periodPrice>
            <periodStart>?</periodStart>
            <personId>
               <center>?</center>
               <id>?</id>
               <!--Optional:-->
               <externalId>?</externalId>
            </personId>
            <subscriptionProductId>
               <center>?</center>
               <id>?</id>
            </subscriptionProductId>
         </parameters>
      </v5:sellNewCASHSubscription>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/SubscriptionAPI/sellNewCASHSubscriptionRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="fe938fc0-0c88-4dc2-a6c2-dc24fdbbc2e2" isOneWay="false" action="" name="stopAddOn" bindingOperationName="stopAddOn" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="0b91cda0-e96e-40f9-85e5-4dc236c32a85" isOneWay="false" action="" name="stopFreeze" bindingOperationName="stopFreeze" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="093e4d8e-9069-4586-ab3c-696871ea59c9" isOneWay="false" action="" name="stopSubscription" bindingOperationName="stopSubscription" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="fc8e08e9-5866-47f9-9282-d8e10f133d36" isOneWay="false" action="" name="updateClipcardEndDate" bindingOperationName="updateClipcardEndDate" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="e2874cad-e446-4902-babf-f8e4c5aee616" isOneWay="false" action="" name="updateSubscriptionPrice" bindingOperationName="updateSubscriptionPrice" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="a76a5259-3ff2-4755-8692-e117cafbfbc6" isOneWay="false" action="" name="validateCampaignCode" bindingOperationName="validateCampaignCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="75bfaced-c2c2-430a-8b6c-2205542f1c38" name="validateCampaignCode"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://skilld.exerp.qa/api/v5/SubscriptionAPI</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:validateCampaignCode>
         <parameters>
            <campaignCode>Summer</campaignCode>
            <center>1400</center>
         </parameters>
      </v5:validateCampaignCode>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>100emp1</con:username><con:password>vombat</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/SubscriptionAPI/validateCampaignCodeRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="8263b382-77b1-4655-ab1a-22a3d4505bc1" wsaVersion="NONE" name="CenterAPIBinding" type="wsdl" bindingName="{http://v5.api.eclub.procard.dk/}CenterAPIBinding" soapVersion="1_1" anonymous="optional" definition="https://lite-test.exerp.com/api/v5/CenterAPI?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://lite-test.exerp.com/api/v5/CenterAPI?wsdl"><con:part><con:url>https://lite-test.exerp.com/api/v5/CenterAPI?wsdl</con:url><con:content><![CDATA[<definitions name="CenterAPIService" targetNamespace="http://v5.api.eclub.procard.dk/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://v5.api.eclub.procard.dk/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <types>
    <xs:schema targetNamespace="http://v5.api.eclub.procard.dk/" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="APIException" type="tns:APIException"/>
      <xs:complexType name="centerDetail">
        <xs:sequence>
          <xs:element minOccurs="0" name="centerId" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="shortName" type="xs:string"/>
          <xs:element minOccurs="0" name="webName" type="xs:string"/>
          <xs:element minOccurs="0" name="address" type="tns:address"/>
          <xs:element minOccurs="0" name="organizationCode" type="xs:string"/>
          <xs:element minOccurs="0" name="externalId" type="xs:string"/>
          <xs:element minOccurs="0" name="email" type="xs:string"/>
          <xs:element minOccurs="0" name="phoneNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="faxNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="websiteURL" type="xs:string"/>
          <xs:element minOccurs="0" name="coordinate" type="tns:coordinate"/>
          <xs:element minOccurs="0" name="startupDate" type="xs:string"/>
          <xs:element minOccurs="0" name="generalManager" type="tns:centerEmployee"/>
          <xs:element minOccurs="0" name="assistantManager" type="tns:centerEmployee"/>
          <xs:element minOccurs="0" name="extendedAttributes">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="extendedAttribute" type="tns:extendedAttribute"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="openingSchedule" type="tns:schedule"/>
          <xs:element minOccurs="0" name="centerStaffedSchedule" type="tns:schedule"/>
          <xs:element minOccurs="0" name="facilityUrl" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="address">
        <xs:sequence>
          <xs:element name="address1" type="xs:string"/>
          <xs:element minOccurs="0" name="address2" type="xs:string"/>
          <xs:element minOccurs="0" name="address3" type="xs:string"/>
          <xs:element minOccurs="0" name="coName" type="xs:string"/>
          <xs:element name="country" type="xs:string"/>
          <xs:element minOccurs="0" name="county" type="xs:string"/>
          <xs:element minOccurs="0" name="province" type="xs:string"/>
          <xs:element name="zip" type="xs:string"/>
          <xs:element minOccurs="0" name="zipName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="coordinate">
        <xs:sequence>
          <xs:element name="latitude" type="xs:double"/>
          <xs:element name="longitude" type="xs:double"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="centerEmployee">
        <xs:sequence>
          <xs:element minOccurs="0" name="fullName" type="xs:string"/>
          <xs:element minOccurs="0" name="email" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="extendedAttribute">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:string"/>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="schedule">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="dailySchedule" type="tns:dailySchedule"/>
          <xs:element minOccurs="0" name="weeklySchedule" type="tns:weeklySchedule"/>
          <xs:element minOccurs="0" name="businessSchedule" type="tns:businessSchedule"/>
          <xs:element minOccurs="0" name="overrides">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="override" type="tns:scheduleOverride"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="dailySchedule">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="daily" nillable="true" type="tns:interval"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="interval">
        <xs:sequence>
          <xs:element name="from" type="xs:string"/>
          <xs:element name="to" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="weeklySchedule">
        <xs:sequence>
          <xs:element minOccurs="0" name="monday">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="interval" type="tns:interval"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="tuesday">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="interval" type="tns:interval"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="wednesday">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="interval" type="tns:interval"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="thursday">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="interval" type="tns:interval"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="friday">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="interval" type="tns:interval"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="saturday">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="interval" type="tns:interval"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="sunday">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="interval" type="tns:interval"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="businessSchedule">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="businessDays" nillable="true" type="tns:interval"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="weekendAndHolidays" nillable="true" type="tns:interval"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="scheduleOverride">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:int"/>
          <xs:element minOccurs="0" name="date" type="xs:string"/>
          <xs:element minOccurs="0" name="interval" type="tns:interval"/>
          <xs:element name="openAllDay" type="xs:boolean"/>
          <xs:element name="closedAllDay" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="APIException">
        <xs:sequence>
          <xs:element minOccurs="0" name="errorCode" type="tns:errorCode"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="errorDetail" type="tns:errorDetail"/>
          <xs:element minOccurs="0" name="errorMessage" type="xs:string"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="errorDetail">
        <xs:sequence>
          <xs:element minOccurs="0" name="info" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:errorDetailType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="center">
        <xs:sequence>
          <xs:element minOccurs="0" name="address" type="tns:address"/>
          <xs:element minOccurs="0" name="centerId" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="shortName" type="xs:string"/>
          <xs:element minOccurs="0" name="webName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateCenterAttributesParams">
        <xs:sequence>
          <xs:element minOccurs="0" name="centerId" type="xs:int"/>
          <xs:element minOccurs="0" name="extendedAttributes">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="extendedAttribute" type="tns:extendedAttribute"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="errorCode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UNKNOWN_ERROR"/>
          <xs:enumeration value="CREATE_EXCEPTION"/>
          <xs:enumeration value="REMOVE_EXCEPTION"/>
          <xs:enumeration value="SECURITY"/>
          <xs:enumeration value="SECURITY_ROLE"/>
          <xs:enumeration value="ARGUMENT_IS_NULL"/>
          <xs:enumeration value="ILLEGAL_ARGUMENT"/>
          <xs:enumeration value="PARSE_ERROR"/>
          <xs:enumeration value="ENTITY_NOT_FOUND"/>
          <xs:enumeration value="CONFLICTING_CHANGE"/>
          <xs:enumeration value="INVALID_ZIPCODE"/>
          <xs:enumeration value="INVALID_SOCIAL_SECURITY_NUMBER"/>
          <xs:enumeration value="INVALID_COMPANYID"/>
          <xs:enumeration value="INVALID_PHONE_NUMBER"/>
          <xs:enumeration value="CLIENT"/>
          <xs:enumeration value="ENTITY_IDENTIFIER_STATUS"/>
          <xs:enumeration value="DUPLICATE_PERSON"/>
          <xs:enumeration value="DUPLICATE_EXTERNAL_ID"/>
          <xs:enumeration value="FRIEND_RESTRICTION"/>
          <xs:enumeration value="EMPLOYEE_ALREADY_EXIST"/>
          <xs:enumeration value="DUPLICATE_COMPANY"/>
          <xs:enumeration value="EXPENSIVE_SEARCH"/>
          <xs:enumeration value="MULTIPLE_PERSONS_FOUND"/>
          <xs:enumeration value="NOT_DELIVERABLE"/>
          <xs:enumeration value="CIRCULAR_REFERENCE"/>
          <xs:enumeration value="REFERENCE"/>
          <xs:enumeration value="PERSON_NOT_EDITABLE"/>
          <xs:enumeration value="PERSON_TRANSFER"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_FOUND"/>
          <xs:enumeration value="ACCOUNT_RECEIVABLE_IS_BLOCKED"/>
          <xs:enumeration value="BANK_ACCOUNT_IS_BLOCKED"/>
          <xs:enumeration value="DEBIT_MAX"/>
          <xs:enumeration value="INVALID_PAYMENT_AGREEMENT"/>
          <xs:enumeration value="INVALID_BANK_INFO"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_CREDITOR_FOUND"/>
          <xs:enumeration value="PARTICIPATION_TIME_INTERVAL_OVERLAP"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLACKLISTED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLOCKED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="BOOKING_WAITING_LIST_FULL"/>
          <xs:enumeration value="BOOKING_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_RESTRICTION"/>
          <xs:enumeration value="OUTSIDE_BOOKING_WINDOW_EXCEPTION"/>
          <xs:enumeration value="CUSTOMER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="CENTER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_COLLECTION_NOT_PAID_FOR"/>
          <xs:enumeration value="NO_PRIVILEGE_FOR_PARTICIPATION"/>
          <xs:enumeration value="ALL_PARTICIPATIONS_TAKEN"/>
          <xs:enumeration value="SHOWUP_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_CANCELLATION"/>
          <xs:enumeration value="TOO_EARLY_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="TOO_EARLY_TO_SHOWUP"/>
          <xs:enumeration value="TOO_LATE_TO_SHOWUP"/>
          <xs:enumeration value="PARTICIPANT_TOO_MANY_OPEN_BOOKINGS"/>
          <xs:enumeration value="RESOURCE_OCCUPIED"/>
          <xs:enumeration value="RESOURCE_START_TIME_RESTRICTION"/>
          <xs:enumeration value="RESOURCE_TIME_RESTRICTION"/>
          <xs:enumeration value="ACTIVITY_STATE_INVALID"/>
          <xs:enumeration value="NO_PARENT_BOOKING_FOUND"/>
          <xs:enumeration value="STAFF_BLACKLISTED"/>
          <xs:enumeration value="STAFF_OCCUPIED"/>
          <xs:enumeration value="TOO_MANY_SUB_STAFF_USAGES"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_BOOKED"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_SHOWEDUP"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_BOOKING"/>
          <xs:enumeration value="LISTS_FULL"/>
          <xs:enumeration value="TOO_LATE_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="PARTICIPANT_OCCUPIED"/>
          <xs:enumeration value="FULL_BOOKING_RESTRICTION"/>
          <xs:enumeration value="IN_ADVANCE_LIMIT_BOOKING_RESTRICTION"/>
          <xs:enumeration value="PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="PARTICIPANT_BLACKLISTED"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BOOKING"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CENTER"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CUSTOMER"/>
          <xs:enumeration value="UNABLE_TO_REFRESH_WAITING_LIST"/>
          <xs:enumeration value="TOO_FEW_PARTICIPANTS"/>
          <xs:enumeration value="FREEZE_MAX_PREBOOK_PERIOD"/>
          <xs:enumeration value="FREEZE_MIN_OR_MAX_DURATION"/>
          <xs:enumeration value="FREEZE_TOO_LONG"/>
          <xs:enumeration value="FREEZE_TOO_SHORT"/>
          <xs:enumeration value="FREEZE_MAX_NUMBER_REACHED"/>
          <xs:enumeration value="TOO_MANY_FREEZES_PERIOD"/>
          <xs:enumeration value="TOO_MANY_FREEZES_TOTAL"/>
          <xs:enumeration value="FREEZE_MAX_TOTAL_DURATION_REACHED"/>
          <xs:enumeration value="FREEZE_NOT_ALLOWED"/>
          <xs:enumeration value="FREEZE_START_AND_STOP_DATE"/>
          <xs:enumeration value="FREEZE_START_IN_THE_PAST"/>
          <xs:enumeration value="FREEZE_END_BEFORE_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_AFTER_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_BEFORE_SUBSCRIPTION_START"/>
          <xs:enumeration value="FREEZE_OVERLAP"/>
          <xs:enumeration value="FREEZE_FUTURE_FREEZE"/>
          <xs:enumeration value="BOOKINGS_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="PARTICIPATION_ALREADY_CANCELLED"/>
          <xs:enumeration value="PARTICIPATION_CANCELLED"/>
          <xs:enumeration value="MINIMUM_AGE_EXCEPTION"/>
          <xs:enumeration value="TEMPLATE_NOT_DEFINED"/>
          <xs:enumeration value="INVALID_OTHER_PAYER_TYPE"/>
          <xs:enumeration value="DIFFERENT_COUNTRY_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_IS_NOT_STAFF"/>
          <xs:enumeration value="OTHER_PAYER_HAS_OTHER_PAYER"/>
          <xs:enumeration value="NO_VALID_ACCOUNT_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_STATUS_NOT_VALID_FOR_ATTEND"/>
          <xs:enumeration value="ATTENDING_PERSON_BLACKLISTED"/>
          <xs:enumeration value="MISSING_PRIVILEGE_FOR_ATTEND"/>
          <xs:enumeration value="ATTEND_NOT_POSSIBLE_AT_SPECIFIED_TIME"/>
          <xs:enumeration value="CLIPCARD_NOT_USABLE"/>
          <xs:enumeration value="TOO_MANY_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="NOT_ENOUGH_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="LOGIN_BLOCKED"/>
          <xs:enumeration value="PASSWORD_EXPIRED"/>
          <xs:enumeration value="PERSON_DELETED"/>
          <xs:enumeration value="PERSON_ANONYMIZED"/>
          <xs:enumeration value="INVALID_PICTURE"/>
          <xs:enumeration value="PERSON_NOT_FOUND_FOR_VENDING"/>
          <xs:enumeration value="TOO_MANY_MATCHES"/>
          <xs:enumeration value="PASSWORD_NOT_SET"/>
          <xs:enumeration value="PASSWORD_TOO_SHORT"/>
          <xs:enumeration value="CANNOT_PARTICIPATE_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="INVALID_STATUS"/>
          <xs:enumeration value="CONCURRENT_CALLS"/>
          <xs:enumeration value="CANNOT_UPDATE_COMPLETED_QUESTIONNAIRE"/>
          <xs:enumeration value="MISSING_ADMIN_FEE_PRODUCT"/>
          <xs:enumeration value="LOGIN_NOT_VALID"/>
          <xs:enumeration value="ACTIVE_TASKS_ALREADY_EXISTS_FOR_PERSON"/>
          <xs:enumeration value="TASK_TYPE_EXTERNAL_KEY_DOES_NOT_EXIST"/>
          <xs:enumeration value="SUBSCRIPTION_OF_SAME_TYPE"/>
          <xs:enumeration value="PERSON_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_KEY_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_BLOCKED"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_UNBLOCKED"/>
          <xs:enumeration value="INVALID_EMAIL"/>
          <xs:enumeration value="CENTER_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_TYPE_NOT_STRING"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_UPDATE_NOT_ALLOWED"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_VALUE_NOT_ALLOWED"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="CHILD_MUST_HAVE_AT_LEAST_ONE_PARENT"/>
          <xs:enumeration value="CHILD_HAS_TOO_MANY_PARENTS"/>
          <xs:enumeration value="PARENT_HAS_TOO_MANY_CHILDREN"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_ALREADY_EXISTS"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_DOES_NOT_EXIST"/>
          <xs:enumeration value="GUARDIAN_IS_TOO_YOUNG"/>
          <xs:enumeration value="CHILD_IS_TOO_OLD"/>
          <xs:enumeration value="AGE_NOT_SET"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_PERSON_MISMATCH"/>
          <xs:enumeration value="PAYMENT_CYCLE_TYPE_NOT_ALLOWED_EXCEPTION"/>
          <xs:enumeration value="SUBSCRIPTION_DOES_NOT_BELONG_TO_MEMBER"/>
          <xs:enumeration value="CANNOT_DELETE_SUBSCRIPTION"/>
          <xs:enumeration value="NO_PAYMENT_AGREEMENT_FOUND"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_VALID_FOR_SALES"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_ACTIVE"/>
          <xs:enumeration value="PAYMENT_CYCLE_NOT_ALLOWED"/>
          <xs:enumeration value="SUBSCRIPTION_SALE_OUTSIDE_HOME_CLUB_NOT_ALLOWED"/>
          <xs:enumeration value="BELOW_REQUIRED_AGE_FOR_EMAIL_CAPTURE"/>
          <xs:enumeration value="ROLE_NOT_FOUND"/>
          <xs:enumeration value="ACTION_NOT_ALLOWED"/>
          <xs:enumeration value="SCOPE_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_BLOCKED"/>
          <xs:enumeration value="ROLE_NOT_ASSIGNED"/>
          <xs:enumeration value="INVALID_EMPLOYEE_KEY"/>
          <xs:enumeration value="MISSING_PRIVILEGES"/>
          <xs:enumeration value="DATE_PARSE_ERROR"/>
          <xs:enumeration value="DATE_INVALID"/>
          <xs:enumeration value="CLIPCARD_NOT_ACTIVE"/>
          <xs:enumeration value="GROUP_ALREADY_EXIST"/>
          <xs:enumeration value="EMPLOYEE_AND_PERSON_KEY_SET"/>
          <xs:enumeration value="MULTIPLE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="MULTIPLE_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_ACTIVE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="errorDetailType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="MISSING_ACCESS_GROUP"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_DATE"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_TIME"/>
          <xs:enumeration value="MISSING_PRIVILEGES_COUNT"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="ALLOWED_BOOKING_WINDOW_TIMESLOT"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType final="#all" name="centerDetailArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:centerDetail"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="centerArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:center"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </types>
  <message name="CenterAPI_updateCenterAttributesResponse">
    <part name="return" type="tns:centerDetail"/>
  </message>
  <message name="CenterAPI_getDetailForCenterResponse">
    <part name="return" type="tns:centerDetail"/>
  </message>
  <message name="CenterAPI_getCentersInArea">
    <part name="areaId" type="xsd:int"/>
  </message>
  <message name="CenterAPI_getDetailForCenters">
    <part name="country" type="xsd:string"/>
  </message>
  <message name="CenterAPI_getCentersResponse">
    <part name="return" type="tns:centerArray"/>
  </message>
  <message name="CenterAPI_getDetailForCentersResponse">
    <part name="return" type="tns:centerDetailArray"/>
  </message>
  <message name="CenterAPI_getCentersInAreaResponse">
    <part name="return" type="tns:centerArray"/>
  </message>
  <message name="CenterAPI_getDetailForCenter">
    <part name="centerId" type="xsd:int"/>
  </message>
  <message name="CenterAPI_getCenters">
    <part name="country" type="xsd:string"/>
  </message>
  <message name="CenterAPI_getDetailForCentersInArea">
    <part name="areaId" type="xsd:int"/>
  </message>
  <message name="APIException">
    <part element="tns:APIException" name="APIException"/>
  </message>
  <message name="CenterAPI_getDetailForCentersInAreaResponse">
    <part name="return" type="tns:centerDetailArray"/>
  </message>
  <message name="CenterAPI_updateCenterAttributes">
    <part name="centerAttributesUpdate" type="tns:updateCenterAttributesParams"/>
  </message>
  <portType name="CenterAPI">
    <operation name="getCenters" parameterOrder="country">
      <input message="tns:CenterAPI_getCenters"/>
      <output message="tns:CenterAPI_getCentersResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getCentersInArea" parameterOrder="areaId">
      <input message="tns:CenterAPI_getCentersInArea"/>
      <output message="tns:CenterAPI_getCentersInAreaResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getDetailForCenter" parameterOrder="centerId">
      <input message="tns:CenterAPI_getDetailForCenter"/>
      <output message="tns:CenterAPI_getDetailForCenterResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getDetailForCenters" parameterOrder="country">
      <input message="tns:CenterAPI_getDetailForCenters"/>
      <output message="tns:CenterAPI_getDetailForCentersResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getDetailForCentersInArea" parameterOrder="areaId">
      <input message="tns:CenterAPI_getDetailForCentersInArea"/>
      <output message="tns:CenterAPI_getDetailForCentersInAreaResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="updateCenterAttributes" parameterOrder="centerAttributesUpdate">
      <input message="tns:CenterAPI_updateCenterAttributes"/>
      <output message="tns:CenterAPI_updateCenterAttributesResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
  </portType>
  <binding name="CenterAPIBinding" type="tns:CenterAPI">
    <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="getCenters">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getCentersInArea">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getDetailForCenter">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getDetailForCenters">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getDetailForCentersInArea">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="updateCenterAttributes">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
  </binding>
  <service name="CenterAPIService">
    <port binding="tns:CenterAPIBinding" name="CenterAPIPort">
      <soap:address location="https://lite-test.exerp.com/api/v5/CenterAPI"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://lite-test.exerp.com/api/v5/CenterAPI</con:endpoint></con:endpoints><con:operation id="2b3c28ac-3f11-4d87-a993-750dd736dcd6" isOneWay="false" action="" name="getCenters" bindingOperationName="getCenters" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="24e07511-33cd-421d-a673-02a939a4bc99" name="getcenters"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://skilld.exerp.qa/api/v5/CenterAPI?wsdl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:getCenters>
         <country>US</country>
      </v5:getCenters>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>100emp1</con:username><con:password>vombat</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/CenterAPI/getCentersRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="fba859c4-7877-4e0f-904c-d872d3e02005" isOneWay="false" action="" name="getCentersInArea" bindingOperationName="getCentersInArea" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="795f9102-3f0f-498e-9d64-777a97de8d2a" name="getCentersInArea"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://skilld.exerp.qa/api/v5/CenterAPI?wsdl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:getCentersInArea>
         <areaId>1</areaId>
      </v5:getCentersInArea>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>100emp1</con:username><con:password>vombat</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/CenterAPI/getCentersInAreaRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="e1ebfad4-c6f1-4cf7-a7ca-1f4382a7a83c" isOneWay="false" action="" name="getDetailForCenter" bindingOperationName="getDetailForCenter" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9df06044-b07f-4707-a7fe-4f21178bfcff" isOneWay="false" action="" name="getDetailForCenters" bindingOperationName="getDetailForCenters" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="acde285e-d7dd-45cd-9efc-bbfc48e2e8d6" isOneWay="false" action="" name="getDetailForCentersInArea" bindingOperationName="getDetailForCentersInArea" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a13cff1e-047a-47c1-9ea8-c8e9b7c7288a" name="getDetailForCentersInArea"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://skilld.exerp.qa/api/v5/CenterAPI?wsdl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:getDetailForCentersInArea>
         <areaId>1</areaId>
      </v5:getDetailForCentersInArea>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>100emp1</con:username><con:password>vombat</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/CenterAPI/getDetailForCentersInAreaRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="35ac4949-282e-43cb-8b10-5f60ff5cd9b9" isOneWay="false" action="" name="updateCenterAttributes" bindingOperationName="updateCenterAttributes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="309748f7-88b6-420d-b677-f0b72bee48fa" wsaVersion="NONE" name="AccessAPIBinding" type="wsdl" bindingName="{http://v5.api.eclub.procard.dk/}AccessAPIBinding" soapVersion="1_1" anonymous="optional" definition="https://skilld.exerp.qa/api/v5/AccessAPI?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://lite-test.exerp.com/api/v5/AccessAPI?wsdl"><con:part><con:url>https://lite-test.exerp.com/api/v5/AccessAPI?wsdl</con:url><con:content><![CDATA[<definitions name="AccessAPIService" targetNamespace="http://v5.api.eclub.procard.dk/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://jaxb.dev.java.net/array" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://v5.api.eclub.procard.dk/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <types>
    <xs:schema targetNamespace="http://v5.api.eclub.procard.dk/" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="APIException" type="tns:APIException"/>
      <xs:complexType name="apiPersonKey">
        <xs:complexContent>
          <xs:extension base="tns:compositeKey">
            <xs:sequence>
              <xs:element minOccurs="0" name="externalId" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="compositeKey">
        <xs:sequence>
          <xs:element name="center" type="xs:int"/>
          <xs:element name="id" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="centerPresence">
        <xs:sequence>
          <xs:element name="center" type="xs:int"/>
          <xs:element minOccurs="0" name="date" type="xs:string"/>
          <xs:element minOccurs="0" name="personId" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="roomResource" type="xs:string"/>
          <xs:element minOccurs="0" name="startTime" type="xs:string"/>
          <xs:element minOccurs="0" name="status" type="xs:string"/>
          <xs:element minOccurs="0" name="stopTime" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:centerPresenceType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="APIException">
        <xs:sequence>
          <xs:element minOccurs="0" name="errorCode" type="tns:errorCode"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="errorDetail" type="tns:errorDetail"/>
          <xs:element minOccurs="0" name="errorMessage" type="xs:string"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="errorDetail">
        <xs:sequence>
          <xs:element minOccurs="0" name="info" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:errorDetailType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="registerAttendByAccessCardNoPrivilegeParameters">
        <xs:sequence>
          <xs:element name="cardId" type="xs:string"/>
          <xs:element name="cardType" type="tns:accessCardType"/>
          <xs:element name="centerId" type="xs:int"/>
          <xs:element name="date" type="xs:string"/>
          <xs:element name="resourceExternalId" type="xs:string"/>
          <xs:element name="startTime" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="resourcesAvailableForAttendsParameters">
        <xs:sequence>
          <xs:element name="centerId" type="xs:int"/>
          <xs:element minOccurs="0" name="personKey" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="resourceExternalId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="attendableResource">
        <xs:sequence>
          <xs:element minOccurs="0" name="resource" type="tns:resource"/>
          <xs:element minOccurs="0" name="usageInformation" type="tns:usageInformation"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="resource">
        <xs:sequence>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
          <xs:element minOccurs="0" name="externalId" type="xs:string"/>
          <xs:element minOccurs="0" name="instructorPosition" type="xs:float"/>
          <xs:element minOccurs="0" name="instructorRow" type="xs:float"/>
          <xs:element minOccurs="0" name="key" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="resourceGroupExternalIds" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="seats">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="seat" type="tns:seat"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="seat">
        <xs:sequence>
          <xs:element name="name" type="xs:string"/>
          <xs:element name="position" type="xs:decimal"/>
          <xs:element name="row" type="xs:decimal"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="usageInformation">
        <xs:sequence>
          <xs:element minOccurs="0" name="balance" type="xs:string"/>
          <xs:element name="clips" type="xs:int"/>
          <xs:element name="clipsLeft" type="xs:int"/>
          <xs:element minOccurs="0" name="expireDate" type="xs:string"/>
          <xs:element minOccurs="0" name="price" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="registerAttendByAccessCardParameters">
        <xs:complexContent>
          <xs:extension base="tns:registerAttendByAccessCardNoPrivilegeParameters">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="assignCardParameter">
        <xs:sequence>
          <xs:element name="personKey" type="tns:apiPersonKey"/>
          <xs:element name="card" type="tns:memberCard"/>
          <xs:element minOccurs="0" name="blockExisting" type="xs:boolean"/>
          <xs:element minOccurs="0" name="blockExistingCardStatus" type="tns:memberCardStatus"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="memberCard">
        <xs:sequence>
          <xs:element name="cardId" type="xs:string"/>
          <xs:element name="cardType" type="tns:accessCardType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getTemporaryQRCodeParameters">
        <xs:sequence>
          <xs:element name="personKey" type="tns:apiPersonKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="centerPresenceType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="ATTEND"/>
          <xs:enumeration value="CHECKIN"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="errorCode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UNKNOWN_ERROR"/>
          <xs:enumeration value="CREATE_EXCEPTION"/>
          <xs:enumeration value="REMOVE_EXCEPTION"/>
          <xs:enumeration value="SECURITY"/>
          <xs:enumeration value="SECURITY_ROLE"/>
          <xs:enumeration value="ARGUMENT_IS_NULL"/>
          <xs:enumeration value="ILLEGAL_ARGUMENT"/>
          <xs:enumeration value="PARSE_ERROR"/>
          <xs:enumeration value="ENTITY_NOT_FOUND"/>
          <xs:enumeration value="CONFLICTING_CHANGE"/>
          <xs:enumeration value="INVALID_ZIPCODE"/>
          <xs:enumeration value="INVALID_SOCIAL_SECURITY_NUMBER"/>
          <xs:enumeration value="INVALID_COMPANYID"/>
          <xs:enumeration value="INVALID_PHONE_NUMBER"/>
          <xs:enumeration value="CLIENT"/>
          <xs:enumeration value="ENTITY_IDENTIFIER_STATUS"/>
          <xs:enumeration value="DUPLICATE_PERSON"/>
          <xs:enumeration value="DUPLICATE_EXTERNAL_ID"/>
          <xs:enumeration value="FRIEND_RESTRICTION"/>
          <xs:enumeration value="EMPLOYEE_ALREADY_EXIST"/>
          <xs:enumeration value="DUPLICATE_COMPANY"/>
          <xs:enumeration value="EXPENSIVE_SEARCH"/>
          <xs:enumeration value="MULTIPLE_PERSONS_FOUND"/>
          <xs:enumeration value="NOT_DELIVERABLE"/>
          <xs:enumeration value="CIRCULAR_REFERENCE"/>
          <xs:enumeration value="REFERENCE"/>
          <xs:enumeration value="PERSON_NOT_EDITABLE"/>
          <xs:enumeration value="PERSON_TRANSFER"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_FOUND"/>
          <xs:enumeration value="ACCOUNT_RECEIVABLE_IS_BLOCKED"/>
          <xs:enumeration value="BANK_ACCOUNT_IS_BLOCKED"/>
          <xs:enumeration value="DEBIT_MAX"/>
          <xs:enumeration value="INVALID_PAYMENT_AGREEMENT"/>
          <xs:enumeration value="INVALID_BANK_INFO"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_CREDITOR_FOUND"/>
          <xs:enumeration value="PARTICIPATION_TIME_INTERVAL_OVERLAP"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLACKLISTED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLOCKED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="BOOKING_WAITING_LIST_FULL"/>
          <xs:enumeration value="BOOKING_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_RESTRICTION"/>
          <xs:enumeration value="OUTSIDE_BOOKING_WINDOW_EXCEPTION"/>
          <xs:enumeration value="CUSTOMER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="CENTER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_COLLECTION_NOT_PAID_FOR"/>
          <xs:enumeration value="NO_PRIVILEGE_FOR_PARTICIPATION"/>
          <xs:enumeration value="ALL_PARTICIPATIONS_TAKEN"/>
          <xs:enumeration value="SHOWUP_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_CANCELLATION"/>
          <xs:enumeration value="TOO_EARLY_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="TOO_EARLY_TO_SHOWUP"/>
          <xs:enumeration value="TOO_LATE_TO_SHOWUP"/>
          <xs:enumeration value="PARTICIPANT_TOO_MANY_OPEN_BOOKINGS"/>
          <xs:enumeration value="RESOURCE_OCCUPIED"/>
          <xs:enumeration value="RESOURCE_START_TIME_RESTRICTION"/>
          <xs:enumeration value="RESOURCE_TIME_RESTRICTION"/>
          <xs:enumeration value="ACTIVITY_STATE_INVALID"/>
          <xs:enumeration value="NO_PARENT_BOOKING_FOUND"/>
          <xs:enumeration value="STAFF_BLACKLISTED"/>
          <xs:enumeration value="STAFF_OCCUPIED"/>
          <xs:enumeration value="TOO_MANY_SUB_STAFF_USAGES"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_BOOKED"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_SHOWEDUP"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_BOOKING"/>
          <xs:enumeration value="LISTS_FULL"/>
          <xs:enumeration value="TOO_LATE_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="PARTICIPANT_OCCUPIED"/>
          <xs:enumeration value="FULL_BOOKING_RESTRICTION"/>
          <xs:enumeration value="IN_ADVANCE_LIMIT_BOOKING_RESTRICTION"/>
          <xs:enumeration value="PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="PARTICIPANT_BLACKLISTED"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BOOKING"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CENTER"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CUSTOMER"/>
          <xs:enumeration value="UNABLE_TO_REFRESH_WAITING_LIST"/>
          <xs:enumeration value="TOO_FEW_PARTICIPANTS"/>
          <xs:enumeration value="FREEZE_MAX_PREBOOK_PERIOD"/>
          <xs:enumeration value="FREEZE_MIN_OR_MAX_DURATION"/>
          <xs:enumeration value="FREEZE_TOO_LONG"/>
          <xs:enumeration value="FREEZE_TOO_SHORT"/>
          <xs:enumeration value="FREEZE_MAX_NUMBER_REACHED"/>
          <xs:enumeration value="TOO_MANY_FREEZES_PERIOD"/>
          <xs:enumeration value="TOO_MANY_FREEZES_TOTAL"/>
          <xs:enumeration value="FREEZE_MAX_TOTAL_DURATION_REACHED"/>
          <xs:enumeration value="FREEZE_NOT_ALLOWED"/>
          <xs:enumeration value="FREEZE_START_AND_STOP_DATE"/>
          <xs:enumeration value="FREEZE_START_IN_THE_PAST"/>
          <xs:enumeration value="FREEZE_END_BEFORE_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_AFTER_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_BEFORE_SUBSCRIPTION_START"/>
          <xs:enumeration value="FREEZE_OVERLAP"/>
          <xs:enumeration value="FREEZE_FUTURE_FREEZE"/>
          <xs:enumeration value="BOOKINGS_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="PARTICIPATION_ALREADY_CANCELLED"/>
          <xs:enumeration value="PARTICIPATION_CANCELLED"/>
          <xs:enumeration value="MINIMUM_AGE_EXCEPTION"/>
          <xs:enumeration value="TEMPLATE_NOT_DEFINED"/>
          <xs:enumeration value="INVALID_OTHER_PAYER_TYPE"/>
          <xs:enumeration value="DIFFERENT_COUNTRY_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_IS_NOT_STAFF"/>
          <xs:enumeration value="OTHER_PAYER_HAS_OTHER_PAYER"/>
          <xs:enumeration value="NO_VALID_ACCOUNT_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_STATUS_NOT_VALID_FOR_ATTEND"/>
          <xs:enumeration value="ATTENDING_PERSON_BLACKLISTED"/>
          <xs:enumeration value="MISSING_PRIVILEGE_FOR_ATTEND"/>
          <xs:enumeration value="ATTEND_NOT_POSSIBLE_AT_SPECIFIED_TIME"/>
          <xs:enumeration value="CLIPCARD_NOT_USABLE"/>
          <xs:enumeration value="TOO_MANY_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="NOT_ENOUGH_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="LOGIN_BLOCKED"/>
          <xs:enumeration value="PASSWORD_EXPIRED"/>
          <xs:enumeration value="PERSON_DELETED"/>
          <xs:enumeration value="PERSON_ANONYMIZED"/>
          <xs:enumeration value="INVALID_PICTURE"/>
          <xs:enumeration value="PERSON_NOT_FOUND_FOR_VENDING"/>
          <xs:enumeration value="TOO_MANY_MATCHES"/>
          <xs:enumeration value="PASSWORD_NOT_SET"/>
          <xs:enumeration value="PASSWORD_TOO_SHORT"/>
          <xs:enumeration value="CANNOT_PARTICIPATE_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="INVALID_STATUS"/>
          <xs:enumeration value="CONCURRENT_CALLS"/>
          <xs:enumeration value="CANNOT_UPDATE_COMPLETED_QUESTIONNAIRE"/>
          <xs:enumeration value="MISSING_ADMIN_FEE_PRODUCT"/>
          <xs:enumeration value="LOGIN_NOT_VALID"/>
          <xs:enumeration value="ACTIVE_TASKS_ALREADY_EXISTS_FOR_PERSON"/>
          <xs:enumeration value="TASK_TYPE_EXTERNAL_KEY_DOES_NOT_EXIST"/>
          <xs:enumeration value="SUBSCRIPTION_OF_SAME_TYPE"/>
          <xs:enumeration value="PERSON_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_KEY_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_BLOCKED"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_UNBLOCKED"/>
          <xs:enumeration value="INVALID_EMAIL"/>
          <xs:enumeration value="CENTER_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_TYPE_NOT_STRING"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_UPDATE_NOT_ALLOWED"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_VALUE_NOT_ALLOWED"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="CHILD_MUST_HAVE_AT_LEAST_ONE_PARENT"/>
          <xs:enumeration value="CHILD_HAS_TOO_MANY_PARENTS"/>
          <xs:enumeration value="PARENT_HAS_TOO_MANY_CHILDREN"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_ALREADY_EXISTS"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_DOES_NOT_EXIST"/>
          <xs:enumeration value="GUARDIAN_IS_TOO_YOUNG"/>
          <xs:enumeration value="CHILD_IS_TOO_OLD"/>
          <xs:enumeration value="AGE_NOT_SET"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_PERSON_MISMATCH"/>
          <xs:enumeration value="PAYMENT_CYCLE_TYPE_NOT_ALLOWED_EXCEPTION"/>
          <xs:enumeration value="SUBSCRIPTION_DOES_NOT_BELONG_TO_MEMBER"/>
          <xs:enumeration value="CANNOT_DELETE_SUBSCRIPTION"/>
          <xs:enumeration value="NO_PAYMENT_AGREEMENT_FOUND"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_VALID_FOR_SALES"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_ACTIVE"/>
          <xs:enumeration value="PAYMENT_CYCLE_NOT_ALLOWED"/>
          <xs:enumeration value="SUBSCRIPTION_SALE_OUTSIDE_HOME_CLUB_NOT_ALLOWED"/>
          <xs:enumeration value="BELOW_REQUIRED_AGE_FOR_EMAIL_CAPTURE"/>
          <xs:enumeration value="ROLE_NOT_FOUND"/>
          <xs:enumeration value="ACTION_NOT_ALLOWED"/>
          <xs:enumeration value="SCOPE_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_BLOCKED"/>
          <xs:enumeration value="ROLE_NOT_ASSIGNED"/>
          <xs:enumeration value="INVALID_EMPLOYEE_KEY"/>
          <xs:enumeration value="MISSING_PRIVILEGES"/>
          <xs:enumeration value="DATE_PARSE_ERROR"/>
          <xs:enumeration value="DATE_INVALID"/>
          <xs:enumeration value="CLIPCARD_NOT_ACTIVE"/>
          <xs:enumeration value="GROUP_ALREADY_EXIST"/>
          <xs:enumeration value="EMPLOYEE_AND_PERSON_KEY_SET"/>
          <xs:enumeration value="MULTIPLE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="MULTIPLE_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_ACTIVE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="errorDetailType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="MISSING_ACCESS_GROUP"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_DATE"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_TIME"/>
          <xs:enumeration value="MISSING_PRIVILEGES_COUNT"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="ALLOWED_BOOKING_WINDOW_TIMESLOT"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="accessCardType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="BARCODE"/>
          <xs:enumeration value="MAGNETICCARD"/>
          <xs:enumeration value="RFCARD"/>
          <xs:enumeration value="PIN"/>
          <xs:enumeration value="ANTIDROWN"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="memberCardStatus">
        <xs:restriction base="xs:string">
          <xs:enumeration value="OK"/>
          <xs:enumeration value="STOLEN"/>
          <xs:enumeration value="MISSING"/>
          <xs:enumeration value="BLOCKED"/>
          <xs:enumeration value="BROKEN"/>
          <xs:enumeration value="RETURNED"/>
          <xs:enumeration value="EXPIRED"/>
          <xs:enumeration value="DELETED"/>
          <xs:enumeration value="COMPROMISED"/>
          <xs:enumeration value="FORGOTTEN"/>
          <xs:enumeration value="BANNED"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType final="#all" name="centerPresenceArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:centerPresence"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="registerAttendByAccessCardNoPrivilegeParametersArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:registerAttendByAccessCardNoPrivilegeParameters"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="attendableResourceArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:attendableResource"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema targetNamespace="http://jaxb.dev.java.net/array" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:complexType final="#all" name="stringArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </types>
  <message name="AccessAPI_registerAttendByAccessCard">
    <part name="parameters" type="tns:registerAttendByAccessCardParameters"/>
  </message>
  <message name="AccessAPI_attendResource">
    <part name="roomResourceKey" type="tns:compositeKey"/>
    <part name="personKey" type="tns:apiPersonKey"/>
  </message>
  <message name="AccessAPI_attendResourceResponse"/>
  <message name="AccessAPI_registerAttendByAccessCardNoPrivilegeResponse"/>
  <message name="AccessAPI_checkAccessResponse">
    <part name="return" type="xsd:boolean"/>
  </message>
  <message name="AccessAPI_registerAttendByAccessCardResponse"/>
  <message name="AccessAPI_checkInPersonResponse">
    <part name="return" type="xsd:boolean"/>
  </message>
  <message name="AccessAPI_registerMultipleAttendByAccessCardNoPrivilege">
    <part name="attends" type="tns:registerAttendByAccessCardNoPrivilegeParametersArray"/>
  </message>
  <message name="AccessAPI_getTemporaryQRCode">
    <part name="parameters" type="tns:getTemporaryQRCodeParameters"/>
  </message>
  <message name="AccessAPI_assignCardResponse"/>
  <message name="AccessAPI_checkInPerson">
    <part name="center" type="xsd:int"/>
    <part name="personKey" type="tns:apiPersonKey"/>
  </message>
  <message name="AccessAPI_registerAttendByAccessCardNoPrivilege">
    <part name="parameters" type="tns:registerAttendByAccessCardNoPrivilegeParameters"/>
  </message>
  <message name="AccessAPI_registerMultipleAttendByAccessCardNoPrivilegeResponse">
    <part name="return" type="ns1:stringArray"/>
  </message>
  <message name="AccessAPI_registerAttendNoPrivilegeResponse"/>
  <message name="AccessAPI_assignCard">
    <part name="parameters" type="tns:assignCardParameter"/>
  </message>
  <message name="AccessAPI_getAttendableResources">
    <part name="parameters" type="tns:resourcesAvailableForAttendsParameters"/>
  </message>
  <message name="APIException">
    <part element="tns:APIException" name="APIException"/>
  </message>
  <message name="AccessAPI_getAttendableResourcesResponse">
    <part name="return" type="tns:attendableResourceArray"/>
  </message>
  <message name="AccessAPI_getTemporaryQRCodeResponse">
    <part name="return" type="xsd:string"/>
  </message>
  <message name="AccessAPI_checkAccess">
    <part name="roomResourceKey" type="tns:compositeKey"/>
    <part name="personKey" type="tns:apiPersonKey"/>
  </message>
  <message name="AccessAPI_getPersonAttends">
    <part name="personKey" type="tns:apiPersonKey"/>
    <part name="fromDate" type="xsd:string"/>
    <part name="toDate" type="xsd:string"/>
    <part name="attends" type="xsd:boolean"/>
    <part name="checkIns" type="xsd:boolean"/>
  </message>
  <message name="AccessAPI_registerAttendNoPrivilege">
    <part name="roomResourceKey" type="tns:compositeKey"/>
    <part name="personKey" type="tns:apiPersonKey"/>
    <part name="date" type="xsd:string"/>
    <part name="startTime" type="xsd:string"/>
  </message>
  <message name="AccessAPI_getPersonAttendsResponse">
    <part name="return" type="tns:centerPresenceArray"/>
  </message>
  <portType name="AccessAPI">
    <operation name="assignCard" parameterOrder="parameters">
      <input message="tns:AccessAPI_assignCard"/>
      <output message="tns:AccessAPI_assignCardResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="attendResource" parameterOrder="roomResourceKey personKey">
      <input message="tns:AccessAPI_attendResource"/>
      <output message="tns:AccessAPI_attendResourceResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="checkAccess" parameterOrder="roomResourceKey personKey">
      <input message="tns:AccessAPI_checkAccess"/>
      <output message="tns:AccessAPI_checkAccessResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="checkInPerson" parameterOrder="center personKey">
      <input message="tns:AccessAPI_checkInPerson"/>
      <output message="tns:AccessAPI_checkInPersonResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getAttendableResources" parameterOrder="parameters">
      <input message="tns:AccessAPI_getAttendableResources"/>
      <output message="tns:AccessAPI_getAttendableResourcesResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getPersonAttends" parameterOrder="personKey fromDate toDate attends checkIns">
      <input message="tns:AccessAPI_getPersonAttends"/>
      <output message="tns:AccessAPI_getPersonAttendsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getTemporaryQRCode" parameterOrder="parameters">
      <input message="tns:AccessAPI_getTemporaryQRCode"/>
      <output message="tns:AccessAPI_getTemporaryQRCodeResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="registerAttendByAccessCard" parameterOrder="parameters">
      <input message="tns:AccessAPI_registerAttendByAccessCard"/>
      <output message="tns:AccessAPI_registerAttendByAccessCardResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="registerAttendByAccessCardNoPrivilege" parameterOrder="parameters">
      <input message="tns:AccessAPI_registerAttendByAccessCardNoPrivilege"/>
      <output message="tns:AccessAPI_registerAttendByAccessCardNoPrivilegeResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="registerAttendNoPrivilege" parameterOrder="roomResourceKey personKey date startTime">
      <input message="tns:AccessAPI_registerAttendNoPrivilege"/>
      <output message="tns:AccessAPI_registerAttendNoPrivilegeResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="registerMultipleAttendByAccessCardNoPrivilege" parameterOrder="attends">
      <input message="tns:AccessAPI_registerMultipleAttendByAccessCardNoPrivilege"/>
      <output message="tns:AccessAPI_registerMultipleAttendByAccessCardNoPrivilegeResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
  </portType>
  <binding name="AccessAPIBinding" type="tns:AccessAPI">
    <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="assignCard">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="attendResource">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="checkAccess">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="checkInPerson">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getAttendableResources">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getPersonAttends">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getTemporaryQRCode">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="registerAttendByAccessCard">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="registerAttendByAccessCardNoPrivilege">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="registerAttendNoPrivilege">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="registerMultipleAttendByAccessCardNoPrivilege">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
  </binding>
  <service name="AccessAPIService">
    <port binding="tns:AccessAPIBinding" name="AccessAPIPort">
      <soap:address location="https://lite-test.exerp.com/api/v5/AccessAPI"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://skilld.exerp.qa/api/v5/AccessAPI?wsdl</con:endpoint></con:endpoints><con:operation id="64632dc3-79b5-400a-bcc2-af724c60d1b7" isOneWay="false" action="" name="assignCard" bindingOperationName="assignCard" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fba723e5-3315-4316-a7dc-6bf697948ea8" isOneWay="false" action="" name="attendResource" bindingOperationName="attendResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="59e8835c-4d60-423d-a63d-647792778df0" isOneWay="false" action="" name="checkAccess" bindingOperationName="checkAccess" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c2ab4307-4caa-4dd1-971b-e4ccb16965f3" isOneWay="false" action="" name="checkInPerson" bindingOperationName="checkInPerson" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d77248c6-84b2-4ec7-9669-fdefffe7b49e" isOneWay="false" action="" name="getAttendableResources" bindingOperationName="getAttendableResources" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7c607287-2772-4a1d-8add-94033fa04b4f" isOneWay="false" action="" name="getPersonAttends" bindingOperationName="getPersonAttends" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="17f6f519-1a05-4110-bb04-c17887f37fae" isOneWay="false" action="" name="getTemporaryQRCode" bindingOperationName="getTemporaryQRCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7b8a9b76-585e-4c53-809c-608797dc24a1" isOneWay="false" action="" name="registerAttendByAccessCard" bindingOperationName="registerAttendByAccessCard" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e2125561-f521-410a-881f-05844ca7577b" isOneWay="false" action="" name="registerAttendByAccessCardNoPrivilege" bindingOperationName="registerAttendByAccessCardNoPrivilege" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="88daca12-521e-43e4-8aba-12a3d79941c3" isOneWay="false" action="" name="registerAttendNoPrivilege" bindingOperationName="registerAttendNoPrivilege" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e12955be-ab70-4888-b1c2-50c954618831" isOneWay="false" action="" name="registerMultipleAttendByAccessCardNoPrivilege" bindingOperationName="registerMultipleAttendByAccessCardNoPrivilege" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="c1dc0851-ed42-42a4-89b8-29e11977d688" wsaVersion="NONE" name="AccountReceivableAPIBinding" type="wsdl" bindingName="{http://v5.api.eclub.procard.dk/}AccountReceivableAPIBinding" soapVersion="1_1" anonymous="optional" definition="https://lite-test.exerp.com/api/v5/AccountReceivableAPI?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://lite-test.exerp.com/api/v5/AccountReceivableAPI?wsdl"><con:part><con:url>https://lite-test.exerp.com/api/v5/AccountReceivableAPI?wsdl</con:url><con:content><![CDATA[<definitions name="AccountReceivableAPIService" targetNamespace="http://v5.api.eclub.procard.dk/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://v5.api.eclub.procard.dk/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <types>
    <xs:schema targetNamespace="http://v5.api.eclub.procard.dk/" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="APIException" type="tns:APIException"/>
      <xs:element name="ClearingHouse" type="tns:clearingHouse"/>
      <xs:complexType name="apiPersonKey">
        <xs:complexContent>
          <xs:extension base="tns:compositeKey">
            <xs:sequence>
              <xs:element minOccurs="0" name="externalId" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="compositeKey">
        <xs:sequence>
          <xs:element name="center" type="xs:int"/>
          <xs:element name="id" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="APIException">
        <xs:sequence>
          <xs:element minOccurs="0" name="errorCode" type="tns:errorCode"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="errorDetail" type="tns:errorDetail"/>
          <xs:element minOccurs="0" name="errorMessage" type="xs:string"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="errorDetail">
        <xs:sequence>
          <xs:element minOccurs="0" name="info" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:errorDetailType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createPaymentAgreementParameter">
        <xs:sequence>
          <xs:element minOccurs="0" name="bankInfo" type="tns:bankInfo"/>
          <xs:element minOccurs="0" name="generateDocument" type="xs:boolean"/>
          <xs:element minOccurs="0" name="individualDeductionDay" type="xs:int"/>
          <xs:element minOccurs="0" name="notifyPayment" type="xs:boolean"/>
          <xs:element minOccurs="0" name="payerGivesAuthorizationExternally" type="xs:boolean"/>
          <xs:element minOccurs="0" name="paymentCycleId" type="xs:int"/>
          <xs:element name="paymentType" type="tns:personPaymentType"/>
          <xs:element name="personKey" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="replacePaymentAgreementKey" type="tns:compositeSubKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="bankInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="accountHolder" type="xs:string"/>
          <xs:element minOccurs="0" name="accountNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="accountType" type="xs:string"/>
          <xs:element minOccurs="0" name="bankName" type="xs:string"/>
          <xs:element minOccurs="0" name="bankRegNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="bic" type="xs:string"/>
          <xs:element minOccurs="0" name="branchNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="controlDigits" type="xs:string"/>
          <xs:element minOccurs="0" name="extraInfo" type="xs:string"/>
          <xs:element minOccurs="0" name="iban" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="compositeSubKey">
        <xs:complexContent>
          <xs:extension base="tns:compositeKey">
            <xs:sequence>
              <xs:element name="subId" type="xs:int"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="createCreditCardAgreementParameter">
        <xs:sequence>
          <xs:element minOccurs="0" name="expirationDate" type="xs:string"/>
          <xs:element minOccurs="0" name="maskedCreditCardNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="paymentCycleId" type="xs:int"/>
          <xs:element minOccurs="0" name="personKey" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="reference" type="xs:string"/>
          <xs:element minOccurs="0" name="replacePaymentAgreementKey" type="tns:compositeSubKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="paymentRequest">
        <xs:sequence>
          <xs:element minOccurs="0" name="clearingHouseType" type="tns:clearingHouseType"/>
          <xs:element minOccurs="0" name="deductionDate" type="xs:string"/>
          <xs:element minOccurs="0" name="dueDate" type="xs:string"/>
          <xs:element minOccurs="0" name="invoiceAmount" type="xs:string"/>
          <xs:element minOccurs="0" name="logDate" type="xs:string"/>
          <xs:element minOccurs="0" name="openAmount" type="xs:string"/>
          <xs:element minOccurs="0" name="paidState" type="tns:paidState"/>
          <xs:element minOccurs="0" name="paymentRequestId" type="tns:compositeSubKey"/>
          <xs:element minOccurs="0" name="paymentRequestSpecificationId" type="tns:compositeSubKey"/>
          <xs:element minOccurs="0" name="requestType" type="tns:paymentRequestType"/>
          <xs:element minOccurs="0" name="requestedAmount" type="xs:string"/>
          <xs:element minOccurs="0" name="state" type="tns:paymentRequestState"/>
          <xs:element minOccurs="0" name="collectionFee" type="xs:string"/>
          <xs:element minOccurs="0" name="rejectionFee" type="xs:string"/>
          <xs:element minOccurs="0" name="invoiceAmountIncludingFees" type="xs:string"/>
          <xs:element minOccurs="0" name="paymentAgreementKeyForCollection" type="tns:compositeSubKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="mimeDocument">
        <xs:sequence>
          <xs:element minOccurs="0" name="data" type="xs:base64Binary"/>
          <xs:element minOccurs="0" name="type" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="paymentAgreementInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="otherPayerCompany" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="otherPayerPerson" type="tns:apiPersonKey"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="payingFor" nillable="true" type="tns:apiPersonKey"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="paymentAgreements" nillable="true" type="tns:paymentAgreement"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="paymentAgreement">
        <xs:sequence>
          <xs:element name="active" type="xs:boolean"/>
          <xs:element minOccurs="0" name="bankInfo" type="tns:bankInfo"/>
          <xs:element name="defaultAgreement" type="xs:boolean"/>
          <xs:element minOccurs="0" name="individualDeductionDay" type="xs:int"/>
          <xs:element minOccurs="0" name="paymentAgreementKey" type="tns:compositeSubKey"/>
          <xs:element minOccurs="0" name="paymentCycle" type="tns:paymentCycle"/>
          <xs:element minOccurs="0" name="paymentType" type="tns:personPaymentType"/>
          <xs:element name="pending" type="xs:boolean"/>
          <xs:element minOccurs="0" name="reference" type="xs:string"/>
          <xs:element name="valid" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="paymentCycle">
        <xs:sequence>
          <xs:element minOccurs="0" name="paymentCycleName" type="xs:string"/>
          <xs:element minOccurs="0" name="paymentCycleType" type="tns:paymentCycleType"/>
          <xs:element minOccurs="0" name="customerType" type="tns:customerType"/>
          <xs:element minOccurs="0" name="paymentCycleId" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getPaymentRequestParameters">
        <xs:sequence>
          <xs:element name="personKey" type="tns:apiPersonKey"/>
          <xs:element name="dateFrom" type="xs:string"/>
          <xs:element name="dateTo" type="xs:string"/>
          <xs:element minOccurs="0" name="includeCredits" type="xs:boolean"/>
          <xs:element minOccurs="0" name="types">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="type" type="tns:paymentRequestType"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="includeNew" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createPaymentRequestParameter">
        <xs:sequence>
          <xs:element name="customerId" type="tns:apiPersonKey"/>
          <xs:element name="deductionDate" type="xs:string"/>
          <xs:element name="dueDate" type="xs:string"/>
          <xs:element minOccurs="0" name="paymentAgreementKeyForCollection" type="tns:compositeSubKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateBankInfoExternalParameters">
        <xs:sequence>
          <xs:element name="centerId" type="xs:int"/>
          <xs:element name="bankInfo" type="tns:bankInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAccountReceivableTransactionsParameters">
        <xs:sequence>
          <xs:element name="personKey" type="tns:apiPersonKey"/>
          <xs:element name="accountReceivableTypeId" type="xs:int"/>
          <xs:element name="dateFrom" type="xs:string"/>
          <xs:element name="dateTo" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="arTransactionTableRecord">
        <xs:sequence>
          <xs:element minOccurs="0" name="keyName" type="xs:string"/>
          <xs:element minOccurs="0" name="entryTime" type="xs:string"/>
          <xs:element minOccurs="0" name="text" type="xs:string"/>
          <xs:element minOccurs="0" name="dueDate" type="xs:string"/>
          <xs:element minOccurs="0" name="info" type="xs:string"/>
          <xs:element minOccurs="0" name="employeeName" type="xs:string"/>
          <xs:element minOccurs="0" name="centerName" type="xs:string"/>
          <xs:element minOccurs="0" name="deposit" type="xs:decimal"/>
          <xs:element minOccurs="0" name="withdrawn" type="xs:decimal"/>
          <xs:element minOccurs="0" name="balance" type="xs:decimal"/>
          <xs:element minOccurs="0" name="bookTime" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="registerDebtCollectionPaymentParameters">
        <xs:sequence>
          <xs:element name="amount" type="xs:decimal"/>
          <xs:element name="date" type="xs:string"/>
          <xs:element name="personKey" type="tns:apiPersonKey"/>
          <xs:element name="textReference" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="accountOverviewParameters">
        <xs:sequence>
          <xs:element name="personId" type="tns:apiPersonKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="accountOverview">
        <xs:sequence>
          <xs:element minOccurs="0" name="totalPayableDebt" type="xs:string"/>
          <xs:element minOccurs="0" name="currencyCode" type="xs:string"/>
          <xs:element minOccurs="0" name="countryCode" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="accounts" nillable="true" type="tns:accountOverviewAccount"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="consolidatedInvoices" nillable="true" type="tns:accountOverviewConsolidatedInvoice"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="accountOverviewAccount">
        <xs:sequence>
          <xs:element minOccurs="0" name="accountReceivableType" type="tns:accountReceivableType"/>
          <xs:element minOccurs="0" name="balance" type="xs:string"/>
          <xs:element minOccurs="0" name="overdueDebt" type="xs:string"/>
          <xs:element minOccurs="0" name="payableDebt" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="accountOverviewConsolidatedInvoice">
        <xs:sequence>
          <xs:element minOccurs="0" name="openAmount" type="xs:string"/>
          <xs:element name="payable" type="xs:boolean"/>
          <xs:element minOccurs="0" name="originalAmount" type="xs:string"/>
          <xs:element minOccurs="0" name="alreadyPaidAmount" type="xs:string"/>
          <xs:element minOccurs="0" name="rejectionFeeAmount" type="xs:string"/>
          <xs:element minOccurs="0" name="representationFeeAmount" type="xs:string"/>
          <xs:element minOccurs="0" name="invoiceDate" type="xs:string"/>
          <xs:element minOccurs="0" name="dueDate" type="xs:string"/>
          <xs:element minOccurs="0" name="deductionDate" type="xs:string"/>
          <xs:element minOccurs="0" name="consolidatedInvoiceKey" type="tns:compositeSubKey"/>
          <xs:element minOccurs="0" name="reference" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="registerPaymentParameters">
        <xs:sequence>
          <xs:element name="amount" type="xs:decimal"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="consolidatedInvoicesKey" type="tns:compositeSubKey"/>
          <xs:element minOccurs="0" name="creditCardTransactionReference" type="xs:string"/>
          <xs:element minOccurs="0" name="encryptedCardDetails" type="xs:string"/>
          <xs:element name="personKey" type="tns:apiPersonKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createCreditCardAgreementEncryptedParameters">
        <xs:sequence>
          <xs:element minOccurs="0" name="encryptedCardDetails" type="xs:string"/>
          <xs:element minOccurs="0" name="paymentCycleId" type="xs:int"/>
          <xs:element minOccurs="0" name="personKey" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="replacePaymentAgreementKey" type="tns:compositeSubKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="registerPaymentOnPaymentRequestUsingInvoiceRefParameters">
        <xs:complexContent>
          <xs:extension base="tns:registerPaymentOnPaymentRequestParameters">
            <xs:sequence>
              <xs:element name="invoiceRef" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType abstract="true" name="registerPaymentOnPaymentRequestParameters">
        <xs:sequence>
          <xs:element name="amount" type="xs:string"/>
          <xs:element name="comment" type="xs:string"/>
          <xs:element name="globalAccountName" type="xs:string"/>
          <xs:element name="personKey" type="tns:compositeKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="registerPaymentOnPaymentRequestUsingInvoiceKeyParameters">
        <xs:complexContent>
          <xs:extension base="tns:registerPaymentOnPaymentRequestParameters">
            <xs:sequence>
              <xs:element name="invoiceKey" type="tns:compositeSubKey"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="getDeductionDaysParameters">
        <xs:sequence>
          <xs:element name="personId" type="tns:apiPersonKey"/>
          <xs:element name="paymentAgreementKey" type="tns:compositeSubKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="individualDeductionDaysValidity">
        <xs:sequence>
          <xs:element minOccurs="0" name="personId" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="paymentAgreementKey" type="tns:compositeSubKey"/>
          <xs:element minOccurs="0" name="earliestPossibleChangeDate" type="xs:string"/>
          <xs:element minOccurs="0" name="validIndividualDeductionDays">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="validIndividualDeductionDay" type="tns:individualDeductionDay"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="invalidIndividualDeductionDays">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="invalidIndividualDeductionDay" type="tns:invalidIndividualDeductionDay"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="individualDeductionDay">
        <xs:sequence>
          <xs:element minOccurs="0" name="deductionDay" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="invalidIndividualDeductionDay">
        <xs:sequence>
          <xs:element minOccurs="0" name="dayId" type="xs:int"/>
          <xs:element minOccurs="0" name="reasons">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="reason" type="xs:string"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="clearingHouse">
        <xs:sequence>
          <xs:element minOccurs="0" name="clearingHouseName" type="xs:string"/>
          <xs:element minOccurs="0" name="clearingHouseType" type="xs:string"/>
          <xs:element minOccurs="0" name="paymentType" type="tns:clearingHouseType"/>
          <xs:element minOccurs="0" name="availablePaymentCycles">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="paymentCycle" type="tns:paymentCycle"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="changeIndividualDeductionDayParameters">
        <xs:sequence>
          <xs:element name="personId" type="tns:apiPersonKey"/>
          <xs:element name="paymentAgreementKey" type="tns:compositeSubKey"/>
          <xs:element name="deductionDay" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="changeIndividualDeductionDayResult">
        <xs:sequence>
          <xs:element minOccurs="0" name="personId" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="paymentAgreementKey" type="tns:compositeSubKey"/>
          <xs:element minOccurs="0" name="deductionDay" type="xs:int"/>
          <xs:element minOccurs="0" name="oldDeductionDay" type="xs:int"/>
          <xs:element minOccurs="0" name="errors">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="error" type="xs:string"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="errorCode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UNKNOWN_ERROR"/>
          <xs:enumeration value="CREATE_EXCEPTION"/>
          <xs:enumeration value="REMOVE_EXCEPTION"/>
          <xs:enumeration value="SECURITY"/>
          <xs:enumeration value="SECURITY_ROLE"/>
          <xs:enumeration value="ARGUMENT_IS_NULL"/>
          <xs:enumeration value="ILLEGAL_ARGUMENT"/>
          <xs:enumeration value="PARSE_ERROR"/>
          <xs:enumeration value="ENTITY_NOT_FOUND"/>
          <xs:enumeration value="CONFLICTING_CHANGE"/>
          <xs:enumeration value="INVALID_ZIPCODE"/>
          <xs:enumeration value="INVALID_SOCIAL_SECURITY_NUMBER"/>
          <xs:enumeration value="INVALID_COMPANYID"/>
          <xs:enumeration value="INVALID_PHONE_NUMBER"/>
          <xs:enumeration value="CLIENT"/>
          <xs:enumeration value="ENTITY_IDENTIFIER_STATUS"/>
          <xs:enumeration value="DUPLICATE_PERSON"/>
          <xs:enumeration value="DUPLICATE_EXTERNAL_ID"/>
          <xs:enumeration value="FRIEND_RESTRICTION"/>
          <xs:enumeration value="EMPLOYEE_ALREADY_EXIST"/>
          <xs:enumeration value="DUPLICATE_COMPANY"/>
          <xs:enumeration value="EXPENSIVE_SEARCH"/>
          <xs:enumeration value="MULTIPLE_PERSONS_FOUND"/>
          <xs:enumeration value="NOT_DELIVERABLE"/>
          <xs:enumeration value="CIRCULAR_REFERENCE"/>
          <xs:enumeration value="REFERENCE"/>
          <xs:enumeration value="PERSON_NOT_EDITABLE"/>
          <xs:enumeration value="PERSON_TRANSFER"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_FOUND"/>
          <xs:enumeration value="ACCOUNT_RECEIVABLE_IS_BLOCKED"/>
          <xs:enumeration value="BANK_ACCOUNT_IS_BLOCKED"/>
          <xs:enumeration value="DEBIT_MAX"/>
          <xs:enumeration value="INVALID_PAYMENT_AGREEMENT"/>
          <xs:enumeration value="INVALID_BANK_INFO"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_CREDITOR_FOUND"/>
          <xs:enumeration value="PARTICIPATION_TIME_INTERVAL_OVERLAP"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLACKLISTED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLOCKED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="BOOKING_WAITING_LIST_FULL"/>
          <xs:enumeration value="BOOKING_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_RESTRICTION"/>
          <xs:enumeration value="OUTSIDE_BOOKING_WINDOW_EXCEPTION"/>
          <xs:enumeration value="CUSTOMER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="CENTER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_COLLECTION_NOT_PAID_FOR"/>
          <xs:enumeration value="NO_PRIVILEGE_FOR_PARTICIPATION"/>
          <xs:enumeration value="ALL_PARTICIPATIONS_TAKEN"/>
          <xs:enumeration value="SHOWUP_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_CANCELLATION"/>
          <xs:enumeration value="TOO_EARLY_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="TOO_EARLY_TO_SHOWUP"/>
          <xs:enumeration value="TOO_LATE_TO_SHOWUP"/>
          <xs:enumeration value="PARTICIPANT_TOO_MANY_OPEN_BOOKINGS"/>
          <xs:enumeration value="RESOURCE_OCCUPIED"/>
          <xs:enumeration value="RESOURCE_START_TIME_RESTRICTION"/>
          <xs:enumeration value="RESOURCE_TIME_RESTRICTION"/>
          <xs:enumeration value="ACTIVITY_STATE_INVALID"/>
          <xs:enumeration value="NO_PARENT_BOOKING_FOUND"/>
          <xs:enumeration value="STAFF_BLACKLISTED"/>
          <xs:enumeration value="STAFF_OCCUPIED"/>
          <xs:enumeration value="TOO_MANY_SUB_STAFF_USAGES"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_BOOKED"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_SHOWEDUP"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_BOOKING"/>
          <xs:enumeration value="LISTS_FULL"/>
          <xs:enumeration value="TOO_LATE_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="PARTICIPANT_OCCUPIED"/>
          <xs:enumeration value="FULL_BOOKING_RESTRICTION"/>
          <xs:enumeration value="IN_ADVANCE_LIMIT_BOOKING_RESTRICTION"/>
          <xs:enumeration value="PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="PARTICIPANT_BLACKLISTED"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BOOKING"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CENTER"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CUSTOMER"/>
          <xs:enumeration value="UNABLE_TO_REFRESH_WAITING_LIST"/>
          <xs:enumeration value="TOO_FEW_PARTICIPANTS"/>
          <xs:enumeration value="FREEZE_MAX_PREBOOK_PERIOD"/>
          <xs:enumeration value="FREEZE_MIN_OR_MAX_DURATION"/>
          <xs:enumeration value="FREEZE_TOO_LONG"/>
          <xs:enumeration value="FREEZE_TOO_SHORT"/>
          <xs:enumeration value="FREEZE_MAX_NUMBER_REACHED"/>
          <xs:enumeration value="TOO_MANY_FREEZES_PERIOD"/>
          <xs:enumeration value="TOO_MANY_FREEZES_TOTAL"/>
          <xs:enumeration value="FREEZE_MAX_TOTAL_DURATION_REACHED"/>
          <xs:enumeration value="FREEZE_NOT_ALLOWED"/>
          <xs:enumeration value="FREEZE_START_AND_STOP_DATE"/>
          <xs:enumeration value="FREEZE_START_IN_THE_PAST"/>
          <xs:enumeration value="FREEZE_END_BEFORE_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_AFTER_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_BEFORE_SUBSCRIPTION_START"/>
          <xs:enumeration value="FREEZE_OVERLAP"/>
          <xs:enumeration value="FREEZE_FUTURE_FREEZE"/>
          <xs:enumeration value="BOOKINGS_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="PARTICIPATION_ALREADY_CANCELLED"/>
          <xs:enumeration value="PARTICIPATION_CANCELLED"/>
          <xs:enumeration value="MINIMUM_AGE_EXCEPTION"/>
          <xs:enumeration value="TEMPLATE_NOT_DEFINED"/>
          <xs:enumeration value="INVALID_OTHER_PAYER_TYPE"/>
          <xs:enumeration value="DIFFERENT_COUNTRY_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_IS_NOT_STAFF"/>
          <xs:enumeration value="OTHER_PAYER_HAS_OTHER_PAYER"/>
          <xs:enumeration value="NO_VALID_ACCOUNT_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_STATUS_NOT_VALID_FOR_ATTEND"/>
          <xs:enumeration value="ATTENDING_PERSON_BLACKLISTED"/>
          <xs:enumeration value="MISSING_PRIVILEGE_FOR_ATTEND"/>
          <xs:enumeration value="ATTEND_NOT_POSSIBLE_AT_SPECIFIED_TIME"/>
          <xs:enumeration value="CLIPCARD_NOT_USABLE"/>
          <xs:enumeration value="TOO_MANY_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="NOT_ENOUGH_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="LOGIN_BLOCKED"/>
          <xs:enumeration value="PASSWORD_EXPIRED"/>
          <xs:enumeration value="PERSON_DELETED"/>
          <xs:enumeration value="PERSON_ANONYMIZED"/>
          <xs:enumeration value="INVALID_PICTURE"/>
          <xs:enumeration value="PERSON_NOT_FOUND_FOR_VENDING"/>
          <xs:enumeration value="TOO_MANY_MATCHES"/>
          <xs:enumeration value="PASSWORD_NOT_SET"/>
          <xs:enumeration value="PASSWORD_TOO_SHORT"/>
          <xs:enumeration value="CANNOT_PARTICIPATE_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="INVALID_STATUS"/>
          <xs:enumeration value="CONCURRENT_CALLS"/>
          <xs:enumeration value="CANNOT_UPDATE_COMPLETED_QUESTIONNAIRE"/>
          <xs:enumeration value="MISSING_ADMIN_FEE_PRODUCT"/>
          <xs:enumeration value="LOGIN_NOT_VALID"/>
          <xs:enumeration value="ACTIVE_TASKS_ALREADY_EXISTS_FOR_PERSON"/>
          <xs:enumeration value="TASK_TYPE_EXTERNAL_KEY_DOES_NOT_EXIST"/>
          <xs:enumeration value="SUBSCRIPTION_OF_SAME_TYPE"/>
          <xs:enumeration value="PERSON_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_KEY_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_BLOCKED"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_UNBLOCKED"/>
          <xs:enumeration value="INVALID_EMAIL"/>
          <xs:enumeration value="CENTER_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_TYPE_NOT_STRING"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_UPDATE_NOT_ALLOWED"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_VALUE_NOT_ALLOWED"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="CHILD_MUST_HAVE_AT_LEAST_ONE_PARENT"/>
          <xs:enumeration value="CHILD_HAS_TOO_MANY_PARENTS"/>
          <xs:enumeration value="PARENT_HAS_TOO_MANY_CHILDREN"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_ALREADY_EXISTS"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_DOES_NOT_EXIST"/>
          <xs:enumeration value="GUARDIAN_IS_TOO_YOUNG"/>
          <xs:enumeration value="CHILD_IS_TOO_OLD"/>
          <xs:enumeration value="AGE_NOT_SET"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_PERSON_MISMATCH"/>
          <xs:enumeration value="PAYMENT_CYCLE_TYPE_NOT_ALLOWED_EXCEPTION"/>
          <xs:enumeration value="SUBSCRIPTION_DOES_NOT_BELONG_TO_MEMBER"/>
          <xs:enumeration value="CANNOT_DELETE_SUBSCRIPTION"/>
          <xs:enumeration value="NO_PAYMENT_AGREEMENT_FOUND"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_VALID_FOR_SALES"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_ACTIVE"/>
          <xs:enumeration value="PAYMENT_CYCLE_NOT_ALLOWED"/>
          <xs:enumeration value="SUBSCRIPTION_SALE_OUTSIDE_HOME_CLUB_NOT_ALLOWED"/>
          <xs:enumeration value="BELOW_REQUIRED_AGE_FOR_EMAIL_CAPTURE"/>
          <xs:enumeration value="ROLE_NOT_FOUND"/>
          <xs:enumeration value="ACTION_NOT_ALLOWED"/>
          <xs:enumeration value="SCOPE_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_BLOCKED"/>
          <xs:enumeration value="ROLE_NOT_ASSIGNED"/>
          <xs:enumeration value="INVALID_EMPLOYEE_KEY"/>
          <xs:enumeration value="MISSING_PRIVILEGES"/>
          <xs:enumeration value="DATE_PARSE_ERROR"/>
          <xs:enumeration value="DATE_INVALID"/>
          <xs:enumeration value="CLIPCARD_NOT_ACTIVE"/>
          <xs:enumeration value="GROUP_ALREADY_EXIST"/>
          <xs:enumeration value="EMPLOYEE_AND_PERSON_KEY_SET"/>
          <xs:enumeration value="MULTIPLE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="MULTIPLE_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_ACTIVE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="errorDetailType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="MISSING_ACCESS_GROUP"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_DATE"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_TIME"/>
          <xs:enumeration value="MISSING_PRIVILEGES_COUNT"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="ALLOWED_BOOKING_WINDOW_TIMESLOT"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="personPaymentType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="INVOICE"/>
          <xs:enumeration value="EFT"/>
          <xs:enumeration value="CREDIT_CARD"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="accountReceivableType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="CASH"/>
          <xs:enumeration value="PAYMENT"/>
          <xs:enumeration value="CASHCOLLECTION"/>
          <xs:enumeration value="INSTALLMENTPLAN"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="clearingHouseType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="EFT"/>
          <xs:enumeration value="INVOICE"/>
          <xs:enumeration value="CREDIT_CARD"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="paidState">
        <xs:restriction base="xs:string">
          <xs:enumeration value="OPEN"/>
          <xs:enumeration value="LATE"/>
          <xs:enumeration value="CLOSED"/>
          <xs:enumeration value="CANCELLED"/>
          <xs:enumeration value="DEBT_COLLECTION"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="paymentRequestType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="PAYMENT"/>
          <xs:enumeration value="DEBT_COLLECTION"/>
          <xs:enumeration value="REVERSAL"/>
          <xs:enumeration value="REMINDER"/>
          <xs:enumeration value="REFUND"/>
          <xs:enumeration value="REPRESENTATION"/>
          <xs:enumeration value="LEGACY"/>
          <xs:enumeration value="ZERO"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="paymentRequestState">
        <xs:restriction base="xs:string">
          <xs:enumeration value="SENT"/>
          <xs:enumeration value="PAID"/>
          <xs:enumeration value="FAILED"/>
          <xs:enumeration value="PARTIAL"/>
          <xs:enumeration value="CANCELLED"/>
          <xs:enumeration value="NEW"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="paymentCycleType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="FIXED"/>
          <xs:enumeration value="RELATIVE"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="customerType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Company"/>
          <xs:enumeration value="Person"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType final="#all" name="paymentRequestArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:paymentRequest"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="arTransactionTableRecordArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:arTransactionTableRecord"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="clearingHouseArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:clearingHouse"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </types>
  <message name="AccountReceivableAPI_registerPaymentOnPaymentRequestUsingInvoiceKey">
    <part name="parameters" type="tns:registerPaymentOnPaymentRequestUsingInvoiceKeyParameters"/>
  </message>
  <message name="AccountReceivableAPI_getPaymentRequests">
    <part name="parameters" type="tns:getPaymentRequestParameters"/>
  </message>
  <message name="AccountReceivableAPI_createAccountReceivableTransaction">
    <part name="personKey" type="tns:apiPersonKey"/>
    <part name="accountReceivableType" type="tns:accountReceivableType"/>
    <part name="amount" type="xsd:string"/>
    <part name="comment" type="xsd:string"/>
    <part name="accountGlobalId" type="xsd:string"/>
  </message>
  <message name="AccountReceivableAPI_registerDebtCollectionPaymentResponse"/>
  <message name="AccountReceivableAPI_getAvailableClearingHouses">
    <part name="centerId" type="xsd:int"/>
  </message>
  <message name="AccountReceivableAPI_createPaymentRequest">
    <part name="parameters" type="tns:createPaymentRequestParameter"/>
  </message>
  <message name="AccountReceivableAPI_getAccountOverviewResponse">
    <part name="return" type="tns:accountOverview"/>
  </message>
  <message name="AccountReceivableAPI_createCreditCardPaymentAgreementEncrypted">
    <part name="parameters" type="tns:createCreditCardAgreementEncryptedParameters"/>
  </message>
  <message name="AccountReceivableAPI_getAvailableClearingHousesResponse">
    <part name="return" type="tns:clearingHouseArray"/>
  </message>
  <message name="AccountReceivableAPI_getIndividualDeductionDaysValidity">
    <part name="parameters" type="tns:getDeductionDaysParameters"/>
  </message>
  <message name="AccountReceivableAPI_createPaymentRequestResponse">
    <part name="return" type="tns:compositeSubKey"/>
  </message>
  <message name="AccountReceivableAPI_validateBankInfoExternal">
    <part name="parameters" type="tns:validateBankInfoExternalParameters"/>
  </message>
  <message name="AccountReceivableAPI_registerPaymentResponse">
    <part name="return" type="xsd:boolean"/>
  </message>
  <message name="AccountReceivableAPI_createPaymentAgreement">
    <part name="parameters" type="tns:createPaymentAgreementParameter"/>
  </message>
  <message name="AccountReceivableAPI_reversePaymentRequestResponse"/>
  <message name="AccountReceivableAPI_getTransactions">
    <part name="parameters" type="tns:getAccountReceivableTransactionsParameters"/>
  </message>
  <message name="AccountReceivableAPI_changeIndividualDeductiondayResponse">
    <part name="return" type="tns:changeIndividualDeductionDayResult"/>
  </message>
  <message name="AccountReceivableAPI_validateBankInfo">
    <part name="countryId" type="xsd:string"/>
    <part name="bankInfo" type="tns:bankInfo"/>
  </message>
  <message name="AccountReceivableAPI_getIndividualDeductionDaysValidityResponse">
    <part name="return" type="tns:individualDeductionDaysValidity"/>
  </message>
  <message name="AccountReceivableAPI_setOtherPayerResponse"/>
  <message name="AccountReceivableAPI_getPaymentRequestDocument">
    <part name="paymentRequestId" type="tns:compositeSubKey"/>
  </message>
  <message name="AccountReceivableAPI_setOtherPayer">
    <part name="personKey" type="tns:apiPersonKey"/>
    <part name="payerKey" type="tns:apiPersonKey"/>
  </message>
  <message name="AccountReceivableAPI_changeIndividualDeductionday">
    <part name="parameters" type="tns:changeIndividualDeductionDayParameters"/>
  </message>
  <message name="AccountReceivableAPI_getPaymentAgreementInfo">
    <part name="personKey" type="tns:apiPersonKey"/>
    <part name="onlyActive" type="xsd:boolean"/>
  </message>
  <message name="AccountReceivableAPI_validateBankInfoExternalResponse">
    <part name="return" type="tns:bankInfo"/>
  </message>
  <message name="AccountReceivableAPI_registerPaymentOnPaymentRequestUsingInvoiceRefResponse"/>
  <message name="AccountReceivableAPI_getTransactionsResponse">
    <part name="return" type="tns:arTransactionTableRecordArray"/>
  </message>
  <message name="AccountReceivableAPI_createCreditCardPaymentAgreementResponse">
    <part name="return" type="xsd:string"/>
  </message>
  <message name="AccountReceivableAPI_getAccountOverview">
    <part name="parameters" type="tns:accountOverviewParameters"/>
  </message>
  <message name="AccountReceivableAPI_getPaymentRequestsResponse">
    <part name="return" type="tns:paymentRequestArray"/>
  </message>
  <message name="AccountReceivableAPI_createCreditCardPaymentAgreementEncryptedResponse">
    <part name="return" type="xsd:string"/>
  </message>
  <message name="AccountReceivableAPI_getPaymentAgreementInfoResponse">
    <part name="return" type="tns:paymentAgreementInfo"/>
  </message>
  <message name="AccountReceivableAPI_registerDebtCollectionPayment">
    <part name="parameters" type="tns:registerDebtCollectionPaymentParameters"/>
  </message>
  <message name="AccountReceivableAPI_validateBankInfoResponse">
    <part name="return" type="tns:bankInfo"/>
  </message>
  <message name="AccountReceivableAPI_registerPaymentOnPaymentRequestUsingInvoiceRef">
    <part name="parameters" type="tns:registerPaymentOnPaymentRequestUsingInvoiceRefParameters"/>
  </message>
  <message name="AccountReceivableAPI_registerPaymentOnPaymentRequestUsingInvoiceKeyResponse"/>
  <message name="AccountReceivableAPI_getPaymentRequest">
    <part name="paymentRequestKey" type="tns:compositeSubKey"/>
  </message>
  <message name="AccountReceivableAPI_reversePaymentRequest">
    <part name="paymentRequestKey" type="tns:compositeSubKey"/>
  </message>
  <message name="AccountReceivableAPI_registerPayment">
    <part name="registerPaymentParameters" type="tns:registerPaymentParameters"/>
  </message>
  <message name="AccountReceivableAPI_getPaymentRequestResponse">
    <part name="return" type="tns:paymentRequest"/>
  </message>
  <message name="AccountReceivableAPI_createPaymentAgreementResponse">
    <part name="return" type="xsd:string"/>
  </message>
  <message name="AccountReceivableAPI_createCreditCardPaymentAgreement">
    <part name="parameters" type="tns:createCreditCardAgreementParameter"/>
  </message>
  <message name="APIException">
    <part element="tns:APIException" name="APIException"/>
  </message>
  <message name="AccountReceivableAPI_getPaymentRequestDocumentResponse">
    <part name="return" type="tns:mimeDocument"/>
  </message>
  <message name="AccountReceivableAPI_createAccountReceivableTransactionResponse"/>
  <portType name="AccountReceivableAPI">
    <operation name="changeIndividualDeductionday" parameterOrder="parameters">
      <input message="tns:AccountReceivableAPI_changeIndividualDeductionday"/>
      <output message="tns:AccountReceivableAPI_changeIndividualDeductiondayResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="createAccountReceivableTransaction" parameterOrder="personKey accountReceivableType amount comment accountGlobalId">
      <input message="tns:AccountReceivableAPI_createAccountReceivableTransaction"/>
      <output message="tns:AccountReceivableAPI_createAccountReceivableTransactionResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="createCreditCardPaymentAgreement" parameterOrder="parameters">
      <input message="tns:AccountReceivableAPI_createCreditCardPaymentAgreement"/>
      <output message="tns:AccountReceivableAPI_createCreditCardPaymentAgreementResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="createCreditCardPaymentAgreementEncrypted" parameterOrder="parameters">
      <input message="tns:AccountReceivableAPI_createCreditCardPaymentAgreementEncrypted"/>
      <output message="tns:AccountReceivableAPI_createCreditCardPaymentAgreementEncryptedResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="createPaymentAgreement" parameterOrder="parameters">
      <input message="tns:AccountReceivableAPI_createPaymentAgreement"/>
      <output message="tns:AccountReceivableAPI_createPaymentAgreementResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="createPaymentRequest" parameterOrder="parameters">
      <input message="tns:AccountReceivableAPI_createPaymentRequest"/>
      <output message="tns:AccountReceivableAPI_createPaymentRequestResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getAccountOverview" parameterOrder="parameters">
      <input message="tns:AccountReceivableAPI_getAccountOverview"/>
      <output message="tns:AccountReceivableAPI_getAccountOverviewResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getAvailableClearingHouses" parameterOrder="centerId">
      <input message="tns:AccountReceivableAPI_getAvailableClearingHouses"/>
      <output message="tns:AccountReceivableAPI_getAvailableClearingHousesResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getIndividualDeductionDaysValidity" parameterOrder="parameters">
      <input message="tns:AccountReceivableAPI_getIndividualDeductionDaysValidity"/>
      <output message="tns:AccountReceivableAPI_getIndividualDeductionDaysValidityResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getPaymentAgreementInfo" parameterOrder="personKey onlyActive">
      <input message="tns:AccountReceivableAPI_getPaymentAgreementInfo"/>
      <output message="tns:AccountReceivableAPI_getPaymentAgreementInfoResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getPaymentRequest" parameterOrder="paymentRequestKey">
      <input message="tns:AccountReceivableAPI_getPaymentRequest"/>
      <output message="tns:AccountReceivableAPI_getPaymentRequestResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getPaymentRequestDocument" parameterOrder="paymentRequestId">
      <input message="tns:AccountReceivableAPI_getPaymentRequestDocument"/>
      <output message="tns:AccountReceivableAPI_getPaymentRequestDocumentResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getPaymentRequests" parameterOrder="parameters">
      <input message="tns:AccountReceivableAPI_getPaymentRequests"/>
      <output message="tns:AccountReceivableAPI_getPaymentRequestsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getTransactions" parameterOrder="parameters">
      <input message="tns:AccountReceivableAPI_getTransactions"/>
      <output message="tns:AccountReceivableAPI_getTransactionsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="registerDebtCollectionPayment" parameterOrder="parameters">
      <input message="tns:AccountReceivableAPI_registerDebtCollectionPayment"/>
      <output message="tns:AccountReceivableAPI_registerDebtCollectionPaymentResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="registerPayment" parameterOrder="registerPaymentParameters">
      <input message="tns:AccountReceivableAPI_registerPayment"/>
      <output message="tns:AccountReceivableAPI_registerPaymentResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="registerPaymentOnPaymentRequestUsingInvoiceKey" parameterOrder="parameters">
      <input message="tns:AccountReceivableAPI_registerPaymentOnPaymentRequestUsingInvoiceKey"/>
      <output message="tns:AccountReceivableAPI_registerPaymentOnPaymentRequestUsingInvoiceKeyResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="registerPaymentOnPaymentRequestUsingInvoiceRef" parameterOrder="parameters">
      <input message="tns:AccountReceivableAPI_registerPaymentOnPaymentRequestUsingInvoiceRef"/>
      <output message="tns:AccountReceivableAPI_registerPaymentOnPaymentRequestUsingInvoiceRefResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="reversePaymentRequest" parameterOrder="paymentRequestKey">
      <input message="tns:AccountReceivableAPI_reversePaymentRequest"/>
      <output message="tns:AccountReceivableAPI_reversePaymentRequestResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="setOtherPayer" parameterOrder="personKey payerKey">
      <input message="tns:AccountReceivableAPI_setOtherPayer"/>
      <output message="tns:AccountReceivableAPI_setOtherPayerResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="validateBankInfo" parameterOrder="countryId bankInfo">
      <input message="tns:AccountReceivableAPI_validateBankInfo"/>
      <output message="tns:AccountReceivableAPI_validateBankInfoResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="validateBankInfoExternal" parameterOrder="parameters">
      <input message="tns:AccountReceivableAPI_validateBankInfoExternal"/>
      <output message="tns:AccountReceivableAPI_validateBankInfoExternalResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
  </portType>
  <binding name="AccountReceivableAPIBinding" type="tns:AccountReceivableAPI">
    <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="changeIndividualDeductionday">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="createAccountReceivableTransaction">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="createCreditCardPaymentAgreement">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="createCreditCardPaymentAgreementEncrypted">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="createPaymentAgreement">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="createPaymentRequest">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getAccountOverview">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getAvailableClearingHouses">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getIndividualDeductionDaysValidity">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getPaymentAgreementInfo">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getPaymentRequest">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getPaymentRequestDocument">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getPaymentRequests">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getTransactions">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="registerDebtCollectionPayment">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="registerPayment">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="registerPaymentOnPaymentRequestUsingInvoiceKey">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="registerPaymentOnPaymentRequestUsingInvoiceRef">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="reversePaymentRequest">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="setOtherPayer">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="validateBankInfo">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="validateBankInfoExternal">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
  </binding>
  <service name="AccountReceivableAPIService">
    <port binding="tns:AccountReceivableAPIBinding" name="AccountReceivableAPIPort">
      <soap:address location="https://lite-test.exerp.com/api/v5/AccountReceivableAPI"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://lite-test.exerp.com/api/v5/AccountReceivableAPI</con:endpoint></con:endpoints><con:operation id="d6e49baf-cdeb-41ff-a753-f9d6ade19ab7" isOneWay="false" action="" name="changeIndividualDeductionday" bindingOperationName="changeIndividualDeductionday" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7ff5307d-1f35-43db-9245-641fc1db15d4" isOneWay="false" action="" name="createAccountReceivableTransaction" bindingOperationName="createAccountReceivableTransaction" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7f56fad8-9596-4bef-86b0-8575cd330cba" isOneWay="false" action="" name="createCreditCardPaymentAgreement" bindingOperationName="createCreditCardPaymentAgreement" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2a8c316c-e729-4f99-9572-68a49a28e8d9" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://skilld.exerp.qa/api/v5/AccountReceivableAPI</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:getPaymentAgreementInfo>
         <personKey>
            <center>131</center>
            <id>1757</id>
         </personKey>
         <onlyActive>false</onlyActive>
      </v5:getPaymentAgreementInfo>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>100emp1</con:username><con:password>vombat</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/AccountReceivableAPI/createCreditCardPaymentAgreementRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="866bdbb9-95fb-4378-9758-e4c7cab25564" isOneWay="false" action="" name="createCreditCardPaymentAgreementEncrypted" bindingOperationName="createCreditCardPaymentAgreementEncrypted" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e9aed9a0-389d-4558-80a3-d329a48063e6" isOneWay="false" action="" name="createPaymentAgreement" bindingOperationName="createPaymentAgreement" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="412669a3-c276-4778-af51-e93b8f9e4d92" name="createPaymentAgreement"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://skilld.exerp.qa/api/v5/AccountReceivableAPI</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:createPaymentAgreement>
         <parameters>
            <!--Optional:-->
            <bankInfo>
               <!--Optional:-->
               <accountHolder>John Doe</accountHolder>
               <!--Optional:-->
               <accountNumber>12345678</accountNumber>
               <!--Optional:-->
               <accountType>1</accountType>
               <!--Optional:-->
               <bankName>SANTANDER</bankName>
               <!--Optional:-->
               <bankRegNumber>1234</bankRegNumber>
               <!--Optional:-->
               <bic>?</bic>
               <!--Optional:-->
               <branchNumber>60080</branchNumber>
               <!--Optional:-->
               <controlDigits>999</controlDigits>
               <!--Optional:-->
               <extraInfo>Wallstreet 1, New York</extraInfo>
               <!--Optional:-->
               <iban>000000000000000000000123456</iban>
            </bankInfo>
            <!--Optional:-->
            <generateDocument>true</generateDocument>
            <!--Optional:-->
            <individualDeductionDay>1</individualDeductionDay>
            <!--Optional:-->
            <payerGivesAuthorizationExternally>false</payerGivesAuthorizationExternally>
            <!--Optional:-->
            <paymentType>EFT</paymentType>
            <personKey>
               <center>1400</center>
               <id>401</id>
            </personKey>
            <!--Optional:-->
         </parameters>
      </v5:createPaymentAgreement>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>100emp1</con:username><con:password>vombat</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/AccountReceivableAPI/createPaymentAgreementRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="8c51a335-47fa-47a3-88b4-851370386da8" isOneWay="false" action="" name="createPaymentRequest" bindingOperationName="createPaymentRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f6e74302-e4ed-47d8-8c59-4431c64b40d8" isOneWay="false" action="" name="getAccountOverview" bindingOperationName="getAccountOverview" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a2ff59c1-0eb0-4ada-a54c-6c6bd2e2d750" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://skilld.exerp.qa/api/v5/AccountReceivableAPI</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:getAccountOverview>
         <parameters>
            <personId>
               <center>131</center>
               <id>9237</id>
            </personId>
         </parameters>
      </v5:getAccountOverview>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>100emp2401</con:username><con:password>b8n1OfNkej</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/AccountReceivableAPI/getAccountOverviewRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="362a3be0-24e3-4cd7-b32a-5c01a6592796" isOneWay="false" action="" name="getAvailableClearingHouses" bindingOperationName="getAvailableClearingHouses" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f9bfef0b-845b-48a7-9bda-db7d8ddd45e1" isOneWay="false" action="" name="getIndividualDeductionDaysValidity" bindingOperationName="getIndividualDeductionDaysValidity" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3f09178c-dc0d-4f24-af7c-01c3531f9e00" isOneWay="false" action="" name="getPaymentAgreementInfo" bindingOperationName="getPaymentAgreementInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4b768f13-4310-4e8b-b324-71c4e6c98e3f" name="getPaymentAgreementinfo"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://skilld.exerp.qa/api/v5/AccountReceivableAPI</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:getPaymentAgreementInfo>
         <personKey>
            <center>121</center>
                  <id>1221</id>
                  <externalId>10477</externalId>
         </personKey>
         <onlyActive>true</onlyActive>
      </v5:getPaymentAgreementInfo>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>100emp1</con:username><con:password>vombat</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/AccountReceivableAPI/getPaymentAgreementInfoRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="2f5f89bb-3d3c-4151-a786-f0b5b8ce67cd" isOneWay="false" action="" name="getPaymentRequest" bindingOperationName="getPaymentRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="34b6fb3f-e358-4c0f-aa1b-0f08ba57c912" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://skilld.exerp.qa/api/v5/AccountReceivableAPI</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:getPaymentRequest>
         <paymentRequestKey>
            <center>131</center>
            <id>201</id>
         </paymentRequestKey>
      </v5:getPaymentRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>100emp2401</con:username><con:password>b8n1OfNkej</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/AccountReceivableAPI/getPaymentRequestRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="685aa5b3-cfc1-4e37-91eb-9bd1fd51a538" isOneWay="false" action="" name="getPaymentRequestDocument" bindingOperationName="getPaymentRequestDocument" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="926dd823-71d7-4a9f-a8c0-b5c5df8991d1" isOneWay="false" action="" name="getPaymentRequests" bindingOperationName="getPaymentRequests" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2b7d2d46-9b46-4f64-9e2c-aeb941990756" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://skilld.exerp.qa/api/v5/AccountReceivableAPI</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:getPaymentRequests>
         <parameters>
            <personKey>
               <center>131</center>
               <id>201</id>
            </personKey>
            <dateFrom>2020-01-01</dateFrom>
            <dateTo>2020-10-16</dateTo>
            <includeCredits>true</includeCredits>
            <includeNew>true</includeNew>
         </parameters>
      </v5:getPaymentRequests>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>100emp2401</con:username><con:password>b8n1OfNkej</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/AccountReceivableAPI/getPaymentRequestsRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="ef21ee38-a54e-487e-baf5-d65848393e1a" isOneWay="false" action="" name="getTransactions" bindingOperationName="getTransactions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5dbe19c7-387a-4e3b-b6ca-66b9ec3f2529" name="getTransaction"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://skilld.exerp.qa/api/v5/AccountReceivableAPI</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:getTransactions>
         <parameters>
            <personKey>
               <center>131</center>
               <id>979</id>
               </personKey>
            <accountReceivableTypeId>1</accountReceivableTypeId>
            <dateFrom>2019-04-01</dateFrom>
            <dateTo>2019-04-30</dateTo>
         </parameters>
      </v5:getTransactions>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>100emp1</con:username><con:password>vombat</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/AccountReceivableAPI/getTransactionsRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="d4489a32-9fcb-4519-ae33-a8e0a0040c61" isOneWay="false" action="" name="registerDebtCollectionPayment" bindingOperationName="registerDebtCollectionPayment" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b7ec397f-ea7a-4d00-b312-7953fb807c60" isOneWay="false" action="" name="registerPayment" bindingOperationName="registerPayment" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="66de2662-0173-45e9-bd15-76558ba722d3" isOneWay="false" action="" name="registerPaymentOnPaymentRequestUsingInvoiceKey" bindingOperationName="registerPaymentOnPaymentRequestUsingInvoiceKey" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="48541cdc-dc57-4f69-96cc-ecb238466bcb" isOneWay="false" action="" name="registerPaymentOnPaymentRequestUsingInvoiceRef" bindingOperationName="registerPaymentOnPaymentRequestUsingInvoiceRef" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="07a57fcc-83c9-499b-948e-095399aabd20" isOneWay="false" action="" name="reversePaymentRequest" bindingOperationName="reversePaymentRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="77122415-2300-4d1d-8a6c-635b3db3328f" isOneWay="false" action="" name="setOtherPayer" bindingOperationName="setOtherPayer" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fffb3afa-8ffb-478e-a866-faafc2e4a264" isOneWay="false" action="" name="validateBankInfo" bindingOperationName="validateBankInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="29eee0ba-5d81-45f0-ac5f-f79c03cea2f3" isOneWay="false" action="" name="validateBankInfoExternal" bindingOperationName="validateBankInfoExternal" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="d358076e-4893-4f82-9ef3-5999897b1434" wsaVersion="NONE" name="BookingAPIBinding" type="wsdl" bindingName="{http://v5.api.eclub.procard.dk/}BookingAPIBinding" soapVersion="1_1" anonymous="optional" definition="https://skilld.exerp.qa/api/v5/BookingAPI?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://lite-test.exerp.com/api/v5/BookingAPI?wsdl"><con:part><con:url>https://lite-test.exerp.com/api/v5/BookingAPI?wsdl</con:url><con:content><![CDATA[<definitions name="BookingAPIService" targetNamespace="http://v5.api.eclub.procard.dk/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://jaxb.dev.java.net/array" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://v5.api.eclub.procard.dk/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <types>
    <xs:schema targetNamespace="http://v5.api.eclub.procard.dk/" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="APIException" type="tns:APIException"/>
      <xs:complexType name="compositeKey">
        <xs:sequence>
          <xs:element name="center" type="xs:int"/>
          <xs:element name="id" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="APIException">
        <xs:sequence>
          <xs:element minOccurs="0" name="errorCode" type="tns:errorCode"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="errorDetail" type="tns:errorDetail"/>
          <xs:element minOccurs="0" name="errorMessage" type="xs:string"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="errorDetail">
        <xs:sequence>
          <xs:element minOccurs="0" name="info" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:errorDetailType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="findClassesParameters">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="activityGroupIds" nillable="true" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="activityIds" nillable="true" type="xs:int"/>
          <xs:element minOccurs="0" name="bookableViaAPI" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="centers" nillable="true" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="colorGroups" nillable="true" type="tns:colorGroup"/>
          <xs:element name="dateInterval" type="tns:interval"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="externalIds" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="instructor" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="timeIntervals" nillable="true" type="tns:interval"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="weekdays" nillable="true" type="tns:weekDay"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="colorGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="colorGroupId" type="xs:int"/>
          <xs:element minOccurs="0" name="hexColor" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="interval">
        <xs:sequence>
          <xs:element name="from" type="xs:string"/>
          <xs:element name="to" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="booking">
        <xs:sequence>
          <xs:element minOccurs="0" name="activity" type="tns:activity"/>
          <xs:element minOccurs="0" name="bookedCount" type="xs:int"/>
          <xs:element minOccurs="0" name="bookingId" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="classCapacity" type="xs:int"/>
          <xs:element minOccurs="0" name="date" type="xs:string"/>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element minOccurs="0" name="endTime" type="xs:string"/>
          <xs:element minOccurs="0" name="energyConsumptionKcal" type="xs:decimal"/>
          <xs:element minOccurs="0" name="externalId" type="xs:string"/>
          <xs:element minOccurs="0" name="hexColor" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="instructorNames" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="instructors">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="instructor" type="tns:personSimple"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="roomNames" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="startTime" type="xs:string"/>
          <xs:element minOccurs="0" name="waitingListCount" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="activity">
        <xs:sequence>
          <xs:element minOccurs="0" name="activityId" type="xs:int"/>
          <xs:element minOccurs="0" name="color" type="tns:activityColor"/>
          <xs:element minOccurs="0" name="colorGroup" type="tns:colorGroup"/>
          <xs:element minOccurs="0" name="energyConsumptionKcalPerHour" type="xs:int"/>
          <xs:element minOccurs="0" name="externalId" type="xs:string"/>
          <xs:element minOccurs="0" name="group" type="tns:activityGroup"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="seatBooking" type="tns:seatBookingType"/>
          <xs:element minOccurs="0" name="type" type="tns:activityType"/>
          <xs:element minOccurs="0" name="waitingListCapacity" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="activityGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="bookableViaAPI" type="xs:boolean"/>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element minOccurs="0" name="id" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="personSimple">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="tns:personName"/>
          <xs:element minOccurs="0" name="personKey" type="tns:apiPersonKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="personName">
        <xs:sequence>
          <xs:element minOccurs="0" name="first" type="xs:string"/>
          <xs:element minOccurs="0" name="full" type="xs:string"/>
          <xs:element minOccurs="0" name="last" type="xs:string"/>
          <xs:element minOccurs="0" name="middle" type="xs:string"/>
          <xs:element minOccurs="0" name="nick" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="apiPersonKey">
        <xs:complexContent>
          <xs:extension base="tns:compositeKey">
            <xs:sequence>
              <xs:element minOccurs="0" name="externalId" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="participation">
        <xs:sequence>
          <xs:element minOccurs="0" name="booking" type="tns:booking"/>
          <xs:element name="canShowUp" type="xs:boolean"/>
          <xs:element minOccurs="0" name="energyConsumptionKcal" type="xs:decimal"/>
          <xs:element minOccurs="0" name="externalId" type="xs:string"/>
          <xs:element minOccurs="0" name="ownerId" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="ownerName" type="xs:string"/>
          <xs:element minOccurs="0" name="participationId" type="tns:compositeKey"/>
          <xs:element name="participationListIndex" type="xs:int"/>
          <xs:element minOccurs="0" name="personId" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="personName" type="xs:string"/>
          <xs:element minOccurs="0" name="qrCode" type="tns:mimeDocument"/>
          <xs:element minOccurs="0" name="seat" type="tns:seat"/>
          <xs:element minOccurs="0" name="state" type="tns:participationState"/>
          <xs:element name="usedOwnerPrivilege" type="xs:boolean"/>
          <xs:element minOccurs="0" name="waitingListIndex" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="mimeDocument">
        <xs:sequence>
          <xs:element minOccurs="0" name="data" type="xs:base64Binary"/>
          <xs:element minOccurs="0" name="type" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="seat">
        <xs:sequence>
          <xs:element name="name" type="xs:string"/>
          <xs:element name="position" type="xs:decimal"/>
          <xs:element name="row" type="xs:decimal"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getActivityGroupsParameter">
        <xs:sequence>
          <xs:element minOccurs="0" name="bookableViaAPI" type="xs:boolean"/>
          <xs:element name="centerId" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="availableActivity">
        <xs:sequence>
          <xs:element minOccurs="0" name="activityGroup" type="tns:activityGroup"/>
          <xs:element minOccurs="0" name="activityId" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="allowedDurations" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="colorGroup" type="tns:colorGroup"/>
          <xs:element minOccurs="0" name="courseConfiguration" type="tns:courseConfiguration"/>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="resourceGroupExternalIds" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="courseConfiguration">
        <xs:sequence>
          <xs:element minOccurs="0" name="ageGroup" type="tns:ageGroup"/>
          <xs:element minOccurs="0" name="courseLevel" type="tns:courseLevel"/>
          <xs:element minOccurs="0" name="courseType" type="tns:courseType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ageGroup">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
          <xs:element minOccurs="0" name="maxAge" type="tns:ageGroupLimit"/>
          <xs:element minOccurs="0" name="minAge" type="tns:ageGroupLimit"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ageGroupLimit">
        <xs:sequence>
          <xs:element minOccurs="0" name="unit" type="tns:ageGroupTimeUnit"/>
          <xs:element name="value" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="courseLevel">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="courseType">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="weekScheduleParameter">
        <xs:sequence>
          <xs:element minOccurs="0" name="activityGroupId" type="xs:int"/>
          <xs:element minOccurs="0" name="activityId" type="xs:int"/>
          <xs:element name="centerId" type="xs:int"/>
          <xs:element name="startDate" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createClassBookingParameter">
        <xs:sequence>
          <xs:element name="activityKey" type="xs:int"/>
          <xs:element name="centerId" type="xs:int"/>
          <xs:element minOccurs="0" name="color" type="tns:colorGroup"/>
          <xs:element name="date" type="xs:string"/>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element name="duration" type="xs:int"/>
          <xs:element minOccurs="0" name="externalId" type="xs:string"/>
          <xs:element minOccurs="0" name="maxCapacity" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element maxOccurs="unbounded" name="resourceKeys" type="tns:compositeKey"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="staffPersonKeys" nillable="true" type="tns:apiPersonKey"/>
          <xs:element name="time" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateClassBookingParameter">
        <xs:sequence>
          <xs:element name="bookingKey" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="color" type="tns:colorGroup"/>
          <xs:element minOccurs="0" name="date" type="xs:string"/>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element name="duration" type="xs:int"/>
          <xs:element minOccurs="0" name="externalId" type="xs:string"/>
          <xs:element minOccurs="0" name="maxCapacity" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="resourceKeys" nillable="true" type="tns:compositeKey"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="staffPersonKeys" nillable="true" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="time" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="availableSeatsParameters">
        <xs:sequence>
          <xs:element name="bookingKey" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="centerId" type="xs:int"/>
          <xs:element minOccurs="0" name="personId" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="personType" type="tns:personType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="availableSeatsResult">
        <xs:sequence>
          <xs:element minOccurs="0" name="seats">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="seat" type="tns:seat"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createOrUpdateParticipationParams">
        <xs:sequence>
          <xs:element name="bookingId" type="tns:compositeKey"/>
          <xs:element name="bookingOwnerPersonId" type="tns:apiPersonKey"/>
          <xs:element name="participants">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="participant" type="tns:participant"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="paymentInfo" type="tns:paymentInfo"/>
          <xs:element minOccurs="0" name="productToPurchaseKey" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="sendConfirmationMessage" type="xs:boolean"/>
          <xs:element name="userInterfaceType" type="tns:userInterfaceType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="participant">
        <xs:sequence>
          <xs:element name="personKey" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="seatName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="paymentInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="amountPaidByCustomer" type="xs:string"/>
          <xs:element minOccurs="0" name="creditCardPaymentInfo" type="tns:creditCardPaymentInfo"/>
          <xs:element minOccurs="0" name="creditCardTransactionRef" type="xs:string"/>
          <xs:element minOccurs="0" name="installmentPlanConfigExternalId" type="xs:string"/>
          <xs:element minOccurs="0" name="paymentAgreementKeyForCollection" type="tns:compositeSubKey"/>
          <xs:element name="paymentMethod" type="tns:paymentMethod"/>
          <xs:element minOccurs="0" name="shoppingBasketCenter" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="creditCardPaymentInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="cardDetailsEncrypted" type="xs:string"/>
          <xs:element name="createAgreement" type="xs:boolean"/>
          <xs:element minOccurs="0" name="replacePaymentAgreementKey" type="tns:compositeSubKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="compositeSubKey">
        <xs:complexContent>
          <xs:extension base="tns:compositeKey">
            <xs:sequence>
              <xs:element name="subId" type="xs:int"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="createOrUpdateParticipationResult">
        <xs:sequence>
          <xs:element minOccurs="0" name="invoiceKey" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="participations">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="participation" type="tns:participation"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAvailableAgeGroupsParameters">
        <xs:sequence>
          <xs:element name="scopeId" type="xs:int"/>
          <xs:element name="scopeType" type="tns:scopeType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAvailableAgeGroupsResult">
        <xs:sequence>
          <xs:element minOccurs="0" name="ageGroups">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="ageGroup" type="tns:availableAgeGroup"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="availableAgeGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="externalId" type="xs:string"/>
          <xs:element name="id" type="xs:int"/>
          <xs:element minOccurs="0" name="maxAge" type="tns:ageGroupLimit"/>
          <xs:element minOccurs="0" name="minAge" type="tns:ageGroupLimit"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element name="strictMinAge" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="resource">
        <xs:sequence>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
          <xs:element minOccurs="0" name="externalId" type="xs:string"/>
          <xs:element minOccurs="0" name="instructorPosition" type="xs:float"/>
          <xs:element minOccurs="0" name="instructorRow" type="xs:float"/>
          <xs:element minOccurs="0" name="key" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="resourceGroupExternalIds" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="seats">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="seat" type="tns:seat"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="errorCode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UNKNOWN_ERROR"/>
          <xs:enumeration value="CREATE_EXCEPTION"/>
          <xs:enumeration value="REMOVE_EXCEPTION"/>
          <xs:enumeration value="SECURITY"/>
          <xs:enumeration value="SECURITY_ROLE"/>
          <xs:enumeration value="ARGUMENT_IS_NULL"/>
          <xs:enumeration value="ILLEGAL_ARGUMENT"/>
          <xs:enumeration value="PARSE_ERROR"/>
          <xs:enumeration value="ENTITY_NOT_FOUND"/>
          <xs:enumeration value="CONFLICTING_CHANGE"/>
          <xs:enumeration value="INVALID_ZIPCODE"/>
          <xs:enumeration value="INVALID_SOCIAL_SECURITY_NUMBER"/>
          <xs:enumeration value="INVALID_COMPANYID"/>
          <xs:enumeration value="INVALID_PHONE_NUMBER"/>
          <xs:enumeration value="CLIENT"/>
          <xs:enumeration value="ENTITY_IDENTIFIER_STATUS"/>
          <xs:enumeration value="DUPLICATE_PERSON"/>
          <xs:enumeration value="DUPLICATE_EXTERNAL_ID"/>
          <xs:enumeration value="FRIEND_RESTRICTION"/>
          <xs:enumeration value="EMPLOYEE_ALREADY_EXIST"/>
          <xs:enumeration value="DUPLICATE_COMPANY"/>
          <xs:enumeration value="EXPENSIVE_SEARCH"/>
          <xs:enumeration value="MULTIPLE_PERSONS_FOUND"/>
          <xs:enumeration value="NOT_DELIVERABLE"/>
          <xs:enumeration value="CIRCULAR_REFERENCE"/>
          <xs:enumeration value="REFERENCE"/>
          <xs:enumeration value="PERSON_NOT_EDITABLE"/>
          <xs:enumeration value="PERSON_TRANSFER"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_FOUND"/>
          <xs:enumeration value="ACCOUNT_RECEIVABLE_IS_BLOCKED"/>
          <xs:enumeration value="BANK_ACCOUNT_IS_BLOCKED"/>
          <xs:enumeration value="DEBIT_MAX"/>
          <xs:enumeration value="INVALID_PAYMENT_AGREEMENT"/>
          <xs:enumeration value="INVALID_BANK_INFO"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_CREDITOR_FOUND"/>
          <xs:enumeration value="PARTICIPATION_TIME_INTERVAL_OVERLAP"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLACKLISTED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLOCKED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="BOOKING_WAITING_LIST_FULL"/>
          <xs:enumeration value="BOOKING_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_RESTRICTION"/>
          <xs:enumeration value="OUTSIDE_BOOKING_WINDOW_EXCEPTION"/>
          <xs:enumeration value="CUSTOMER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="CENTER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_COLLECTION_NOT_PAID_FOR"/>
          <xs:enumeration value="NO_PRIVILEGE_FOR_PARTICIPATION"/>
          <xs:enumeration value="ALL_PARTICIPATIONS_TAKEN"/>
          <xs:enumeration value="SHOWUP_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_CANCELLATION"/>
          <xs:enumeration value="TOO_EARLY_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="TOO_EARLY_TO_SHOWUP"/>
          <xs:enumeration value="TOO_LATE_TO_SHOWUP"/>
          <xs:enumeration value="PARTICIPANT_TOO_MANY_OPEN_BOOKINGS"/>
          <xs:enumeration value="RESOURCE_OCCUPIED"/>
          <xs:enumeration value="RESOURCE_START_TIME_RESTRICTION"/>
          <xs:enumeration value="RESOURCE_TIME_RESTRICTION"/>
          <xs:enumeration value="ACTIVITY_STATE_INVALID"/>
          <xs:enumeration value="NO_PARENT_BOOKING_FOUND"/>
          <xs:enumeration value="STAFF_BLACKLISTED"/>
          <xs:enumeration value="STAFF_OCCUPIED"/>
          <xs:enumeration value="TOO_MANY_SUB_STAFF_USAGES"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_BOOKED"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_SHOWEDUP"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_BOOKING"/>
          <xs:enumeration value="LISTS_FULL"/>
          <xs:enumeration value="TOO_LATE_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="PARTICIPANT_OCCUPIED"/>
          <xs:enumeration value="FULL_BOOKING_RESTRICTION"/>
          <xs:enumeration value="IN_ADVANCE_LIMIT_BOOKING_RESTRICTION"/>
          <xs:enumeration value="PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="PARTICIPANT_BLACKLISTED"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BOOKING"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CENTER"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CUSTOMER"/>
          <xs:enumeration value="UNABLE_TO_REFRESH_WAITING_LIST"/>
          <xs:enumeration value="TOO_FEW_PARTICIPANTS"/>
          <xs:enumeration value="FREEZE_MAX_PREBOOK_PERIOD"/>
          <xs:enumeration value="FREEZE_MIN_OR_MAX_DURATION"/>
          <xs:enumeration value="FREEZE_TOO_LONG"/>
          <xs:enumeration value="FREEZE_TOO_SHORT"/>
          <xs:enumeration value="FREEZE_MAX_NUMBER_REACHED"/>
          <xs:enumeration value="TOO_MANY_FREEZES_PERIOD"/>
          <xs:enumeration value="TOO_MANY_FREEZES_TOTAL"/>
          <xs:enumeration value="FREEZE_MAX_TOTAL_DURATION_REACHED"/>
          <xs:enumeration value="FREEZE_NOT_ALLOWED"/>
          <xs:enumeration value="FREEZE_START_AND_STOP_DATE"/>
          <xs:enumeration value="FREEZE_START_IN_THE_PAST"/>
          <xs:enumeration value="FREEZE_END_BEFORE_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_AFTER_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_BEFORE_SUBSCRIPTION_START"/>
          <xs:enumeration value="FREEZE_OVERLAP"/>
          <xs:enumeration value="FREEZE_FUTURE_FREEZE"/>
          <xs:enumeration value="BOOKINGS_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="PARTICIPATION_ALREADY_CANCELLED"/>
          <xs:enumeration value="PARTICIPATION_CANCELLED"/>
          <xs:enumeration value="MINIMUM_AGE_EXCEPTION"/>
          <xs:enumeration value="TEMPLATE_NOT_DEFINED"/>
          <xs:enumeration value="INVALID_OTHER_PAYER_TYPE"/>
          <xs:enumeration value="DIFFERENT_COUNTRY_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_IS_NOT_STAFF"/>
          <xs:enumeration value="OTHER_PAYER_HAS_OTHER_PAYER"/>
          <xs:enumeration value="NO_VALID_ACCOUNT_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_STATUS_NOT_VALID_FOR_ATTEND"/>
          <xs:enumeration value="ATTENDING_PERSON_BLACKLISTED"/>
          <xs:enumeration value="MISSING_PRIVILEGE_FOR_ATTEND"/>
          <xs:enumeration value="ATTEND_NOT_POSSIBLE_AT_SPECIFIED_TIME"/>
          <xs:enumeration value="CLIPCARD_NOT_USABLE"/>
          <xs:enumeration value="TOO_MANY_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="NOT_ENOUGH_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="LOGIN_BLOCKED"/>
          <xs:enumeration value="PASSWORD_EXPIRED"/>
          <xs:enumeration value="PERSON_DELETED"/>
          <xs:enumeration value="PERSON_ANONYMIZED"/>
          <xs:enumeration value="INVALID_PICTURE"/>
          <xs:enumeration value="PERSON_NOT_FOUND_FOR_VENDING"/>
          <xs:enumeration value="TOO_MANY_MATCHES"/>
          <xs:enumeration value="PASSWORD_NOT_SET"/>
          <xs:enumeration value="PASSWORD_TOO_SHORT"/>
          <xs:enumeration value="CANNOT_PARTICIPATE_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="INVALID_STATUS"/>
          <xs:enumeration value="CONCURRENT_CALLS"/>
          <xs:enumeration value="CANNOT_UPDATE_COMPLETED_QUESTIONNAIRE"/>
          <xs:enumeration value="MISSING_ADMIN_FEE_PRODUCT"/>
          <xs:enumeration value="LOGIN_NOT_VALID"/>
          <xs:enumeration value="ACTIVE_TASKS_ALREADY_EXISTS_FOR_PERSON"/>
          <xs:enumeration value="TASK_TYPE_EXTERNAL_KEY_DOES_NOT_EXIST"/>
          <xs:enumeration value="SUBSCRIPTION_OF_SAME_TYPE"/>
          <xs:enumeration value="PERSON_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_KEY_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_BLOCKED"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_UNBLOCKED"/>
          <xs:enumeration value="INVALID_EMAIL"/>
          <xs:enumeration value="CENTER_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_TYPE_NOT_STRING"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_UPDATE_NOT_ALLOWED"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_VALUE_NOT_ALLOWED"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="CHILD_MUST_HAVE_AT_LEAST_ONE_PARENT"/>
          <xs:enumeration value="CHILD_HAS_TOO_MANY_PARENTS"/>
          <xs:enumeration value="PARENT_HAS_TOO_MANY_CHILDREN"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_ALREADY_EXISTS"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_DOES_NOT_EXIST"/>
          <xs:enumeration value="GUARDIAN_IS_TOO_YOUNG"/>
          <xs:enumeration value="CHILD_IS_TOO_OLD"/>
          <xs:enumeration value="AGE_NOT_SET"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_PERSON_MISMATCH"/>
          <xs:enumeration value="PAYMENT_CYCLE_TYPE_NOT_ALLOWED_EXCEPTION"/>
          <xs:enumeration value="SUBSCRIPTION_DOES_NOT_BELONG_TO_MEMBER"/>
          <xs:enumeration value="CANNOT_DELETE_SUBSCRIPTION"/>
          <xs:enumeration value="NO_PAYMENT_AGREEMENT_FOUND"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_VALID_FOR_SALES"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_ACTIVE"/>
          <xs:enumeration value="PAYMENT_CYCLE_NOT_ALLOWED"/>
          <xs:enumeration value="SUBSCRIPTION_SALE_OUTSIDE_HOME_CLUB_NOT_ALLOWED"/>
          <xs:enumeration value="BELOW_REQUIRED_AGE_FOR_EMAIL_CAPTURE"/>
          <xs:enumeration value="ROLE_NOT_FOUND"/>
          <xs:enumeration value="ACTION_NOT_ALLOWED"/>
          <xs:enumeration value="SCOPE_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_BLOCKED"/>
          <xs:enumeration value="ROLE_NOT_ASSIGNED"/>
          <xs:enumeration value="INVALID_EMPLOYEE_KEY"/>
          <xs:enumeration value="MISSING_PRIVILEGES"/>
          <xs:enumeration value="DATE_PARSE_ERROR"/>
          <xs:enumeration value="DATE_INVALID"/>
          <xs:enumeration value="CLIPCARD_NOT_ACTIVE"/>
          <xs:enumeration value="GROUP_ALREADY_EXIST"/>
          <xs:enumeration value="EMPLOYEE_AND_PERSON_KEY_SET"/>
          <xs:enumeration value="MULTIPLE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="MULTIPLE_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_ACTIVE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="errorDetailType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="MISSING_ACCESS_GROUP"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_DATE"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_TIME"/>
          <xs:enumeration value="MISSING_PRIVILEGES_COUNT"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="ALLOWED_BOOKING_WINDOW_TIMESLOT"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="weekDay">
        <xs:restriction base="xs:string">
          <xs:enumeration value="MONDAY"/>
          <xs:enumeration value="TUESDAY"/>
          <xs:enumeration value="WEDNESDAY"/>
          <xs:enumeration value="THURSDAY"/>
          <xs:enumeration value="FRIDAY"/>
          <xs:enumeration value="SATURDAY"/>
          <xs:enumeration value="SUNDAY"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="activityColor">
        <xs:restriction base="xs:string">
          <xs:enumeration value="WHITE"/>
          <xs:enumeration value="YELLOW"/>
          <xs:enumeration value="GREEN"/>
          <xs:enumeration value="BLUE"/>
          <xs:enumeration value="ORANGE"/>
          <xs:enumeration value="RED"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="seatBookingType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NOT_AVAILABLE"/>
          <xs:enumeration value="MANDATORY"/>
          <xs:enumeration value="OPTIONAL"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="activityType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="AEROBIC"/>
          <xs:enumeration value="SPINNING"/>
          <xs:enumeration value="SWIMMING"/>
          <xs:enumeration value="OUTDOORS"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="participationState">
        <xs:restriction base="xs:string">
          <xs:enumeration value="BOOKED"/>
          <xs:enumeration value="OVERBOOKED_WAITINGLIST"/>
          <xs:enumeration value="CANCELLED_BY_CENTER"/>
          <xs:enumeration value="CANCELLED_BY_USER"/>
          <xs:enumeration value="CANCELLED_BY_USER_TOO_LATE"/>
          <xs:enumeration value="OVERBOOKED_SHOWED_UP"/>
          <xs:enumeration value="BOOKED_BUT_LATE"/>
          <xs:enumeration value="PARTICIPATION"/>
          <xs:enumeration value="BOOKED_NO_SHOW_UP"/>
          <xs:enumeration value="SHOWED_UP_NO_PARTICIPATION"/>
          <xs:enumeration value="ATTEND"/>
          <xs:enumeration value="ATTEND_CANCELLED"/>
          <xs:enumeration value="ATTEND_IMPLICIT"/>
          <xs:enumeration value="INSTRUCTOR_ACTIVE"/>
          <xs:enumeration value="INSTRUCTOR_CANCELLED"/>
          <xs:enumeration value="BOOKED_IN_WAITING_LIST"/>
          <xs:enumeration value="TENTATIVE"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="personalBookingType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="OLD_BOOKINGS"/>
          <xs:enumeration value="NON_SHOW_UPS"/>
          <xs:enumeration value="SHOW_UPS"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="userInterfaceType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="CLIENT"/>
          <xs:enumeration value="WEB"/>
          <xs:enumeration value="KIOSK"/>
          <xs:enumeration value="MOBILE"/>
          <xs:enumeration value="OTHER"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ageGroupTimeUnit">
        <xs:restriction base="xs:string">
          <xs:enumeration value="MONTH"/>
          <xs:enumeration value="YEAR"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="personType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="PRIVATE"/>
          <xs:enumeration value="STUDENT"/>
          <xs:enumeration value="STAFF"/>
          <xs:enumeration value="FRIEND"/>
          <xs:enumeration value="CORPORATE"/>
          <xs:enumeration value="ONEMANCORPORATE"/>
          <xs:enumeration value="FAMILY"/>
          <xs:enumeration value="SENIOR"/>
          <xs:enumeration value="GUEST"/>
          <xs:enumeration value="CHILD"/>
          <xs:enumeration value="EXTERNAL_STAFF"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="paymentMethod">
        <xs:restriction base="xs:string">
          <xs:enumeration value="CASH_ACCOUNT"/>
          <xs:enumeration value="PAYMENT_ACCOUNT"/>
          <xs:enumeration value="SHOPPING_BASKET"/>
          <xs:enumeration value="INSTALLMENT_PLAN"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="scopeType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Global"/>
          <xs:enumeration value="Tree"/>
          <xs:enumeration value="Area"/>
          <xs:enumeration value="Center"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType final="#all" name="bookingArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:booking"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="participationArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:participation"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="activityGroupArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:activityGroup"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="availableActivityArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:availableActivity"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="resourceArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:resource"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema targetNamespace="http://jaxb.dev.java.net/array" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:complexType final="#all" name="intArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </types>
  <message name="BookingAPI_getPersonParticipationsResponse">
    <part name="return" type="tns:participationArray"/>
  </message>
  <message name="BookingAPI_getParticipationQRCode">
    <part name="participationId" type="tns:compositeKey"/>
  </message>
  <message name="BookingAPI_createOrUpdateParticipation">
    <part name="parameters" type="tns:createOrUpdateParticipationParams"/>
  </message>
  <message name="BookingAPI_getActivityGroupsResponse">
    <part name="return" type="tns:activityGroupArray"/>
  </message>
  <message name="BookingAPI_createParticipationAndSendMessageResponse">
    <part name="return" type="tns:participation"/>
  </message>
  <message name="BookingAPI_getPersonParticipations">
    <part name="personKey" type="tns:apiPersonKey"/>
    <part name="fromDate" type="xsd:string"/>
    <part name="toDate" type="xsd:string"/>
    <part name="personalBookingType" type="tns:personalBookingType"/>
  </message>
  <message name="BookingAPI_createParticipationAndSendMessage">
    <part name="personKey" type="tns:apiPersonKey"/>
    <part name="bookingId" type="tns:compositeKey"/>
    <part name="userInterfaceType" type="tns:userInterfaceType"/>
  </message>
  <message name="BookingAPI_getAvailableActivities">
    <part name="centers" type="ns1:intArray"/>
  </message>
  <message name="BookingAPI_cancelPersonParticipationResponse"/>
  <message name="BookingAPI_getAvailableSeatsResponse">
    <part name="return" type="tns:availableSeatsResult"/>
  </message>
  <message name="BookingAPI_getResources">
    <part name="center" type="xsd:int"/>
    <part name="activityKey" type="xsd:int"/>
  </message>
  <message name="BookingAPI_createClass">
    <part name="parameters" type="tns:createClassBookingParameter"/>
  </message>
  <message name="BookingAPI_getActivityGroups">
    <part name="parameters" type="tns:getActivityGroupsParameter"/>
  </message>
  <message name="BookingAPI_getAvailableSeats">
    <part name="parameters" type="tns:availableSeatsParameters"/>
  </message>
  <message name="BookingAPI_getAvailableAgeGroupsResponse">
    <part name="return" type="tns:getAvailableAgeGroupsResult"/>
  </message>
  <message name="BookingAPI_updateClassResponse">
    <part name="return" type="tns:booking"/>
  </message>
  <message name="BookingAPI_createOrUpdateParticipationResponse">
    <part name="return" type="tns:createOrUpdateParticipationResult"/>
  </message>
  <message name="BookingAPI_findClassesResponse">
    <part name="return" type="tns:bookingArray"/>
  </message>
  <message name="BookingAPI_showup">
    <part name="participationId" type="tns:compositeKey"/>
    <part name="userInterfaceType" type="tns:userInterfaceType"/>
  </message>
  <message name="BookingAPI_findPersonParticipations">
    <part name="personKey" type="tns:apiPersonKey"/>
  </message>
  <message name="BookingAPI_getClassResponse">
    <part name="return" type="tns:booking"/>
  </message>
  <message name="BookingAPI_cancelBooking">
    <part name="bookingKey" type="tns:compositeKey"/>
    <part name="notifyParticipants" type="xsd:boolean"/>
    <part name="notifyStaff" type="xsd:boolean"/>
    <part name="message" type="xsd:string"/>
  </message>
  <message name="BookingAPI_findClasses">
    <part name="parameters" type="tns:findClassesParameters"/>
  </message>
  <message name="BookingAPI_getClassParticipationsResponse">
    <part name="return" type="tns:participationArray"/>
  </message>
  <message name="BookingAPI_getResourcesResponse">
    <part name="return" type="tns:resourceArray"/>
  </message>
  <message name="BookingAPI_getClassParticipations">
    <part name="bookingId" type="tns:compositeKey"/>
  </message>
  <message name="BookingAPI_cancelPersonParticipation">
    <part name="participationId" type="tns:compositeKey"/>
    <part name="personKey" type="tns:apiPersonKey"/>
    <part name="userInterfaceType" type="tns:userInterfaceType"/>
    <part name="sendCancelMessage" type="xsd:boolean"/>
  </message>
  <message name="BookingAPI_updateClass">
    <part name="parameters" type="tns:updateClassBookingParameter"/>
  </message>
  <message name="BookingAPI_getWeekSchedulePDFResponse">
    <part name="return" type="tns:mimeDocument"/>
  </message>
  <message name="BookingAPI_getWeekSchedulePDF">
    <part name="parameters" type="tns:weekScheduleParameter"/>
  </message>
  <message name="BookingAPI_getClass">
    <part name="bookingKey" type="tns:compositeKey"/>
  </message>
  <message name="BookingAPI_findPersonParticipationsResponse">
    <part name="return" type="tns:participationArray"/>
  </message>
  <message name="BookingAPI_getAvailableActivitiesResponse">
    <part name="return" type="tns:availableActivityArray"/>
  </message>
  <message name="BookingAPI_cancelBookingResponse"/>
  <message name="BookingAPI_getAvailableAgeGroups">
    <part name="parameters" type="tns:getAvailableAgeGroupsParameters"/>
  </message>
  <message name="APIException">
    <part element="tns:APIException" name="APIException"/>
  </message>
  <message name="BookingAPI_getParticipationQRCodeResponse">
    <part name="return" type="tns:mimeDocument"/>
  </message>
  <message name="BookingAPI_showupResponse">
    <part name="return" type="tns:participation"/>
  </message>
  <message name="BookingAPI_createClassResponse">
    <part name="return" type="tns:booking"/>
  </message>
  <portType name="BookingAPI">
    <operation name="cancelBooking" parameterOrder="bookingKey notifyParticipants notifyStaff message">
      <input message="tns:BookingAPI_cancelBooking"/>
      <output message="tns:BookingAPI_cancelBookingResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="cancelPersonParticipation" parameterOrder="participationId personKey userInterfaceType sendCancelMessage">
      <input message="tns:BookingAPI_cancelPersonParticipation"/>
      <output message="tns:BookingAPI_cancelPersonParticipationResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="createClass" parameterOrder="parameters">
      <input message="tns:BookingAPI_createClass"/>
      <output message="tns:BookingAPI_createClassResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="createOrUpdateParticipation" parameterOrder="parameters">
      <input message="tns:BookingAPI_createOrUpdateParticipation"/>
      <output message="tns:BookingAPI_createOrUpdateParticipationResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="createParticipationAndSendMessage" parameterOrder="personKey bookingId userInterfaceType">
      <input message="tns:BookingAPI_createParticipationAndSendMessage"/>
      <output message="tns:BookingAPI_createParticipationAndSendMessageResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="findClasses" parameterOrder="parameters">
      <input message="tns:BookingAPI_findClasses"/>
      <output message="tns:BookingAPI_findClassesResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="findPersonParticipations" parameterOrder="personKey">
      <input message="tns:BookingAPI_findPersonParticipations"/>
      <output message="tns:BookingAPI_findPersonParticipationsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getActivityGroups" parameterOrder="parameters">
      <input message="tns:BookingAPI_getActivityGroups"/>
      <output message="tns:BookingAPI_getActivityGroupsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getAvailableActivities" parameterOrder="centers">
      <input message="tns:BookingAPI_getAvailableActivities"/>
      <output message="tns:BookingAPI_getAvailableActivitiesResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getAvailableAgeGroups" parameterOrder="parameters">
      <input message="tns:BookingAPI_getAvailableAgeGroups"/>
      <output message="tns:BookingAPI_getAvailableAgeGroupsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getAvailableSeats" parameterOrder="parameters">
      <input message="tns:BookingAPI_getAvailableSeats"/>
      <output message="tns:BookingAPI_getAvailableSeatsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getClass" parameterOrder="bookingKey">
      <input message="tns:BookingAPI_getClass"/>
      <output message="tns:BookingAPI_getClassResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getClassParticipations" parameterOrder="bookingId">
      <input message="tns:BookingAPI_getClassParticipations"/>
      <output message="tns:BookingAPI_getClassParticipationsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getParticipationQRCode" parameterOrder="participationId">
      <input message="tns:BookingAPI_getParticipationQRCode"/>
      <output message="tns:BookingAPI_getParticipationQRCodeResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getPersonParticipations" parameterOrder="personKey fromDate toDate personalBookingType">
      <input message="tns:BookingAPI_getPersonParticipations"/>
      <output message="tns:BookingAPI_getPersonParticipationsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getResources" parameterOrder="center activityKey">
      <input message="tns:BookingAPI_getResources"/>
      <output message="tns:BookingAPI_getResourcesResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getWeekSchedulePDF" parameterOrder="parameters">
      <input message="tns:BookingAPI_getWeekSchedulePDF"/>
      <output message="tns:BookingAPI_getWeekSchedulePDFResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="showup" parameterOrder="participationId userInterfaceType">
      <input message="tns:BookingAPI_showup"/>
      <output message="tns:BookingAPI_showupResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="updateClass" parameterOrder="parameters">
      <input message="tns:BookingAPI_updateClass"/>
      <output message="tns:BookingAPI_updateClassResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
  </portType>
  <binding name="BookingAPIBinding" type="tns:BookingAPI">
    <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="cancelBooking">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="cancelPersonParticipation">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="createClass">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="createOrUpdateParticipation">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="createParticipationAndSendMessage">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="findClasses">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="findPersonParticipations">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getActivityGroups">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getAvailableActivities">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getAvailableAgeGroups">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getAvailableSeats">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getClass">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getClassParticipations">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getParticipationQRCode">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getPersonParticipations">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getResources">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getWeekSchedulePDF">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="showup">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="updateClass">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
  </binding>
  <service name="BookingAPIService">
    <port binding="tns:BookingAPIBinding" name="BookingAPIPort">
      <soap:address location="https://lite-test.exerp.com/api/v5/BookingAPI"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://lite-test.exerp.com/api/v5/BookingAPI</con:endpoint></con:endpoints><con:operation id="05227073-997c-49d1-95c2-110dd7ec6dff" isOneWay="false" action="" name="cancelBooking" bindingOperationName="cancelBooking" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e28078af-1c21-4ce6-9769-1652304c8dfb" name="cancelBooking"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://lite-test.exerp.com/api/v5/BookingAPI</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:cancelBooking>
         <bookingKey>
            <center>?</center>
            <id>?</id>
         </bookingKey>
         <notifyParticipants>?</notifyParticipants>
         <notifyStaff>?</notifyStaff>
         <message>?</message>
      </v5:cancelBooking>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/BookingAPI/cancelBookingRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="feba7fab-f1de-470b-b0a2-c7bab8a2210d" isOneWay="false" action="" name="cancelPersonParticipation" bindingOperationName="cancelPersonParticipation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7728d6a1-cc96-451d-a942-655912d0d227" isOneWay="false" action="" name="createClass" bindingOperationName="createClass" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8893a019-848a-4fcf-9eb6-3c6a86a55a5c" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://skilld.exerp.qa/api/v5/BookingAPI</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:createClass>
         <parameters>
            <activityKey>211</activityKey>
            <centerId>131</centerId>
            <date>2021-04-02</date>
            <duration>15</duration>
            <time>16:00</time>
            <description>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</description>           
            <resourceKeys>
               <center>131</center>
               <id>5</id>
            </resourceKeys>          
            <staffPersonKeys>
               <center>131</center>
               <id>5</id>
            </staffPersonKeys>           
         </parameters>
      </v5:createClass>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>100emp2401</con:username><con:password>b8n1OfNkej</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/BookingAPI/createClassRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="b65c6d43-c62a-4786-b9ff-a13dca08348c" isOneWay="false" action="" name="createOrUpdateParticipation" bindingOperationName="createOrUpdateParticipation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b5471ced-4a80-4e5b-a65f-494554730d9f" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://lite-test.exerp.com/api/v5/BookingAPI</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:createOrUpdateParticipation>
         <parameters>
            <bookingId>
               <center>?</center>
               <id>?</id>
            </bookingId>
            <bookingOwnerPersonId>
               <center>?</center>
               <id>?</id>
               <!--Optional:-->
               <externalId>?</externalId>
            </bookingOwnerPersonId>
            <participants>
               <!--1 or more repetitions:-->
               <participant>
                  <personKey>
                     <center>?</center>
                     <id>?</id>
                     <!--Optional:-->
                     <externalId>?</externalId>
                  </personKey>
                  <!--Optional:-->
                  <seatName>?</seatName>
               </participant>
            </participants>
            <!--Optional:-->
            <paymentInfo>
               <!--Optional:-->
               <amountPaidByCustomer>?</amountPaidByCustomer>
               <!--Optional:-->
               <creditCardPaymentInfo>
                  <!--Optional:-->
                  <cardDetailsEncrypted>?</cardDetailsEncrypted>
                  <createAgreement>?</createAgreement>
                  <!--Optional:-->
                  <replacePaymentAgreementKey>
                     <center>?</center>
                     <id>?</id>
                     <subId>?</subId>
                  </replacePaymentAgreementKey>
               </creditCardPaymentInfo>
               <!--Optional:-->
               <creditCardTransactionRef>?</creditCardTransactionRef>
               <!--Optional:-->
               <installmentPlanConfigExternalId>?</installmentPlanConfigExternalId>
               <!--Optional:-->
               <paymentAgreementKeyForCollection>
                  <center>?</center>
                  <id>?</id>
                  <subId>?</subId>
               </paymentAgreementKeyForCollection>
               <paymentMethod>?</paymentMethod>
               <!--Optional:-->
               <shoppingBasketCenter>?</shoppingBasketCenter>
            </paymentInfo>
            <!--Optional:-->
            <productToPurchaseKey>
               <center>?</center>
               <id>?</id>
            </productToPurchaseKey>
            <!--Optional:-->
            <sendConfirmationMessage>?</sendConfirmationMessage>
            <userInterfaceType>?</userInterfaceType>
         </parameters>
      </v5:createOrUpdateParticipation>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/BookingAPI/createOrUpdateParticipationRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="f6a5607b-0e3f-4e5e-8fe3-bb02bfc42b43" isOneWay="false" action="" name="createParticipationAndSendMessage" bindingOperationName="createParticipationAndSendMessage" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6d92492d-809f-4888-b08d-a42a8d65419d" isOneWay="false" action="" name="findClasses" bindingOperationName="findClasses" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cff7849b-048f-4d24-b7df-c08f8b47af98" isOneWay="false" action="" name="findPersonParticipations" bindingOperationName="findPersonParticipations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a5409725-a152-49c3-8c77-88201e549f63" name="FindPersonParticipations"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://skilld.exerp.qa/api/v5/PersonAPI</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:findPersonParticipations>
         <personKey>
            <center>131</center>
            <id>990</id>
            <!--Optional:-->
            <externalId>10122</externalId>
         </personKey>
      </v5:findPersonParticipations>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>100emp1</con:username><con:password>vombat</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/BookingAPI/findPersonParticipationsRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="947e8a28-4845-4b2d-9aa9-4ff70104cdd0" isOneWay="false" action="" name="getActivityGroups" bindingOperationName="getActivityGroups" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cfe8d147-0d07-4293-a36b-d1767a818bd4" isOneWay="false" action="" name="getAvailableActivities" bindingOperationName="getAvailableActivities" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3e81cde2-c6d4-48b7-b2a3-899aacab7f05" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://skilld.exerp.qa/api/v5/PersonAPI</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:getAvailableActivities>
         <centers>
            <!--Zero or more repetitions:-->
            <item>131</item>
         </centers>
      </v5:getAvailableActivities>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>100emp1</con:username><con:password>vombat</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/BookingAPI/getAvailableActivitiesRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="90eecea0-177b-4167-845b-54d63abfd459" isOneWay="false" action="" name="getAvailableAgeGroups" bindingOperationName="getAvailableAgeGroups" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c5382fa3-9665-403d-b576-ec3e7646e20e" isOneWay="false" action="" name="getAvailableSeats" bindingOperationName="getAvailableSeats" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a3f7b5db-e545-497b-b869-fd034052a4b0" isOneWay="false" action="" name="getClass" bindingOperationName="getClass" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="29753963-84ff-4c6d-84c0-28fea73ee74c" isOneWay="false" action="" name="getClassParticipations" bindingOperationName="getClassParticipations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0be8bec6-fdd9-40ce-924e-3a2a1f3072c0" isOneWay="false" action="" name="getParticipationQRCode" bindingOperationName="getParticipationQRCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fb41183b-8934-4df5-906e-1e4c9e5e0c8c" isOneWay="false" action="" name="getPersonParticipations" bindingOperationName="getPersonParticipations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d556db23-69cc-4205-8f55-98157e085b5a" isOneWay="false" action="" name="getResources" bindingOperationName="getResources" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c624a5b2-79c1-4c94-8e02-5df149fd5c10" isOneWay="false" action="" name="getWeekSchedulePDF" bindingOperationName="getWeekSchedulePDF" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f3a1e4be-b142-48b2-a136-13bf818c36b5" isOneWay="false" action="" name="showup" bindingOperationName="showup" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="29b35f94-d149-4a11-bea3-32c8865e9196" isOneWay="false" action="" name="updateClass" bindingOperationName="updateClass" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="176f3a05-0a84-43a8-afa1-531f2942043f" wsaVersion="NONE" name="ChildCareAPIBinding" type="wsdl" bindingName="{http://v5.api.eclub.procard.dk/}ChildCareAPIBinding" soapVersion="1_1" anonymous="optional" definition="https://lite-test.exerp.com/api/v5/ChildCareAPI?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://lite-test.exerp.com/api/v5/ChildCareAPI?wsdl"><con:part><con:url>https://lite-test.exerp.com/api/v5/ChildCareAPI?wsdl</con:url><con:content><![CDATA[<definitions name="ChildCareAPIService" targetNamespace="http://v5.api.eclub.procard.dk/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://v5.api.eclub.procard.dk/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <types>
    <xs:schema targetNamespace="http://v5.api.eclub.procard.dk/" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="APIException" type="tns:APIException"/>
      <xs:complexType name="childCareAvailability">
        <xs:sequence>
          <xs:element minOccurs="0" name="availableActivity" type="tns:childCareActivity"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="availableIntervals" nillable="true" type="tns:interval"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="childCareActivity">
        <xs:sequence>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element minOccurs="0" name="key" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="interval">
        <xs:sequence>
          <xs:element name="from" type="xs:string"/>
          <xs:element name="to" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="APIException">
        <xs:sequence>
          <xs:element minOccurs="0" name="errorCode" type="tns:errorCode"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="errorDetail" type="tns:errorDetail"/>
          <xs:element minOccurs="0" name="errorMessage" type="xs:string"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="errorDetail">
        <xs:sequence>
          <xs:element minOccurs="0" name="info" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:errorDetailType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="apiPersonKey">
        <xs:complexContent>
          <xs:extension base="tns:compositeKey">
            <xs:sequence>
              <xs:element minOccurs="0" name="externalId" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="compositeKey">
        <xs:sequence>
          <xs:element name="center" type="xs:int"/>
          <xs:element name="id" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="child">
        <xs:sequence>
          <xs:element minOccurs="0" name="birthDate" type="xs:string"/>
          <xs:element minOccurs="0" name="email" type="xs:string"/>
          <xs:element minOccurs="0" name="firstName" type="xs:string"/>
          <xs:element minOccurs="0" name="homePhone" type="xs:string"/>
          <xs:element minOccurs="0" name="isMale" type="xs:boolean"/>
          <xs:element minOccurs="0" name="key" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="lastName" type="xs:string"/>
          <xs:element minOccurs="0" name="mobilePhone" type="xs:string"/>
          <xs:element minOccurs="0" name="ssn" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="childCareBooking">
        <xs:sequence>
          <xs:element minOccurs="0" name="childCareActivity" type="tns:childCareActivity"/>
          <xs:element minOccurs="0" name="date" type="xs:string"/>
          <xs:element minOccurs="0" name="endTime" type="xs:string"/>
          <xs:element minOccurs="0" name="key" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="startTime" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="errorCode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UNKNOWN_ERROR"/>
          <xs:enumeration value="CREATE_EXCEPTION"/>
          <xs:enumeration value="REMOVE_EXCEPTION"/>
          <xs:enumeration value="SECURITY"/>
          <xs:enumeration value="SECURITY_ROLE"/>
          <xs:enumeration value="ARGUMENT_IS_NULL"/>
          <xs:enumeration value="ILLEGAL_ARGUMENT"/>
          <xs:enumeration value="PARSE_ERROR"/>
          <xs:enumeration value="ENTITY_NOT_FOUND"/>
          <xs:enumeration value="CONFLICTING_CHANGE"/>
          <xs:enumeration value="INVALID_ZIPCODE"/>
          <xs:enumeration value="INVALID_SOCIAL_SECURITY_NUMBER"/>
          <xs:enumeration value="INVALID_COMPANYID"/>
          <xs:enumeration value="INVALID_PHONE_NUMBER"/>
          <xs:enumeration value="CLIENT"/>
          <xs:enumeration value="ENTITY_IDENTIFIER_STATUS"/>
          <xs:enumeration value="DUPLICATE_PERSON"/>
          <xs:enumeration value="DUPLICATE_EXTERNAL_ID"/>
          <xs:enumeration value="FRIEND_RESTRICTION"/>
          <xs:enumeration value="EMPLOYEE_ALREADY_EXIST"/>
          <xs:enumeration value="DUPLICATE_COMPANY"/>
          <xs:enumeration value="EXPENSIVE_SEARCH"/>
          <xs:enumeration value="MULTIPLE_PERSONS_FOUND"/>
          <xs:enumeration value="NOT_DELIVERABLE"/>
          <xs:enumeration value="CIRCULAR_REFERENCE"/>
          <xs:enumeration value="REFERENCE"/>
          <xs:enumeration value="PERSON_NOT_EDITABLE"/>
          <xs:enumeration value="PERSON_TRANSFER"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_FOUND"/>
          <xs:enumeration value="ACCOUNT_RECEIVABLE_IS_BLOCKED"/>
          <xs:enumeration value="BANK_ACCOUNT_IS_BLOCKED"/>
          <xs:enumeration value="DEBIT_MAX"/>
          <xs:enumeration value="INVALID_PAYMENT_AGREEMENT"/>
          <xs:enumeration value="INVALID_BANK_INFO"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_CREDITOR_FOUND"/>
          <xs:enumeration value="PARTICIPATION_TIME_INTERVAL_OVERLAP"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLACKLISTED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLOCKED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="BOOKING_WAITING_LIST_FULL"/>
          <xs:enumeration value="BOOKING_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_RESTRICTION"/>
          <xs:enumeration value="OUTSIDE_BOOKING_WINDOW_EXCEPTION"/>
          <xs:enumeration value="CUSTOMER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="CENTER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_COLLECTION_NOT_PAID_FOR"/>
          <xs:enumeration value="NO_PRIVILEGE_FOR_PARTICIPATION"/>
          <xs:enumeration value="ALL_PARTICIPATIONS_TAKEN"/>
          <xs:enumeration value="SHOWUP_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_CANCELLATION"/>
          <xs:enumeration value="TOO_EARLY_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="TOO_EARLY_TO_SHOWUP"/>
          <xs:enumeration value="TOO_LATE_TO_SHOWUP"/>
          <xs:enumeration value="PARTICIPANT_TOO_MANY_OPEN_BOOKINGS"/>
          <xs:enumeration value="RESOURCE_OCCUPIED"/>
          <xs:enumeration value="RESOURCE_START_TIME_RESTRICTION"/>
          <xs:enumeration value="RESOURCE_TIME_RESTRICTION"/>
          <xs:enumeration value="ACTIVITY_STATE_INVALID"/>
          <xs:enumeration value="NO_PARENT_BOOKING_FOUND"/>
          <xs:enumeration value="STAFF_BLACKLISTED"/>
          <xs:enumeration value="STAFF_OCCUPIED"/>
          <xs:enumeration value="TOO_MANY_SUB_STAFF_USAGES"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_BOOKED"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_SHOWEDUP"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_BOOKING"/>
          <xs:enumeration value="LISTS_FULL"/>
          <xs:enumeration value="TOO_LATE_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="PARTICIPANT_OCCUPIED"/>
          <xs:enumeration value="FULL_BOOKING_RESTRICTION"/>
          <xs:enumeration value="IN_ADVANCE_LIMIT_BOOKING_RESTRICTION"/>
          <xs:enumeration value="PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="PARTICIPANT_BLACKLISTED"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BOOKING"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CENTER"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CUSTOMER"/>
          <xs:enumeration value="UNABLE_TO_REFRESH_WAITING_LIST"/>
          <xs:enumeration value="TOO_FEW_PARTICIPANTS"/>
          <xs:enumeration value="FREEZE_MAX_PREBOOK_PERIOD"/>
          <xs:enumeration value="FREEZE_MIN_OR_MAX_DURATION"/>
          <xs:enumeration value="FREEZE_TOO_LONG"/>
          <xs:enumeration value="FREEZE_TOO_SHORT"/>
          <xs:enumeration value="FREEZE_MAX_NUMBER_REACHED"/>
          <xs:enumeration value="TOO_MANY_FREEZES_PERIOD"/>
          <xs:enumeration value="TOO_MANY_FREEZES_TOTAL"/>
          <xs:enumeration value="FREEZE_MAX_TOTAL_DURATION_REACHED"/>
          <xs:enumeration value="FREEZE_NOT_ALLOWED"/>
          <xs:enumeration value="FREEZE_START_AND_STOP_DATE"/>
          <xs:enumeration value="FREEZE_START_IN_THE_PAST"/>
          <xs:enumeration value="FREEZE_END_BEFORE_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_AFTER_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_BEFORE_SUBSCRIPTION_START"/>
          <xs:enumeration value="FREEZE_OVERLAP"/>
          <xs:enumeration value="FREEZE_FUTURE_FREEZE"/>
          <xs:enumeration value="BOOKINGS_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="PARTICIPATION_ALREADY_CANCELLED"/>
          <xs:enumeration value="PARTICIPATION_CANCELLED"/>
          <xs:enumeration value="MINIMUM_AGE_EXCEPTION"/>
          <xs:enumeration value="TEMPLATE_NOT_DEFINED"/>
          <xs:enumeration value="INVALID_OTHER_PAYER_TYPE"/>
          <xs:enumeration value="DIFFERENT_COUNTRY_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_IS_NOT_STAFF"/>
          <xs:enumeration value="OTHER_PAYER_HAS_OTHER_PAYER"/>
          <xs:enumeration value="NO_VALID_ACCOUNT_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_STATUS_NOT_VALID_FOR_ATTEND"/>
          <xs:enumeration value="ATTENDING_PERSON_BLACKLISTED"/>
          <xs:enumeration value="MISSING_PRIVILEGE_FOR_ATTEND"/>
          <xs:enumeration value="ATTEND_NOT_POSSIBLE_AT_SPECIFIED_TIME"/>
          <xs:enumeration value="CLIPCARD_NOT_USABLE"/>
          <xs:enumeration value="TOO_MANY_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="NOT_ENOUGH_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="LOGIN_BLOCKED"/>
          <xs:enumeration value="PASSWORD_EXPIRED"/>
          <xs:enumeration value="PERSON_DELETED"/>
          <xs:enumeration value="PERSON_ANONYMIZED"/>
          <xs:enumeration value="INVALID_PICTURE"/>
          <xs:enumeration value="PERSON_NOT_FOUND_FOR_VENDING"/>
          <xs:enumeration value="TOO_MANY_MATCHES"/>
          <xs:enumeration value="PASSWORD_NOT_SET"/>
          <xs:enumeration value="PASSWORD_TOO_SHORT"/>
          <xs:enumeration value="CANNOT_PARTICIPATE_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="INVALID_STATUS"/>
          <xs:enumeration value="CONCURRENT_CALLS"/>
          <xs:enumeration value="CANNOT_UPDATE_COMPLETED_QUESTIONNAIRE"/>
          <xs:enumeration value="MISSING_ADMIN_FEE_PRODUCT"/>
          <xs:enumeration value="LOGIN_NOT_VALID"/>
          <xs:enumeration value="ACTIVE_TASKS_ALREADY_EXISTS_FOR_PERSON"/>
          <xs:enumeration value="TASK_TYPE_EXTERNAL_KEY_DOES_NOT_EXIST"/>
          <xs:enumeration value="SUBSCRIPTION_OF_SAME_TYPE"/>
          <xs:enumeration value="PERSON_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_KEY_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_BLOCKED"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_UNBLOCKED"/>
          <xs:enumeration value="INVALID_EMAIL"/>
          <xs:enumeration value="CENTER_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_TYPE_NOT_STRING"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_UPDATE_NOT_ALLOWED"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_VALUE_NOT_ALLOWED"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="CHILD_MUST_HAVE_AT_LEAST_ONE_PARENT"/>
          <xs:enumeration value="CHILD_HAS_TOO_MANY_PARENTS"/>
          <xs:enumeration value="PARENT_HAS_TOO_MANY_CHILDREN"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_ALREADY_EXISTS"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_DOES_NOT_EXIST"/>
          <xs:enumeration value="GUARDIAN_IS_TOO_YOUNG"/>
          <xs:enumeration value="CHILD_IS_TOO_OLD"/>
          <xs:enumeration value="AGE_NOT_SET"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_PERSON_MISMATCH"/>
          <xs:enumeration value="PAYMENT_CYCLE_TYPE_NOT_ALLOWED_EXCEPTION"/>
          <xs:enumeration value="SUBSCRIPTION_DOES_NOT_BELONG_TO_MEMBER"/>
          <xs:enumeration value="CANNOT_DELETE_SUBSCRIPTION"/>
          <xs:enumeration value="NO_PAYMENT_AGREEMENT_FOUND"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_VALID_FOR_SALES"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_ACTIVE"/>
          <xs:enumeration value="PAYMENT_CYCLE_NOT_ALLOWED"/>
          <xs:enumeration value="SUBSCRIPTION_SALE_OUTSIDE_HOME_CLUB_NOT_ALLOWED"/>
          <xs:enumeration value="BELOW_REQUIRED_AGE_FOR_EMAIL_CAPTURE"/>
          <xs:enumeration value="ROLE_NOT_FOUND"/>
          <xs:enumeration value="ACTION_NOT_ALLOWED"/>
          <xs:enumeration value="SCOPE_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_BLOCKED"/>
          <xs:enumeration value="ROLE_NOT_ASSIGNED"/>
          <xs:enumeration value="INVALID_EMPLOYEE_KEY"/>
          <xs:enumeration value="MISSING_PRIVILEGES"/>
          <xs:enumeration value="DATE_PARSE_ERROR"/>
          <xs:enumeration value="DATE_INVALID"/>
          <xs:enumeration value="CLIPCARD_NOT_ACTIVE"/>
          <xs:enumeration value="GROUP_ALREADY_EXIST"/>
          <xs:enumeration value="EMPLOYEE_AND_PERSON_KEY_SET"/>
          <xs:enumeration value="MULTIPLE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="MULTIPLE_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_ACTIVE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="errorDetailType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="MISSING_ACCESS_GROUP"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_DATE"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_TIME"/>
          <xs:enumeration value="MISSING_PRIVILEGES_COUNT"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="ALLOWED_BOOKING_WINDOW_TIMESLOT"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType final="#all" name="childCareAvailabilityArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:childCareAvailability"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="childCareBookingArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:childCareBooking"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="childArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:child"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </types>
  <message name="ChildCareAPI_getChildrenResponse">
    <part name="return" type="tns:childArray"/>
  </message>
  <message name="ChildCareAPI_getChildCareBookings">
    <part name="parentKey" type="tns:apiPersonKey"/>
  </message>
  <message name="ChildCareAPI_createChildResponse">
    <part name="return" type="tns:child"/>
  </message>
  <message name="ChildCareAPI_createChildCareBooking">
    <part name="childKey" type="tns:apiPersonKey"/>
    <part name="activityKey" type="xsd:int"/>
    <part name="parentKey" type="tns:apiPersonKey"/>
    <part name="arg3" type="xsd:string"/>
    <part name="arg4" type="xsd:string"/>
    <part name="arg5" type="xsd:string"/>
  </message>
  <message name="ChildCareAPI_getChildCareAvailabilitiesResponse">
    <part name="return" type="tns:childCareAvailabilityArray"/>
  </message>
  <message name="ChildCareAPI_createChild">
    <part name="parentKey" type="tns:apiPersonKey"/>
    <part name="child" type="tns:child"/>
  </message>
  <message name="ChildCareAPI_getChildCareAvailabilities">
    <part name="date" type="xsd:string"/>
    <part name="centerKey" type="xsd:int"/>
  </message>
  <message name="ChildCareAPI_getChildren">
    <part name="parentKey" type="tns:apiPersonKey"/>
  </message>
  <message name="ChildCareAPI_createChildCareBookingResponse">
    <part name="return" type="tns:childCareBooking"/>
  </message>
  <message name="APIException">
    <part element="tns:APIException" name="APIException"/>
  </message>
  <message name="ChildCareAPI_cancelChildCareBooking">
    <part name="bookingKey" type="tns:compositeKey"/>
  </message>
  <message name="ChildCareAPI_getChildCareBookingsResponse">
    <part name="return" type="tns:childCareBookingArray"/>
  </message>
  <message name="ChildCareAPI_cancelChildCareBookingResponse"/>
  <portType name="ChildCareAPI">
    <operation name="cancelChildCareBooking" parameterOrder="bookingKey">
      <input message="tns:ChildCareAPI_cancelChildCareBooking"/>
      <output message="tns:ChildCareAPI_cancelChildCareBookingResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="createChild" parameterOrder="parentKey child">
      <input message="tns:ChildCareAPI_createChild"/>
      <output message="tns:ChildCareAPI_createChildResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="createChildCareBooking" parameterOrder="childKey activityKey parentKey arg3 arg4 arg5">
      <input message="tns:ChildCareAPI_createChildCareBooking"/>
      <output message="tns:ChildCareAPI_createChildCareBookingResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getChildCareAvailabilities" parameterOrder="date centerKey">
      <input message="tns:ChildCareAPI_getChildCareAvailabilities"/>
      <output message="tns:ChildCareAPI_getChildCareAvailabilitiesResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getChildCareBookings" parameterOrder="parentKey">
      <input message="tns:ChildCareAPI_getChildCareBookings"/>
      <output message="tns:ChildCareAPI_getChildCareBookingsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getChildren" parameterOrder="parentKey">
      <input message="tns:ChildCareAPI_getChildren"/>
      <output message="tns:ChildCareAPI_getChildrenResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
  </portType>
  <binding name="ChildCareAPIBinding" type="tns:ChildCareAPI">
    <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="cancelChildCareBooking">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="createChild">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="createChildCareBooking">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getChildCareAvailabilities">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getChildCareBookings">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getChildren">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
  </binding>
  <service name="ChildCareAPIService">
    <port binding="tns:ChildCareAPIBinding" name="ChildCareAPIPort">
      <soap:address location="https://lite-test.exerp.com/api/v5/ChildCareAPI"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://lite-test.exerp.com/api/v5/ChildCareAPI</con:endpoint></con:endpoints><con:operation id="2b6b6e8a-eb24-4235-a74d-b3feb7734545" isOneWay="false" action="" name="cancelChildCareBooking" bindingOperationName="cancelChildCareBooking" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="881f1e43-8727-472c-b8af-20409ea659d3" isOneWay="false" action="" name="createChild" bindingOperationName="createChild" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9fc2e76c-b806-4993-8028-384c05104095" isOneWay="false" action="" name="createChildCareBooking" bindingOperationName="createChildCareBooking" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="832f514e-af2a-459a-a73c-933a6e6bb54f" isOneWay="false" action="" name="getChildCareAvailabilities" bindingOperationName="getChildCareAvailabilities" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6e5b7b33-9678-42f8-81da-302119f4906c" isOneWay="false" action="" name="getChildCareBookings" bindingOperationName="getChildCareBookings" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2d59d2a2-028f-4f26-96fa-02ee11b8e1a2" isOneWay="false" action="" name="getChildren" bindingOperationName="getChildren" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="831d1270-b263-490f-a12c-4b5547c0d869" wsaVersion="NONE" name="CompanyAPIBinding" type="wsdl" bindingName="{http://v5.api.eclub.procard.dk/}CompanyAPIBinding" soapVersion="1_1" anonymous="optional" definition="https://lite-test.exerp.com/api/v5/CompanyAPI?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://lite-test.exerp.com/api/v5/CompanyAPI?wsdl"><con:part><con:url>https://lite-test.exerp.com/api/v5/CompanyAPI?wsdl</con:url><con:content><![CDATA[<definitions name="CompanyAPIService" targetNamespace="http://v5.api.eclub.procard.dk/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://v5.api.eclub.procard.dk/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <types>
    <xs:schema targetNamespace="http://v5.api.eclub.procard.dk/" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="APIException" type="tns:APIException"/>
      <xs:complexType name="compositeKey">
        <xs:sequence>
          <xs:element name="center" type="xs:int"/>
          <xs:element name="id" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="mimeDocument">
        <xs:sequence>
          <xs:element minOccurs="0" name="data" type="xs:base64Binary"/>
          <xs:element minOccurs="0" name="type" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="APIException">
        <xs:sequence>
          <xs:element minOccurs="0" name="errorCode" type="tns:errorCode"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="errorDetail" type="tns:errorDetail"/>
          <xs:element minOccurs="0" name="errorMessage" type="xs:string"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="errorDetail">
        <xs:sequence>
          <xs:element minOccurs="0" name="info" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:errorDetailType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="companyAgreement">
        <xs:sequence>
          <xs:element minOccurs="0" name="allowedCorporateRelationTypes">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="allowedCorporateRelationType" type="tns:corporateRelationType"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="availabilityCenters" nillable="true" type="tns:center"/>
          <xs:element name="companyAgreementId" type="tns:compositeSubKey"/>
          <xs:element name="companyKey" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="contactPerson" type="tns:apiPersonKey"/>
          <xs:element name="documentationRequired" type="xs:boolean"/>
          <xs:element name="employeeNumberRequired" type="xs:boolean"/>
          <xs:element minOccurs="0" name="maximumFamilyMembers" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="privilegeSets" nillable="true" type="tns:privilegeSetAndSponsorship"/>
          <xs:element name="ref" type="xs:string"/>
          <xs:element minOccurs="0" name="requiresOtherPayer" type="xs:boolean"/>
          <xs:element minOccurs="0" name="state" type="tns:companyAgreementStateType"/>
          <xs:element minOccurs="0" name="validity" type="xs:int"/>
          <xs:element minOccurs="0" name="validityUnit" type="tns:timeUnit"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="center">
        <xs:sequence>
          <xs:element minOccurs="0" name="address" type="tns:address"/>
          <xs:element minOccurs="0" name="centerId" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="shortName" type="xs:string"/>
          <xs:element minOccurs="0" name="webName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="address">
        <xs:sequence>
          <xs:element name="address1" type="xs:string"/>
          <xs:element minOccurs="0" name="address2" type="xs:string"/>
          <xs:element minOccurs="0" name="address3" type="xs:string"/>
          <xs:element minOccurs="0" name="coName" type="xs:string"/>
          <xs:element name="country" type="xs:string"/>
          <xs:element minOccurs="0" name="county" type="xs:string"/>
          <xs:element minOccurs="0" name="province" type="xs:string"/>
          <xs:element name="zip" type="xs:string"/>
          <xs:element minOccurs="0" name="zipName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="compositeSubKey">
        <xs:complexContent>
          <xs:extension base="tns:compositeKey">
            <xs:sequence>
              <xs:element name="subId" type="xs:int"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="apiPersonKey">
        <xs:complexContent>
          <xs:extension base="tns:compositeKey">
            <xs:sequence>
              <xs:element minOccurs="0" name="externalId" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="privilegeSetAndSponsorship">
        <xs:sequence>
          <xs:element minOccurs="0" name="privilegeSet" type="xs:int"/>
          <xs:element minOccurs="0" name="sponsorship" type="xs:decimal"/>
          <xs:element minOccurs="0" name="sponsorshipType" type="tns:sponsorshipType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="company">
        <xs:sequence>
          <xs:element name="address" type="tns:address"/>
          <xs:element minOccurs="0" name="cbrId" type="xs:string"/>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
          <xs:element name="companyId" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="contactPersonEmail" type="xs:string"/>
          <xs:element minOccurs="0" name="contactPersonId" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="contactPersonName" type="xs:string"/>
          <xs:element minOccurs="0" name="contactPersonWorkPhone" type="xs:string"/>
          <xs:element minOccurs="0" name="createdById" type="tns:apiPersonKey"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="extendedAttributes" nillable="true" type="tns:extendedAttribute"/>
          <xs:element minOccurs="0" name="invoiceAddress" type="tns:address"/>
          <xs:element minOccurs="0" name="invoiceType" type="tns:companyInvoiceType"/>
          <xs:element minOccurs="0" name="keyAccountManagerEmail" type="xs:string"/>
          <xs:element minOccurs="0" name="keyAccountManagerId" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="keyAccountManagerName" type="xs:string"/>
          <xs:element minOccurs="0" name="keyAccountManagerPhone" type="xs:string"/>
          <xs:element minOccurs="0" name="motherCompanyId" type="tns:compositeKey"/>
          <xs:element name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="nextInvoiceDate" type="xs:string"/>
          <xs:element minOccurs="0" name="numberOfEmployees" type="xs:int"/>
          <xs:element minOccurs="0" name="paymentType" type="tns:companyPaymentType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="extendedAttribute">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:string"/>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="findCompany">
        <xs:sequence>
          <xs:element minOccurs="0" name="address" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="centers" nillable="true" type="xs:int"/>
          <xs:element minOccurs="0" name="country" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="zipCode" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="subscriptionPrivilegePrice">
        <xs:sequence>
          <xs:element minOccurs="0" name="creationPrice" type="tns:productPrice"/>
          <xs:element minOccurs="0" name="externalId" type="xs:string"/>
          <xs:element minOccurs="0" name="periodPrice" type="tns:productPrice"/>
          <xs:element minOccurs="0" name="subscriptionName" type="xs:string"/>
          <xs:element minOccurs="0" name="subscriptionProductKey" type="tns:compositeKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="productPrice">
        <xs:sequence>
          <xs:element minOccurs="0" name="customerPrice" type="xs:string"/>
          <xs:element minOccurs="0" name="normalPrice" type="xs:string"/>
          <xs:element minOccurs="0" name="sponsorPrice" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="companyAgreementPerson">
        <xs:sequence>
          <xs:element minOccurs="0" name="documentationStatusType" type="tns:personDocumentationStatusType"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:string"/>
          <xs:element minOccurs="0" name="fullName" type="xs:string"/>
          <xs:element minOccurs="0" name="personKey" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="personStatus" type="tns:personStatus"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="subscriptions" nillable="true" type="tns:companyAgreementSubscription"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="companyAgreementSubscription">
        <xs:sequence>
          <xs:element minOccurs="0" name="endDate" type="xs:string"/>
          <xs:element minOccurs="0" name="key" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="startDate" type="xs:string"/>
          <xs:element minOccurs="0" name="state" type="tns:subscriptionState"/>
          <xs:element minOccurs="0" name="subState" type="tns:subscriptionSubState"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="clipcard">
        <xs:sequence>
          <xs:element minOccurs="0" name="assignedStaffFullName" type="xs:string"/>
          <xs:element minOccurs="0" name="assignedStaffGroup" type="xs:int"/>
          <xs:element minOccurs="0" name="assignedStaffKey" type="tns:apiPersonKey"/>
          <xs:element name="blocked" type="xs:boolean"/>
          <xs:element name="cancelled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="clipcardId" type="tns:compositeSubKey"/>
          <xs:element minOccurs="0" name="clipcardTypeName" type="xs:string"/>
          <xs:element minOccurs="0" name="clipsInitial" type="xs:int"/>
          <xs:element minOccurs="0" name="clipsLeft" type="xs:int"/>
          <xs:element name="finished" type="xs:boolean"/>
          <xs:element minOccurs="0" name="invoiceLineId" type="tns:compositeSubKey"/>
          <xs:element minOccurs="0" name="mainSubscriptionId" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="personId" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="validUntilDate" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="errorCode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UNKNOWN_ERROR"/>
          <xs:enumeration value="CREATE_EXCEPTION"/>
          <xs:enumeration value="REMOVE_EXCEPTION"/>
          <xs:enumeration value="SECURITY"/>
          <xs:enumeration value="SECURITY_ROLE"/>
          <xs:enumeration value="ARGUMENT_IS_NULL"/>
          <xs:enumeration value="ILLEGAL_ARGUMENT"/>
          <xs:enumeration value="PARSE_ERROR"/>
          <xs:enumeration value="ENTITY_NOT_FOUND"/>
          <xs:enumeration value="CONFLICTING_CHANGE"/>
          <xs:enumeration value="INVALID_ZIPCODE"/>
          <xs:enumeration value="INVALID_SOCIAL_SECURITY_NUMBER"/>
          <xs:enumeration value="INVALID_COMPANYID"/>
          <xs:enumeration value="INVALID_PHONE_NUMBER"/>
          <xs:enumeration value="CLIENT"/>
          <xs:enumeration value="ENTITY_IDENTIFIER_STATUS"/>
          <xs:enumeration value="DUPLICATE_PERSON"/>
          <xs:enumeration value="DUPLICATE_EXTERNAL_ID"/>
          <xs:enumeration value="FRIEND_RESTRICTION"/>
          <xs:enumeration value="EMPLOYEE_ALREADY_EXIST"/>
          <xs:enumeration value="DUPLICATE_COMPANY"/>
          <xs:enumeration value="EXPENSIVE_SEARCH"/>
          <xs:enumeration value="MULTIPLE_PERSONS_FOUND"/>
          <xs:enumeration value="NOT_DELIVERABLE"/>
          <xs:enumeration value="CIRCULAR_REFERENCE"/>
          <xs:enumeration value="REFERENCE"/>
          <xs:enumeration value="PERSON_NOT_EDITABLE"/>
          <xs:enumeration value="PERSON_TRANSFER"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_FOUND"/>
          <xs:enumeration value="ACCOUNT_RECEIVABLE_IS_BLOCKED"/>
          <xs:enumeration value="BANK_ACCOUNT_IS_BLOCKED"/>
          <xs:enumeration value="DEBIT_MAX"/>
          <xs:enumeration value="INVALID_PAYMENT_AGREEMENT"/>
          <xs:enumeration value="INVALID_BANK_INFO"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_CREDITOR_FOUND"/>
          <xs:enumeration value="PARTICIPATION_TIME_INTERVAL_OVERLAP"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLACKLISTED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLOCKED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="BOOKING_WAITING_LIST_FULL"/>
          <xs:enumeration value="BOOKING_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_RESTRICTION"/>
          <xs:enumeration value="OUTSIDE_BOOKING_WINDOW_EXCEPTION"/>
          <xs:enumeration value="CUSTOMER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="CENTER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_COLLECTION_NOT_PAID_FOR"/>
          <xs:enumeration value="NO_PRIVILEGE_FOR_PARTICIPATION"/>
          <xs:enumeration value="ALL_PARTICIPATIONS_TAKEN"/>
          <xs:enumeration value="SHOWUP_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_CANCELLATION"/>
          <xs:enumeration value="TOO_EARLY_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="TOO_EARLY_TO_SHOWUP"/>
          <xs:enumeration value="TOO_LATE_TO_SHOWUP"/>
          <xs:enumeration value="PARTICIPANT_TOO_MANY_OPEN_BOOKINGS"/>
          <xs:enumeration value="RESOURCE_OCCUPIED"/>
          <xs:enumeration value="RESOURCE_START_TIME_RESTRICTION"/>
          <xs:enumeration value="RESOURCE_TIME_RESTRICTION"/>
          <xs:enumeration value="ACTIVITY_STATE_INVALID"/>
          <xs:enumeration value="NO_PARENT_BOOKING_FOUND"/>
          <xs:enumeration value="STAFF_BLACKLISTED"/>
          <xs:enumeration value="STAFF_OCCUPIED"/>
          <xs:enumeration value="TOO_MANY_SUB_STAFF_USAGES"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_BOOKED"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_SHOWEDUP"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_BOOKING"/>
          <xs:enumeration value="LISTS_FULL"/>
          <xs:enumeration value="TOO_LATE_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="PARTICIPANT_OCCUPIED"/>
          <xs:enumeration value="FULL_BOOKING_RESTRICTION"/>
          <xs:enumeration value="IN_ADVANCE_LIMIT_BOOKING_RESTRICTION"/>
          <xs:enumeration value="PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="PARTICIPANT_BLACKLISTED"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BOOKING"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CENTER"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CUSTOMER"/>
          <xs:enumeration value="UNABLE_TO_REFRESH_WAITING_LIST"/>
          <xs:enumeration value="TOO_FEW_PARTICIPANTS"/>
          <xs:enumeration value="FREEZE_MAX_PREBOOK_PERIOD"/>
          <xs:enumeration value="FREEZE_MIN_OR_MAX_DURATION"/>
          <xs:enumeration value="FREEZE_TOO_LONG"/>
          <xs:enumeration value="FREEZE_TOO_SHORT"/>
          <xs:enumeration value="FREEZE_MAX_NUMBER_REACHED"/>
          <xs:enumeration value="TOO_MANY_FREEZES_PERIOD"/>
          <xs:enumeration value="TOO_MANY_FREEZES_TOTAL"/>
          <xs:enumeration value="FREEZE_MAX_TOTAL_DURATION_REACHED"/>
          <xs:enumeration value="FREEZE_NOT_ALLOWED"/>
          <xs:enumeration value="FREEZE_START_AND_STOP_DATE"/>
          <xs:enumeration value="FREEZE_START_IN_THE_PAST"/>
          <xs:enumeration value="FREEZE_END_BEFORE_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_AFTER_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_BEFORE_SUBSCRIPTION_START"/>
          <xs:enumeration value="FREEZE_OVERLAP"/>
          <xs:enumeration value="FREEZE_FUTURE_FREEZE"/>
          <xs:enumeration value="BOOKINGS_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="PARTICIPATION_ALREADY_CANCELLED"/>
          <xs:enumeration value="PARTICIPATION_CANCELLED"/>
          <xs:enumeration value="MINIMUM_AGE_EXCEPTION"/>
          <xs:enumeration value="TEMPLATE_NOT_DEFINED"/>
          <xs:enumeration value="INVALID_OTHER_PAYER_TYPE"/>
          <xs:enumeration value="DIFFERENT_COUNTRY_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_IS_NOT_STAFF"/>
          <xs:enumeration value="OTHER_PAYER_HAS_OTHER_PAYER"/>
          <xs:enumeration value="NO_VALID_ACCOUNT_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_STATUS_NOT_VALID_FOR_ATTEND"/>
          <xs:enumeration value="ATTENDING_PERSON_BLACKLISTED"/>
          <xs:enumeration value="MISSING_PRIVILEGE_FOR_ATTEND"/>
          <xs:enumeration value="ATTEND_NOT_POSSIBLE_AT_SPECIFIED_TIME"/>
          <xs:enumeration value="CLIPCARD_NOT_USABLE"/>
          <xs:enumeration value="TOO_MANY_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="NOT_ENOUGH_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="LOGIN_BLOCKED"/>
          <xs:enumeration value="PASSWORD_EXPIRED"/>
          <xs:enumeration value="PERSON_DELETED"/>
          <xs:enumeration value="PERSON_ANONYMIZED"/>
          <xs:enumeration value="INVALID_PICTURE"/>
          <xs:enumeration value="PERSON_NOT_FOUND_FOR_VENDING"/>
          <xs:enumeration value="TOO_MANY_MATCHES"/>
          <xs:enumeration value="PASSWORD_NOT_SET"/>
          <xs:enumeration value="PASSWORD_TOO_SHORT"/>
          <xs:enumeration value="CANNOT_PARTICIPATE_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="INVALID_STATUS"/>
          <xs:enumeration value="CONCURRENT_CALLS"/>
          <xs:enumeration value="CANNOT_UPDATE_COMPLETED_QUESTIONNAIRE"/>
          <xs:enumeration value="MISSING_ADMIN_FEE_PRODUCT"/>
          <xs:enumeration value="LOGIN_NOT_VALID"/>
          <xs:enumeration value="ACTIVE_TASKS_ALREADY_EXISTS_FOR_PERSON"/>
          <xs:enumeration value="TASK_TYPE_EXTERNAL_KEY_DOES_NOT_EXIST"/>
          <xs:enumeration value="SUBSCRIPTION_OF_SAME_TYPE"/>
          <xs:enumeration value="PERSON_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_KEY_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_BLOCKED"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_UNBLOCKED"/>
          <xs:enumeration value="INVALID_EMAIL"/>
          <xs:enumeration value="CENTER_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_TYPE_NOT_STRING"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_UPDATE_NOT_ALLOWED"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_VALUE_NOT_ALLOWED"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="CHILD_MUST_HAVE_AT_LEAST_ONE_PARENT"/>
          <xs:enumeration value="CHILD_HAS_TOO_MANY_PARENTS"/>
          <xs:enumeration value="PARENT_HAS_TOO_MANY_CHILDREN"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_ALREADY_EXISTS"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_DOES_NOT_EXIST"/>
          <xs:enumeration value="GUARDIAN_IS_TOO_YOUNG"/>
          <xs:enumeration value="CHILD_IS_TOO_OLD"/>
          <xs:enumeration value="AGE_NOT_SET"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_PERSON_MISMATCH"/>
          <xs:enumeration value="PAYMENT_CYCLE_TYPE_NOT_ALLOWED_EXCEPTION"/>
          <xs:enumeration value="SUBSCRIPTION_DOES_NOT_BELONG_TO_MEMBER"/>
          <xs:enumeration value="CANNOT_DELETE_SUBSCRIPTION"/>
          <xs:enumeration value="NO_PAYMENT_AGREEMENT_FOUND"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_VALID_FOR_SALES"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_ACTIVE"/>
          <xs:enumeration value="PAYMENT_CYCLE_NOT_ALLOWED"/>
          <xs:enumeration value="SUBSCRIPTION_SALE_OUTSIDE_HOME_CLUB_NOT_ALLOWED"/>
          <xs:enumeration value="BELOW_REQUIRED_AGE_FOR_EMAIL_CAPTURE"/>
          <xs:enumeration value="ROLE_NOT_FOUND"/>
          <xs:enumeration value="ACTION_NOT_ALLOWED"/>
          <xs:enumeration value="SCOPE_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_BLOCKED"/>
          <xs:enumeration value="ROLE_NOT_ASSIGNED"/>
          <xs:enumeration value="INVALID_EMPLOYEE_KEY"/>
          <xs:enumeration value="MISSING_PRIVILEGES"/>
          <xs:enumeration value="DATE_PARSE_ERROR"/>
          <xs:enumeration value="DATE_INVALID"/>
          <xs:enumeration value="CLIPCARD_NOT_ACTIVE"/>
          <xs:enumeration value="GROUP_ALREADY_EXIST"/>
          <xs:enumeration value="EMPLOYEE_AND_PERSON_KEY_SET"/>
          <xs:enumeration value="MULTIPLE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="MULTIPLE_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_ACTIVE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="errorDetailType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="MISSING_ACCESS_GROUP"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_DATE"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_TIME"/>
          <xs:enumeration value="MISSING_PRIVILEGES_COUNT"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="ALLOWED_BOOKING_WINDOW_TIMESLOT"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="corporateRelationType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="EMPLOYEE"/>
          <xs:enumeration value="FAMILY_OF_EMPLOYEE"/>
          <xs:enumeration value="OTHER"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="sponsorshipType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NONE"/>
          <xs:enumeration value="FULL"/>
          <xs:enumeration value="FIXED"/>
          <xs:enumeration value="PERCENTAGE"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="companyAgreementStateType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UNDERTARGET"/>
          <xs:enumeration value="ACTIVE"/>
          <xs:enumeration value="STOPNEW"/>
          <xs:enumeration value="OLD"/>
          <xs:enumeration value="AWAITING_ACTIVATION"/>
          <xs:enumeration value="BLOCKED"/>
          <xs:enumeration value="DELETED"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="timeUnit">
        <xs:restriction base="xs:string">
          <xs:enumeration value="WEEK"/>
          <xs:enumeration value="DAY"/>
          <xs:enumeration value="MONTH"/>
          <xs:enumeration value="YEAR"/>
          <xs:enumeration value="HOUR"/>
          <xs:enumeration value="MINUTE"/>
          <xs:enumeration value="SECOND"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="companyInvoiceType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="SPECIFIED"/>
          <xs:enumeration value="UNSPECIFIED"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="companyPaymentType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="INVOICE"/>
          <xs:enumeration value="EFT"/>
          <xs:enumeration value="CREDIT_CARD"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="personDocumentationStatusType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NOT_REQUIRED"/>
          <xs:enumeration value="VALID"/>
          <xs:enumeration value="GOING_TO_EXPIRE"/>
          <xs:enumeration value="EXPIRED"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="personStatus">
        <xs:restriction base="xs:string">
          <xs:enumeration value="LEAD"/>
          <xs:enumeration value="ACTIVE"/>
          <xs:enumeration value="INACTIVE"/>
          <xs:enumeration value="TEMPORARYINACTIVE"/>
          <xs:enumeration value="TRANSFERRED"/>
          <xs:enumeration value="DUPLICATE"/>
          <xs:enumeration value="PROSPECT"/>
          <xs:enumeration value="CONTACT"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="subscriptionState">
        <xs:restriction base="xs:string">
          <xs:enumeration value="ACTIVE"/>
          <xs:enumeration value="ENDED"/>
          <xs:enumeration value="FROZEN"/>
          <xs:enumeration value="WINDOW"/>
          <xs:enumeration value="CREATED"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="subscriptionSubState">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NONE"/>
          <xs:enumeration value="AWAITING_ACTIVATION"/>
          <xs:enumeration value="UPGRADED"/>
          <xs:enumeration value="DOWNGRADED"/>
          <xs:enumeration value="EXTENDED"/>
          <xs:enumeration value="TRANSFERRED"/>
          <xs:enumeration value="REGRETTED"/>
          <xs:enumeration value="CANCELLED"/>
          <xs:enumeration value="BLOCKED"/>
          <xs:enumeration value="CHANGED"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType final="#all" name="companyAgreementArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:companyAgreement"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="companyArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:company"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="subscriptionPrivilegePriceArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:subscriptionPrivilegePrice"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="companyAgreementPersonArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:companyAgreementPerson"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="clipcardArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:clipcard"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </types>
  <message name="CompanyAPI_getSubscriptionPricesResponse">
    <part name="return" type="tns:subscriptionPrivilegePriceArray"/>
  </message>
  <message name="CompanyAPI_updateCompanyDetailsResponse">
    <part name="return" type="tns:company"/>
  </message>
  <message name="CompanyAPI_createCompanyAgreementResponse">
    <part name="return" type="xsd:string"/>
  </message>
  <message name="CompanyAPI_findCompaniesResponse">
    <part name="return" type="tns:companyArray"/>
  </message>
  <message name="CompanyAPI_getCompanyAgreementPersons">
    <part name="ref" type="xsd:string"/>
  </message>
  <message name="CompanyAPI_getExtendedAttributeMIMEResponse">
    <part name="return" type="tns:mimeDocument"/>
  </message>
  <message name="CompanyAPI_getCompanyClipCards">
    <part name="companyKey" type="tns:compositeKey"/>
    <part name="finished" type="xsd:boolean"/>
    <part name="cancelled" type="xsd:boolean"/>
    <part name="blocked" type="xsd:boolean"/>
  </message>
  <message name="CompanyAPI_createCompanyAgreement">
    <part name="agreement" type="tns:companyAgreement"/>
  </message>
  <message name="CompanyAPI_getCompanyAgreements">
    <part name="companyKey" type="tns:compositeKey"/>
  </message>
  <message name="CompanyAPI_getCompanyDetailsResponse">
    <part name="return" type="tns:company"/>
  </message>
  <message name="CompanyAPI_updateCompanyAgreementResponse">
    <part name="return" type="tns:companyAgreement"/>
  </message>
  <message name="CompanyAPI_getCompanyAgreementsResponse">
    <part name="return" type="tns:companyAgreementArray"/>
  </message>
  <message name="CompanyAPI_createCompanyResponse">
    <part name="return" type="tns:company"/>
  </message>
  <message name="CompanyAPI_findCompanyAgreement">
    <part name="ref" type="xsd:string"/>
  </message>
  <message name="CompanyAPI_getCompanyAgreementPersonsResponse">
    <part name="return" type="tns:companyAgreementPersonArray"/>
  </message>
  <message name="CompanyAPI_findCompanyAgreementResponse">
    <part name="return" type="tns:companyAgreement"/>
  </message>
  <message name="CompanyAPI_findCompanies">
    <part name="parameters" type="tns:findCompany"/>
  </message>
  <message name="CompanyAPI_getCompanyClipCardsResponse">
    <part name="return" type="tns:clipcardArray"/>
  </message>
  <message name="CompanyAPI_updateExtendedAttributeMIME">
    <part name="companyKey" type="tns:compositeKey"/>
    <part name="attributeName" type="xsd:string"/>
    <part name="value" type="tns:mimeDocument"/>
  </message>
  <message name="CompanyAPI_createCompany">
    <part name="center" type="xsd:int"/>
    <part name="company" type="tns:company"/>
  </message>
  <message name="CompanyAPI_updateExtendedAttributeMIMEResponse"/>
  <message name="CompanyAPI_getCompanyDetails">
    <part name="companyKey" type="tns:compositeKey"/>
  </message>
  <message name="CompanyAPI_getSubscriptionPrices">
    <part name="companyAgreementKey" type="tns:compositeSubKey"/>
    <part name="center" type="xsd:int"/>
    <part name="onlyWithPrivileges" type="xsd:boolean"/>
    <part name="onlyShowOnWeb" type="xsd:boolean"/>
  </message>
  <message name="CompanyAPI_updateCompanyAgreement">
    <part name="agreement" type="tns:companyAgreement"/>
  </message>
  <message name="APIException">
    <part element="tns:APIException" name="APIException"/>
  </message>
  <message name="CompanyAPI_updateCompanyDetails">
    <part name="company" type="tns:company"/>
  </message>
  <message name="CompanyAPI_getExtendedAttributeMIME">
    <part name="companyKey" type="tns:compositeKey"/>
    <part name="attributeName" type="xsd:string"/>
  </message>
  <portType name="CompanyAPI">
    <operation name="createCompany" parameterOrder="center company">
      <input message="tns:CompanyAPI_createCompany"/>
      <output message="tns:CompanyAPI_createCompanyResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="createCompanyAgreement" parameterOrder="agreement">
      <input message="tns:CompanyAPI_createCompanyAgreement"/>
      <output message="tns:CompanyAPI_createCompanyAgreementResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="findCompanies" parameterOrder="parameters">
      <input message="tns:CompanyAPI_findCompanies"/>
      <output message="tns:CompanyAPI_findCompaniesResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="findCompanyAgreement" parameterOrder="ref">
      <input message="tns:CompanyAPI_findCompanyAgreement"/>
      <output message="tns:CompanyAPI_findCompanyAgreementResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getCompanyAgreementPersons" parameterOrder="ref">
      <input message="tns:CompanyAPI_getCompanyAgreementPersons"/>
      <output message="tns:CompanyAPI_getCompanyAgreementPersonsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getCompanyAgreements" parameterOrder="companyKey">
      <input message="tns:CompanyAPI_getCompanyAgreements"/>
      <output message="tns:CompanyAPI_getCompanyAgreementsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getCompanyClipCards" parameterOrder="companyKey finished cancelled blocked">
      <input message="tns:CompanyAPI_getCompanyClipCards"/>
      <output message="tns:CompanyAPI_getCompanyClipCardsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getCompanyDetails" parameterOrder="companyKey">
      <input message="tns:CompanyAPI_getCompanyDetails"/>
      <output message="tns:CompanyAPI_getCompanyDetailsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getExtendedAttributeMIME" parameterOrder="companyKey attributeName">
      <input message="tns:CompanyAPI_getExtendedAttributeMIME"/>
      <output message="tns:CompanyAPI_getExtendedAttributeMIMEResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getSubscriptionPrices" parameterOrder="companyAgreementKey center onlyWithPrivileges onlyShowOnWeb">
      <input message="tns:CompanyAPI_getSubscriptionPrices"/>
      <output message="tns:CompanyAPI_getSubscriptionPricesResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="updateCompanyAgreement" parameterOrder="agreement">
      <input message="tns:CompanyAPI_updateCompanyAgreement"/>
      <output message="tns:CompanyAPI_updateCompanyAgreementResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="updateCompanyDetails" parameterOrder="company">
      <input message="tns:CompanyAPI_updateCompanyDetails"/>
      <output message="tns:CompanyAPI_updateCompanyDetailsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="updateExtendedAttributeMIME" parameterOrder="companyKey attributeName value">
      <input message="tns:CompanyAPI_updateExtendedAttributeMIME"/>
      <output message="tns:CompanyAPI_updateExtendedAttributeMIMEResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
  </portType>
  <binding name="CompanyAPIBinding" type="tns:CompanyAPI">
    <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="createCompany">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="createCompanyAgreement">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="findCompanies">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="findCompanyAgreement">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getCompanyAgreementPersons">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getCompanyAgreements">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getCompanyClipCards">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getCompanyDetails">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getExtendedAttributeMIME">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getSubscriptionPrices">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="updateCompanyAgreement">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="updateCompanyDetails">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="updateExtendedAttributeMIME">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
  </binding>
  <service name="CompanyAPIService">
    <port binding="tns:CompanyAPIBinding" name="CompanyAPIPort">
      <soap:address location="https://lite-test.exerp.com/api/v5/CompanyAPI"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://lite-test.exerp.com/api/v5/CompanyAPI</con:endpoint></con:endpoints><con:operation id="c916f7cd-82dc-4ea7-ad3b-439b5a069673" isOneWay="false" action="" name="createCompany" bindingOperationName="createCompany" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0d7eaece-2fcd-4102-958b-f406435fdb6b" isOneWay="false" action="" name="createCompanyAgreement" bindingOperationName="createCompanyAgreement" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="df9fb09f-df2f-4cb5-a3d1-41451d1a51ca" isOneWay="false" action="" name="findCompanies" bindingOperationName="findCompanies" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7a08c00d-432b-4f9c-a869-fce913b134fe" isOneWay="false" action="" name="findCompanyAgreement" bindingOperationName="findCompanyAgreement" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c21fbc28-8771-4fab-b5b0-f09b68cf402e" isOneWay="false" action="" name="getCompanyAgreementPersons" bindingOperationName="getCompanyAgreementPersons" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b16cea53-1a6e-404f-94d7-57d69c20054d" isOneWay="false" action="" name="getCompanyAgreements" bindingOperationName="getCompanyAgreements" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6524cf3d-69e9-4bfb-b88b-1bb9688e0a31" isOneWay="false" action="" name="getCompanyClipCards" bindingOperationName="getCompanyClipCards" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7cfa3a37-cdff-4af1-a421-c44e0e100de0" isOneWay="false" action="" name="getCompanyDetails" bindingOperationName="getCompanyDetails" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fb81ee1b-98c4-4077-bed2-bcef8ee37f7b" isOneWay="false" action="" name="getExtendedAttributeMIME" bindingOperationName="getExtendedAttributeMIME" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fe4b7dcb-b043-403d-93cd-825c4f3cb67f" isOneWay="false" action="" name="getSubscriptionPrices" bindingOperationName="getSubscriptionPrices" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5b30e689-faf4-430c-a925-a04230dd0380" isOneWay="false" action="" name="updateCompanyAgreement" bindingOperationName="updateCompanyAgreement" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bc9f0761-2f23-405e-ba54-5ca771fe94b9" isOneWay="false" action="" name="updateCompanyDetails" bindingOperationName="updateCompanyDetails" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="35d6c0e9-325d-42a8-8856-ae54044c80d8" isOneWay="false" action="" name="updateExtendedAttributeMIME" bindingOperationName="updateExtendedAttributeMIME" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="1011c3d0-40b5-4959-be55-588b5aab7434" wsaVersion="NONE" name="CrmAPIBinding" type="wsdl" bindingName="{http://v5.api.eclub.procard.dk/}CrmAPIBinding" soapVersion="1_1" anonymous="optional" definition="https://lite-test.exerp.com/api/v5/CrmAPI?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://lite-test.exerp.com/api/v5/CrmAPI?wsdl"><con:part><con:url>https://lite-test.exerp.com/api/v5/CrmAPI?wsdl</con:url><con:content><![CDATA[<definitions name="CrmAPIService" targetNamespace="http://v5.api.eclub.procard.dk/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://v5.api.eclub.procard.dk/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <types>
    <xs:schema targetNamespace="http://v5.api.eclub.procard.dk/" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="APIException" type="tns:APIException"/>
      <xs:complexType final="extension restriction" name="createTaskParameters">
        <xs:sequence>
          <xs:element name="personId" type="tns:apiPersonKey"/>
          <xs:element name="taskTypeExternalId" type="xs:string"/>
          <xs:element name="title" type="xs:string"/>
          <xs:element name="creatorPersonId" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="assigneePersonId" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element minOccurs="0" name="followUpDate" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="apiPersonKey">
        <xs:complexContent>
          <xs:extension base="tns:compositeKey">
            <xs:sequence>
              <xs:element minOccurs="0" name="externalId" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="compositeKey">
        <xs:sequence>
          <xs:element name="center" type="xs:int"/>
          <xs:element name="id" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="task">
        <xs:sequence>
          <xs:element name="personId" type="tns:apiPersonKey"/>
          <xs:element name="taskTypeExternalId" type="xs:string"/>
          <xs:element name="title" type="xs:string"/>
          <xs:element name="creatorPersonId" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="assigneePersonId" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element minOccurs="0" name="followUpDate" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="APIException">
        <xs:sequence>
          <xs:element minOccurs="0" name="errorCode" type="tns:errorCode"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="errorDetail" type="tns:errorDetail"/>
          <xs:element minOccurs="0" name="errorMessage" type="xs:string"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="errorDetail">
        <xs:sequence>
          <xs:element minOccurs="0" name="info" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:errorDetailType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="errorCode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UNKNOWN_ERROR"/>
          <xs:enumeration value="CREATE_EXCEPTION"/>
          <xs:enumeration value="REMOVE_EXCEPTION"/>
          <xs:enumeration value="SECURITY"/>
          <xs:enumeration value="SECURITY_ROLE"/>
          <xs:enumeration value="ARGUMENT_IS_NULL"/>
          <xs:enumeration value="ILLEGAL_ARGUMENT"/>
          <xs:enumeration value="PARSE_ERROR"/>
          <xs:enumeration value="ENTITY_NOT_FOUND"/>
          <xs:enumeration value="CONFLICTING_CHANGE"/>
          <xs:enumeration value="INVALID_ZIPCODE"/>
          <xs:enumeration value="INVALID_SOCIAL_SECURITY_NUMBER"/>
          <xs:enumeration value="INVALID_COMPANYID"/>
          <xs:enumeration value="INVALID_PHONE_NUMBER"/>
          <xs:enumeration value="CLIENT"/>
          <xs:enumeration value="ENTITY_IDENTIFIER_STATUS"/>
          <xs:enumeration value="DUPLICATE_PERSON"/>
          <xs:enumeration value="DUPLICATE_EXTERNAL_ID"/>
          <xs:enumeration value="FRIEND_RESTRICTION"/>
          <xs:enumeration value="EMPLOYEE_ALREADY_EXIST"/>
          <xs:enumeration value="DUPLICATE_COMPANY"/>
          <xs:enumeration value="EXPENSIVE_SEARCH"/>
          <xs:enumeration value="MULTIPLE_PERSONS_FOUND"/>
          <xs:enumeration value="NOT_DELIVERABLE"/>
          <xs:enumeration value="CIRCULAR_REFERENCE"/>
          <xs:enumeration value="REFERENCE"/>
          <xs:enumeration value="PERSON_NOT_EDITABLE"/>
          <xs:enumeration value="PERSON_TRANSFER"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_FOUND"/>
          <xs:enumeration value="ACCOUNT_RECEIVABLE_IS_BLOCKED"/>
          <xs:enumeration value="BANK_ACCOUNT_IS_BLOCKED"/>
          <xs:enumeration value="DEBIT_MAX"/>
          <xs:enumeration value="INVALID_PAYMENT_AGREEMENT"/>
          <xs:enumeration value="INVALID_BANK_INFO"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_CREDITOR_FOUND"/>
          <xs:enumeration value="PARTICIPATION_TIME_INTERVAL_OVERLAP"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLACKLISTED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLOCKED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="BOOKING_WAITING_LIST_FULL"/>
          <xs:enumeration value="BOOKING_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_RESTRICTION"/>
          <xs:enumeration value="OUTSIDE_BOOKING_WINDOW_EXCEPTION"/>
          <xs:enumeration value="CUSTOMER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="CENTER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_COLLECTION_NOT_PAID_FOR"/>
          <xs:enumeration value="NO_PRIVILEGE_FOR_PARTICIPATION"/>
          <xs:enumeration value="ALL_PARTICIPATIONS_TAKEN"/>
          <xs:enumeration value="SHOWUP_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_CANCELLATION"/>
          <xs:enumeration value="TOO_EARLY_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="TOO_EARLY_TO_SHOWUP"/>
          <xs:enumeration value="TOO_LATE_TO_SHOWUP"/>
          <xs:enumeration value="PARTICIPANT_TOO_MANY_OPEN_BOOKINGS"/>
          <xs:enumeration value="RESOURCE_OCCUPIED"/>
          <xs:enumeration value="RESOURCE_START_TIME_RESTRICTION"/>
          <xs:enumeration value="RESOURCE_TIME_RESTRICTION"/>
          <xs:enumeration value="ACTIVITY_STATE_INVALID"/>
          <xs:enumeration value="NO_PARENT_BOOKING_FOUND"/>
          <xs:enumeration value="STAFF_BLACKLISTED"/>
          <xs:enumeration value="STAFF_OCCUPIED"/>
          <xs:enumeration value="TOO_MANY_SUB_STAFF_USAGES"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_BOOKED"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_SHOWEDUP"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_BOOKING"/>
          <xs:enumeration value="LISTS_FULL"/>
          <xs:enumeration value="TOO_LATE_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="PARTICIPANT_OCCUPIED"/>
          <xs:enumeration value="FULL_BOOKING_RESTRICTION"/>
          <xs:enumeration value="IN_ADVANCE_LIMIT_BOOKING_RESTRICTION"/>
          <xs:enumeration value="PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="PARTICIPANT_BLACKLISTED"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BOOKING"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CENTER"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CUSTOMER"/>
          <xs:enumeration value="UNABLE_TO_REFRESH_WAITING_LIST"/>
          <xs:enumeration value="TOO_FEW_PARTICIPANTS"/>
          <xs:enumeration value="FREEZE_MAX_PREBOOK_PERIOD"/>
          <xs:enumeration value="FREEZE_MIN_OR_MAX_DURATION"/>
          <xs:enumeration value="FREEZE_TOO_LONG"/>
          <xs:enumeration value="FREEZE_TOO_SHORT"/>
          <xs:enumeration value="FREEZE_MAX_NUMBER_REACHED"/>
          <xs:enumeration value="TOO_MANY_FREEZES_PERIOD"/>
          <xs:enumeration value="TOO_MANY_FREEZES_TOTAL"/>
          <xs:enumeration value="FREEZE_MAX_TOTAL_DURATION_REACHED"/>
          <xs:enumeration value="FREEZE_NOT_ALLOWED"/>
          <xs:enumeration value="FREEZE_START_AND_STOP_DATE"/>
          <xs:enumeration value="FREEZE_START_IN_THE_PAST"/>
          <xs:enumeration value="FREEZE_END_BEFORE_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_AFTER_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_BEFORE_SUBSCRIPTION_START"/>
          <xs:enumeration value="FREEZE_OVERLAP"/>
          <xs:enumeration value="FREEZE_FUTURE_FREEZE"/>
          <xs:enumeration value="BOOKINGS_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="PARTICIPATION_ALREADY_CANCELLED"/>
          <xs:enumeration value="PARTICIPATION_CANCELLED"/>
          <xs:enumeration value="MINIMUM_AGE_EXCEPTION"/>
          <xs:enumeration value="TEMPLATE_NOT_DEFINED"/>
          <xs:enumeration value="INVALID_OTHER_PAYER_TYPE"/>
          <xs:enumeration value="DIFFERENT_COUNTRY_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_IS_NOT_STAFF"/>
          <xs:enumeration value="OTHER_PAYER_HAS_OTHER_PAYER"/>
          <xs:enumeration value="NO_VALID_ACCOUNT_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_STATUS_NOT_VALID_FOR_ATTEND"/>
          <xs:enumeration value="ATTENDING_PERSON_BLACKLISTED"/>
          <xs:enumeration value="MISSING_PRIVILEGE_FOR_ATTEND"/>
          <xs:enumeration value="ATTEND_NOT_POSSIBLE_AT_SPECIFIED_TIME"/>
          <xs:enumeration value="CLIPCARD_NOT_USABLE"/>
          <xs:enumeration value="TOO_MANY_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="NOT_ENOUGH_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="LOGIN_BLOCKED"/>
          <xs:enumeration value="PASSWORD_EXPIRED"/>
          <xs:enumeration value="PERSON_DELETED"/>
          <xs:enumeration value="PERSON_ANONYMIZED"/>
          <xs:enumeration value="INVALID_PICTURE"/>
          <xs:enumeration value="PERSON_NOT_FOUND_FOR_VENDING"/>
          <xs:enumeration value="TOO_MANY_MATCHES"/>
          <xs:enumeration value="PASSWORD_NOT_SET"/>
          <xs:enumeration value="PASSWORD_TOO_SHORT"/>
          <xs:enumeration value="CANNOT_PARTICIPATE_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="INVALID_STATUS"/>
          <xs:enumeration value="CONCURRENT_CALLS"/>
          <xs:enumeration value="CANNOT_UPDATE_COMPLETED_QUESTIONNAIRE"/>
          <xs:enumeration value="MISSING_ADMIN_FEE_PRODUCT"/>
          <xs:enumeration value="LOGIN_NOT_VALID"/>
          <xs:enumeration value="ACTIVE_TASKS_ALREADY_EXISTS_FOR_PERSON"/>
          <xs:enumeration value="TASK_TYPE_EXTERNAL_KEY_DOES_NOT_EXIST"/>
          <xs:enumeration value="SUBSCRIPTION_OF_SAME_TYPE"/>
          <xs:enumeration value="PERSON_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_KEY_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_BLOCKED"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_UNBLOCKED"/>
          <xs:enumeration value="INVALID_EMAIL"/>
          <xs:enumeration value="CENTER_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_TYPE_NOT_STRING"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_UPDATE_NOT_ALLOWED"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_VALUE_NOT_ALLOWED"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="CHILD_MUST_HAVE_AT_LEAST_ONE_PARENT"/>
          <xs:enumeration value="CHILD_HAS_TOO_MANY_PARENTS"/>
          <xs:enumeration value="PARENT_HAS_TOO_MANY_CHILDREN"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_ALREADY_EXISTS"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_DOES_NOT_EXIST"/>
          <xs:enumeration value="GUARDIAN_IS_TOO_YOUNG"/>
          <xs:enumeration value="CHILD_IS_TOO_OLD"/>
          <xs:enumeration value="AGE_NOT_SET"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_PERSON_MISMATCH"/>
          <xs:enumeration value="PAYMENT_CYCLE_TYPE_NOT_ALLOWED_EXCEPTION"/>
          <xs:enumeration value="SUBSCRIPTION_DOES_NOT_BELONG_TO_MEMBER"/>
          <xs:enumeration value="CANNOT_DELETE_SUBSCRIPTION"/>
          <xs:enumeration value="NO_PAYMENT_AGREEMENT_FOUND"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_VALID_FOR_SALES"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_ACTIVE"/>
          <xs:enumeration value="PAYMENT_CYCLE_NOT_ALLOWED"/>
          <xs:enumeration value="SUBSCRIPTION_SALE_OUTSIDE_HOME_CLUB_NOT_ALLOWED"/>
          <xs:enumeration value="BELOW_REQUIRED_AGE_FOR_EMAIL_CAPTURE"/>
          <xs:enumeration value="ROLE_NOT_FOUND"/>
          <xs:enumeration value="ACTION_NOT_ALLOWED"/>
          <xs:enumeration value="SCOPE_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_BLOCKED"/>
          <xs:enumeration value="ROLE_NOT_ASSIGNED"/>
          <xs:enumeration value="INVALID_EMPLOYEE_KEY"/>
          <xs:enumeration value="MISSING_PRIVILEGES"/>
          <xs:enumeration value="DATE_PARSE_ERROR"/>
          <xs:enumeration value="DATE_INVALID"/>
          <xs:enumeration value="CLIPCARD_NOT_ACTIVE"/>
          <xs:enumeration value="GROUP_ALREADY_EXIST"/>
          <xs:enumeration value="EMPLOYEE_AND_PERSON_KEY_SET"/>
          <xs:enumeration value="MULTIPLE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="MULTIPLE_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_ACTIVE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="errorDetailType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="MISSING_ACCESS_GROUP"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_DATE"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_TIME"/>
          <xs:enumeration value="MISSING_PRIVILEGES_COUNT"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="ALLOWED_BOOKING_WINDOW_TIMESLOT"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
  </types>
  <message name="CrmAPI_createTask">
    <part name="parameters" type="tns:createTaskParameters"/>
  </message>
  <message name="APIException">
    <part element="tns:APIException" name="APIException"/>
  </message>
  <message name="CrmAPI_createTaskResponse">
    <part name="return" type="tns:task"/>
  </message>
  <portType name="CrmAPI">
    <operation name="createTask" parameterOrder="parameters">
      <input message="tns:CrmAPI_createTask"/>
      <output message="tns:CrmAPI_createTaskResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
  </portType>
  <binding name="CrmAPIBinding" type="tns:CrmAPI">
    <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="createTask">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
  </binding>
  <service name="CrmAPIService">
    <port binding="tns:CrmAPIBinding" name="CrmAPIPort">
      <soap:address location="https://lite-test.exerp.com/api/v5/CrmAPI"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://lite-test.exerp.com/api/v5/CrmAPI</con:endpoint></con:endpoints><con:operation id="6ca9bcb8-6a16-4d83-b906-6bc784625e4c" isOneWay="false" action="" name="createTask" bindingOperationName="createTask" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="638d76ce-18da-47af-8eb0-c27bba8492b4" wsaVersion="NONE" name="EmployeeAPIBinding" type="wsdl" bindingName="{http://v5.api.eclub.procard.dk/}EmployeeAPIBinding" soapVersion="1_1" anonymous="optional" definition="https://lite-test.exerp.com/api/v5/EmployeeAPI?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://lite-test.exerp.com/api/v5/EmployeeAPI?wsdl"><con:part><con:url>https://lite-test.exerp.com/api/v5/EmployeeAPI?wsdl</con:url><con:content><![CDATA[<definitions name="EmployeeAPIService" targetNamespace="http://v5.api.eclub.procard.dk/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://v5.api.eclub.procard.dk/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <types>
    <xs:schema targetNamespace="http://v5.api.eclub.procard.dk/" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="APIException" type="tns:APIException"/>
      <xs:element name="getAssignedStaffGroupsResult" type="tns:getAssignedStaffGroupsResult"/>
      <xs:element name="getAvailableStaffGroupsResult" type="tns:getAvailableStaffGroupsResult"/>
      <xs:complexType name="availableRolesForScopeParameters">
        <xs:sequence>
          <xs:element name="scopeType" type="tns:scopeType"/>
          <xs:element name="scopeId" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="availableRoles">
        <xs:sequence>
          <xs:element minOccurs="0" name="roles">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="role" type="tns:role"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="role">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element minOccurs="0" name="scope" type="tns:scope"/>
          <xs:element minOccurs="0" name="masterRoleId" type="xs:int"/>
          <xs:element minOccurs="0" name="masterRoleName" type="xs:string"/>
          <xs:element minOccurs="0" name="blocked" type="xs:boolean"/>
          <xs:element minOccurs="0" name="systemRole" type="xs:boolean"/>
          <xs:element minOccurs="0" name="customized" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="scope">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="children" nillable="true" type="tns:scope"/>
          <xs:element minOccurs="0" name="fullName" type="xs:string"/>
          <xs:element name="id" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:scopeType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="APIException">
        <xs:sequence>
          <xs:element minOccurs="0" name="errorCode" type="tns:errorCode"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="errorDetail" type="tns:errorDetail"/>
          <xs:element minOccurs="0" name="errorMessage" type="xs:string"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="errorDetail">
        <xs:sequence>
          <xs:element minOccurs="0" name="info" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:errorDetailType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getRolesForLoginParameters">
        <xs:sequence>
          <xs:element name="employeeKey" type="tns:apiEmployeeKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="apiEmployeeKey">
        <xs:sequence>
          <xs:element minOccurs="0" name="employeeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="personKey" type="tns:apiPersonKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="apiPersonKey">
        <xs:complexContent>
          <xs:extension base="tns:compositeKey">
            <xs:sequence>
              <xs:element minOccurs="0" name="externalId" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="compositeKey">
        <xs:sequence>
          <xs:element name="center" type="xs:int"/>
          <xs:element name="id" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="assignedRole">
        <xs:sequence>
          <xs:element name="roleId" type="xs:int"/>
          <xs:element minOccurs="0" name="roleName" type="xs:string"/>
          <xs:element minOccurs="0" name="scopeType" type="tns:scopeType"/>
          <xs:element name="scopeId" type="xs:int"/>
          <xs:element minOccurs="0" name="scopeName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removeRolesParameters">
        <xs:sequence>
          <xs:element name="employeeKey" type="tns:apiEmployeeKey"/>
          <xs:element name="roleIds">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="roleId" type="xs:int"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="assignRolesParameters">
        <xs:sequence>
          <xs:element name="employeeKey" type="tns:apiEmployeeKey"/>
          <xs:element name="roles">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="role" type="tns:roleForScope"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="roleForScope">
        <xs:sequence>
          <xs:element name="roleId" type="xs:int"/>
          <xs:element name="scopeType" type="tns:scopeType"/>
          <xs:element name="scopeId" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAvailableStaffGroupParameters">
        <xs:sequence>
          <xs:element name="scopeId" type="xs:int"/>
          <xs:element name="scopeType" type="tns:scopeType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAvailableStaffGroupsResult">
        <xs:sequence>
          <xs:element minOccurs="0" name="staffGroups">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="staffGroup" type="tns:availableStaffGroup"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="availableStaffGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="defaultSalary" type="xs:string"/>
          <xs:element name="id" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="assignStaffGroupsParameters">
        <xs:sequence>
          <xs:element name="personKey" type="tns:apiPersonKey"/>
          <xs:element name="staffGroups">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="staffGroup" type="tns:staffGroupForAssignment"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="staffGroupForAssignment">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
          <xs:element minOccurs="0" name="salary" type="xs:string"/>
          <xs:element name="scopeId" type="xs:int"/>
          <xs:element name="scopeType" type="tns:scopeType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAssignedStaffGroupsParameters">
        <xs:sequence>
          <xs:element name="personKey" type="tns:apiPersonKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAssignedStaffGroupsResult">
        <xs:sequence>
          <xs:element minOccurs="0" name="staffGroups">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="staffGroup" type="tns:assignedStaffGroup"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="assignedStaffGroup">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="salary" type="xs:string"/>
          <xs:element name="scopeId" type="xs:int"/>
          <xs:element minOccurs="0" name="scopeType" type="tns:scopeType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removeAssignedStaffGroupsParameters">
        <xs:sequence>
          <xs:element name="personKey" type="tns:apiPersonKey"/>
          <xs:element name="staffGroups">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="id" type="xs:int"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createLoginParameter">
        <xs:sequence>
          <xs:element name="centerId" type="xs:int"/>
          <xs:element name="personKey" type="tns:apiPersonKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="blockLoginParameter">
        <xs:sequence>
          <xs:element name="employeeKey" type="tns:apiEmployeeKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="unblockLoginParameter">
        <xs:sequence>
          <xs:element name="employeeKey" type="tns:apiEmployeeKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="scopeType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Global"/>
          <xs:enumeration value="Tree"/>
          <xs:enumeration value="Area"/>
          <xs:enumeration value="Center"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="errorCode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UNKNOWN_ERROR"/>
          <xs:enumeration value="CREATE_EXCEPTION"/>
          <xs:enumeration value="REMOVE_EXCEPTION"/>
          <xs:enumeration value="SECURITY"/>
          <xs:enumeration value="SECURITY_ROLE"/>
          <xs:enumeration value="ARGUMENT_IS_NULL"/>
          <xs:enumeration value="ILLEGAL_ARGUMENT"/>
          <xs:enumeration value="PARSE_ERROR"/>
          <xs:enumeration value="ENTITY_NOT_FOUND"/>
          <xs:enumeration value="CONFLICTING_CHANGE"/>
          <xs:enumeration value="INVALID_ZIPCODE"/>
          <xs:enumeration value="INVALID_SOCIAL_SECURITY_NUMBER"/>
          <xs:enumeration value="INVALID_COMPANYID"/>
          <xs:enumeration value="INVALID_PHONE_NUMBER"/>
          <xs:enumeration value="CLIENT"/>
          <xs:enumeration value="ENTITY_IDENTIFIER_STATUS"/>
          <xs:enumeration value="DUPLICATE_PERSON"/>
          <xs:enumeration value="DUPLICATE_EXTERNAL_ID"/>
          <xs:enumeration value="FRIEND_RESTRICTION"/>
          <xs:enumeration value="EMPLOYEE_ALREADY_EXIST"/>
          <xs:enumeration value="DUPLICATE_COMPANY"/>
          <xs:enumeration value="EXPENSIVE_SEARCH"/>
          <xs:enumeration value="MULTIPLE_PERSONS_FOUND"/>
          <xs:enumeration value="NOT_DELIVERABLE"/>
          <xs:enumeration value="CIRCULAR_REFERENCE"/>
          <xs:enumeration value="REFERENCE"/>
          <xs:enumeration value="PERSON_NOT_EDITABLE"/>
          <xs:enumeration value="PERSON_TRANSFER"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_FOUND"/>
          <xs:enumeration value="ACCOUNT_RECEIVABLE_IS_BLOCKED"/>
          <xs:enumeration value="BANK_ACCOUNT_IS_BLOCKED"/>
          <xs:enumeration value="DEBIT_MAX"/>
          <xs:enumeration value="INVALID_PAYMENT_AGREEMENT"/>
          <xs:enumeration value="INVALID_BANK_INFO"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_CREDITOR_FOUND"/>
          <xs:enumeration value="PARTICIPATION_TIME_INTERVAL_OVERLAP"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLACKLISTED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLOCKED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="BOOKING_WAITING_LIST_FULL"/>
          <xs:enumeration value="BOOKING_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_RESTRICTION"/>
          <xs:enumeration value="OUTSIDE_BOOKING_WINDOW_EXCEPTION"/>
          <xs:enumeration value="CUSTOMER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="CENTER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_COLLECTION_NOT_PAID_FOR"/>
          <xs:enumeration value="NO_PRIVILEGE_FOR_PARTICIPATION"/>
          <xs:enumeration value="ALL_PARTICIPATIONS_TAKEN"/>
          <xs:enumeration value="SHOWUP_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_CANCELLATION"/>
          <xs:enumeration value="TOO_EARLY_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="TOO_EARLY_TO_SHOWUP"/>
          <xs:enumeration value="TOO_LATE_TO_SHOWUP"/>
          <xs:enumeration value="PARTICIPANT_TOO_MANY_OPEN_BOOKINGS"/>
          <xs:enumeration value="RESOURCE_OCCUPIED"/>
          <xs:enumeration value="RESOURCE_START_TIME_RESTRICTION"/>
          <xs:enumeration value="RESOURCE_TIME_RESTRICTION"/>
          <xs:enumeration value="ACTIVITY_STATE_INVALID"/>
          <xs:enumeration value="NO_PARENT_BOOKING_FOUND"/>
          <xs:enumeration value="STAFF_BLACKLISTED"/>
          <xs:enumeration value="STAFF_OCCUPIED"/>
          <xs:enumeration value="TOO_MANY_SUB_STAFF_USAGES"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_BOOKED"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_SHOWEDUP"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_BOOKING"/>
          <xs:enumeration value="LISTS_FULL"/>
          <xs:enumeration value="TOO_LATE_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="PARTICIPANT_OCCUPIED"/>
          <xs:enumeration value="FULL_BOOKING_RESTRICTION"/>
          <xs:enumeration value="IN_ADVANCE_LIMIT_BOOKING_RESTRICTION"/>
          <xs:enumeration value="PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="PARTICIPANT_BLACKLISTED"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BOOKING"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CENTER"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CUSTOMER"/>
          <xs:enumeration value="UNABLE_TO_REFRESH_WAITING_LIST"/>
          <xs:enumeration value="TOO_FEW_PARTICIPANTS"/>
          <xs:enumeration value="FREEZE_MAX_PREBOOK_PERIOD"/>
          <xs:enumeration value="FREEZE_MIN_OR_MAX_DURATION"/>
          <xs:enumeration value="FREEZE_TOO_LONG"/>
          <xs:enumeration value="FREEZE_TOO_SHORT"/>
          <xs:enumeration value="FREEZE_MAX_NUMBER_REACHED"/>
          <xs:enumeration value="TOO_MANY_FREEZES_PERIOD"/>
          <xs:enumeration value="TOO_MANY_FREEZES_TOTAL"/>
          <xs:enumeration value="FREEZE_MAX_TOTAL_DURATION_REACHED"/>
          <xs:enumeration value="FREEZE_NOT_ALLOWED"/>
          <xs:enumeration value="FREEZE_START_AND_STOP_DATE"/>
          <xs:enumeration value="FREEZE_START_IN_THE_PAST"/>
          <xs:enumeration value="FREEZE_END_BEFORE_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_AFTER_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_BEFORE_SUBSCRIPTION_START"/>
          <xs:enumeration value="FREEZE_OVERLAP"/>
          <xs:enumeration value="FREEZE_FUTURE_FREEZE"/>
          <xs:enumeration value="BOOKINGS_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="PARTICIPATION_ALREADY_CANCELLED"/>
          <xs:enumeration value="PARTICIPATION_CANCELLED"/>
          <xs:enumeration value="MINIMUM_AGE_EXCEPTION"/>
          <xs:enumeration value="TEMPLATE_NOT_DEFINED"/>
          <xs:enumeration value="INVALID_OTHER_PAYER_TYPE"/>
          <xs:enumeration value="DIFFERENT_COUNTRY_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_IS_NOT_STAFF"/>
          <xs:enumeration value="OTHER_PAYER_HAS_OTHER_PAYER"/>
          <xs:enumeration value="NO_VALID_ACCOUNT_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_STATUS_NOT_VALID_FOR_ATTEND"/>
          <xs:enumeration value="ATTENDING_PERSON_BLACKLISTED"/>
          <xs:enumeration value="MISSING_PRIVILEGE_FOR_ATTEND"/>
          <xs:enumeration value="ATTEND_NOT_POSSIBLE_AT_SPECIFIED_TIME"/>
          <xs:enumeration value="CLIPCARD_NOT_USABLE"/>
          <xs:enumeration value="TOO_MANY_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="NOT_ENOUGH_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="LOGIN_BLOCKED"/>
          <xs:enumeration value="PASSWORD_EXPIRED"/>
          <xs:enumeration value="PERSON_DELETED"/>
          <xs:enumeration value="PERSON_ANONYMIZED"/>
          <xs:enumeration value="INVALID_PICTURE"/>
          <xs:enumeration value="PERSON_NOT_FOUND_FOR_VENDING"/>
          <xs:enumeration value="TOO_MANY_MATCHES"/>
          <xs:enumeration value="PASSWORD_NOT_SET"/>
          <xs:enumeration value="PASSWORD_TOO_SHORT"/>
          <xs:enumeration value="CANNOT_PARTICIPATE_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="INVALID_STATUS"/>
          <xs:enumeration value="CONCURRENT_CALLS"/>
          <xs:enumeration value="CANNOT_UPDATE_COMPLETED_QUESTIONNAIRE"/>
          <xs:enumeration value="MISSING_ADMIN_FEE_PRODUCT"/>
          <xs:enumeration value="LOGIN_NOT_VALID"/>
          <xs:enumeration value="ACTIVE_TASKS_ALREADY_EXISTS_FOR_PERSON"/>
          <xs:enumeration value="TASK_TYPE_EXTERNAL_KEY_DOES_NOT_EXIST"/>
          <xs:enumeration value="SUBSCRIPTION_OF_SAME_TYPE"/>
          <xs:enumeration value="PERSON_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_KEY_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_BLOCKED"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_UNBLOCKED"/>
          <xs:enumeration value="INVALID_EMAIL"/>
          <xs:enumeration value="CENTER_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_TYPE_NOT_STRING"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_UPDATE_NOT_ALLOWED"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_VALUE_NOT_ALLOWED"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="CHILD_MUST_HAVE_AT_LEAST_ONE_PARENT"/>
          <xs:enumeration value="CHILD_HAS_TOO_MANY_PARENTS"/>
          <xs:enumeration value="PARENT_HAS_TOO_MANY_CHILDREN"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_ALREADY_EXISTS"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_DOES_NOT_EXIST"/>
          <xs:enumeration value="GUARDIAN_IS_TOO_YOUNG"/>
          <xs:enumeration value="CHILD_IS_TOO_OLD"/>
          <xs:enumeration value="AGE_NOT_SET"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_PERSON_MISMATCH"/>
          <xs:enumeration value="PAYMENT_CYCLE_TYPE_NOT_ALLOWED_EXCEPTION"/>
          <xs:enumeration value="SUBSCRIPTION_DOES_NOT_BELONG_TO_MEMBER"/>
          <xs:enumeration value="CANNOT_DELETE_SUBSCRIPTION"/>
          <xs:enumeration value="NO_PAYMENT_AGREEMENT_FOUND"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_VALID_FOR_SALES"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_ACTIVE"/>
          <xs:enumeration value="PAYMENT_CYCLE_NOT_ALLOWED"/>
          <xs:enumeration value="SUBSCRIPTION_SALE_OUTSIDE_HOME_CLUB_NOT_ALLOWED"/>
          <xs:enumeration value="BELOW_REQUIRED_AGE_FOR_EMAIL_CAPTURE"/>
          <xs:enumeration value="ROLE_NOT_FOUND"/>
          <xs:enumeration value="ACTION_NOT_ALLOWED"/>
          <xs:enumeration value="SCOPE_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_BLOCKED"/>
          <xs:enumeration value="ROLE_NOT_ASSIGNED"/>
          <xs:enumeration value="INVALID_EMPLOYEE_KEY"/>
          <xs:enumeration value="MISSING_PRIVILEGES"/>
          <xs:enumeration value="DATE_PARSE_ERROR"/>
          <xs:enumeration value="DATE_INVALID"/>
          <xs:enumeration value="CLIPCARD_NOT_ACTIVE"/>
          <xs:enumeration value="GROUP_ALREADY_EXIST"/>
          <xs:enumeration value="EMPLOYEE_AND_PERSON_KEY_SET"/>
          <xs:enumeration value="MULTIPLE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="MULTIPLE_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_ACTIVE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="errorDetailType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="MISSING_ACCESS_GROUP"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_DATE"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_TIME"/>
          <xs:enumeration value="MISSING_PRIVILEGES_COUNT"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="ALLOWED_BOOKING_WINDOW_TIMESLOT"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType final="#all" name="assignedRoleArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:assignedRole"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </types>
  <message name="EmployeeAPI_getAvailableStaffGroups">
    <part name="parameters" type="tns:getAvailableStaffGroupParameters"/>
  </message>
  <message name="EmployeeAPI_assignRolesResponse">
    <part name="return" type="tns:assignedRoleArray"/>
  </message>
  <message name="EmployeeAPI_createLogin">
    <part name="parameters" type="tns:createLoginParameter"/>
  </message>
  <message name="EmployeeAPI_getAvailableStaffGroupsResponse">
    <part name="return" type="tns:getAvailableStaffGroupsResult"/>
  </message>
  <message name="EmployeeAPI_removeAssignedStaffGroupsResponse"/>
  <message name="EmployeeAPI_getAvailableRolesForScopeResponse">
    <part name="return" type="tns:availableRoles"/>
  </message>
  <message name="EmployeeAPI_unblockLogin">
    <part name="parameters" type="tns:unblockLoginParameter"/>
  </message>
  <message name="EmployeeAPI_assignStaffGroupsResponse"/>
  <message name="EmployeeAPI_assignStaffGroups">
    <part name="parameters" type="tns:assignStaffGroupsParameters"/>
  </message>
  <message name="EmployeeAPI_blockLogin">
    <part name="parameters" type="tns:blockLoginParameter"/>
  </message>
  <message name="EmployeeAPI_getRolesForLoginResponse">
    <part name="return" type="tns:assignedRoleArray"/>
  </message>
  <message name="EmployeeAPI_createLoginResponse">
    <part name="return" type="xsd:string"/>
  </message>
  <message name="EmployeeAPI_getRolesForLogin">
    <part name="parameters" type="tns:getRolesForLoginParameters"/>
  </message>
  <message name="EmployeeAPI_blockLoginResponse">
    <part name="return" type="tns:apiPersonKey"/>
  </message>
  <message name="EmployeeAPI_assignRoles">
    <part name="parameters" type="tns:assignRolesParameters"/>
  </message>
  <message name="EmployeeAPI_unblockLoginResponse">
    <part name="return" type="tns:apiPersonKey"/>
  </message>
  <message name="EmployeeAPI_removeRoles">
    <part name="parameters" type="tns:removeRolesParameters"/>
  </message>
  <message name="EmployeeAPI_getAssignedStaffGroups">
    <part name="parameters" type="tns:getAssignedStaffGroupsParameters"/>
  </message>
  <message name="EmployeeAPI_getAvailableRolesForScope">
    <part name="parameters" type="tns:availableRolesForScopeParameters"/>
  </message>
  <message name="EmployeeAPI_removeRolesResponse">
    <part name="return" type="tns:assignedRoleArray"/>
  </message>
  <message name="APIException">
    <part element="tns:APIException" name="APIException"/>
  </message>
  <message name="EmployeeAPI_getAssignedStaffGroupsResponse">
    <part name="return" type="tns:getAssignedStaffGroupsResult"/>
  </message>
  <message name="EmployeeAPI_removeAssignedStaffGroups">
    <part name="parameters" type="tns:removeAssignedStaffGroupsParameters"/>
  </message>
  <portType name="EmployeeAPI">
    <operation name="assignRoles" parameterOrder="parameters">
      <input message="tns:EmployeeAPI_assignRoles"/>
      <output message="tns:EmployeeAPI_assignRolesResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="assignStaffGroups" parameterOrder="parameters">
      <input message="tns:EmployeeAPI_assignStaffGroups"/>
      <output message="tns:EmployeeAPI_assignStaffGroupsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="blockLogin" parameterOrder="parameters">
      <input message="tns:EmployeeAPI_blockLogin"/>
      <output message="tns:EmployeeAPI_blockLoginResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="createLogin" parameterOrder="parameters">
      <input message="tns:EmployeeAPI_createLogin"/>
      <output message="tns:EmployeeAPI_createLoginResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getAssignedStaffGroups" parameterOrder="parameters">
      <input message="tns:EmployeeAPI_getAssignedStaffGroups"/>
      <output message="tns:EmployeeAPI_getAssignedStaffGroupsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getAvailableRolesForScope" parameterOrder="parameters">
      <input message="tns:EmployeeAPI_getAvailableRolesForScope"/>
      <output message="tns:EmployeeAPI_getAvailableRolesForScopeResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getAvailableStaffGroups" parameterOrder="parameters">
      <input message="tns:EmployeeAPI_getAvailableStaffGroups"/>
      <output message="tns:EmployeeAPI_getAvailableStaffGroupsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getRolesForLogin" parameterOrder="parameters">
      <input message="tns:EmployeeAPI_getRolesForLogin"/>
      <output message="tns:EmployeeAPI_getRolesForLoginResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="removeAssignedStaffGroups" parameterOrder="parameters">
      <input message="tns:EmployeeAPI_removeAssignedStaffGroups"/>
      <output message="tns:EmployeeAPI_removeAssignedStaffGroupsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="removeRoles" parameterOrder="parameters">
      <input message="tns:EmployeeAPI_removeRoles"/>
      <output message="tns:EmployeeAPI_removeRolesResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="unblockLogin" parameterOrder="parameters">
      <input message="tns:EmployeeAPI_unblockLogin"/>
      <output message="tns:EmployeeAPI_unblockLoginResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
  </portType>
  <binding name="EmployeeAPIBinding" type="tns:EmployeeAPI">
    <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="assignRoles">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="assignStaffGroups">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="blockLogin">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="createLogin">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getAssignedStaffGroups">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getAvailableRolesForScope">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getAvailableStaffGroups">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getRolesForLogin">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="removeAssignedStaffGroups">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="removeRoles">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="unblockLogin">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
  </binding>
  <service name="EmployeeAPIService">
    <port binding="tns:EmployeeAPIBinding" name="EmployeeAPIPort">
      <soap:address location="https://lite-test.exerp.com/api/v5/EmployeeAPI"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://lite-test.exerp.com/api/v5/EmployeeAPI</con:endpoint></con:endpoints><con:operation id="07eecb26-ccf9-46e2-bcea-b2a707a4ef4b" isOneWay="false" action="" name="assignRoles" bindingOperationName="assignRoles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1bc89ed0-b9e8-4994-b2ae-6feafd86afbf" isOneWay="false" action="" name="assignStaffGroups" bindingOperationName="assignStaffGroups" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bef77b7b-3ea1-41e8-86ee-1085fb81a9c9" isOneWay="false" action="" name="blockLogin" bindingOperationName="blockLogin" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a2b0c4fb-8040-4790-99bb-5f21ff1a152b" isOneWay="false" action="" name="createLogin" bindingOperationName="createLogin" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1fab7afa-ac08-409b-9c2e-14a933242ee4" isOneWay="false" action="" name="getAssignedStaffGroups" bindingOperationName="getAssignedStaffGroups" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8a0be3d4-3bff-4832-a482-6438746e8a81" isOneWay="false" action="" name="getAvailableRolesForScope" bindingOperationName="getAvailableRolesForScope" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="789e8bfa-1d21-4404-8a36-0af24eed8592" isOneWay="false" action="" name="getAvailableStaffGroups" bindingOperationName="getAvailableStaffGroups" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="07361a24-c7b9-4ad1-932e-be2018d419f6" isOneWay="false" action="" name="getRolesForLogin" bindingOperationName="getRolesForLogin" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9a2ea82e-a207-4899-a0f2-a3f37754c019" isOneWay="false" action="" name="removeAssignedStaffGroups" bindingOperationName="removeAssignedStaffGroups" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="08fa8184-ed7b-4f59-bb83-02a0d686f228" isOneWay="false" action="" name="removeRoles" bindingOperationName="removeRoles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2df0e45d-996d-4637-b5c5-498a80a667aa" isOneWay="false" action="" name="unblockLogin" bindingOperationName="unblockLogin" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="f3674aa6-8e0f-4853-ae9a-4f6a10260d88" wsaVersion="NONE" name="ExtractAPIBinding" type="wsdl" bindingName="{http://v5.api.eclub.procard.dk/}ExtractAPIBinding" soapVersion="1_1" anonymous="optional" definition="https://lite-test.exerp.com/api/v5/ExtractAPI?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://lite-test.exerp.com/api/v5/ExtractAPI?wsdl"><con:part><con:url>https://lite-test.exerp.com/api/v5/ExtractAPI?wsdl</con:url><con:content><![CDATA[<definitions name="ExtractAPIService" targetNamespace="http://v5.api.eclub.procard.dk/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://v5.api.eclub.procard.dk/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <types>
    <xs:schema targetNamespace="http://v5.api.eclub.procard.dk/" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="APIException" type="tns:APIException"/>
      <xs:complexType name="availableExtract">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="parameters" nillable="true" type="tns:availableExtractParameter"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="availableExtractParameter">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:availableExtractParameterType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="APIException">
        <xs:sequence>
          <xs:element minOccurs="0" name="errorCode" type="tns:errorCode"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="errorDetail" type="tns:errorDetail"/>
          <xs:element minOccurs="0" name="errorMessage" type="xs:string"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="errorDetail">
        <xs:sequence>
          <xs:element minOccurs="0" name="info" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:errorDetailType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="apiPersonKey">
        <xs:complexContent>
          <xs:extension base="tns:compositeKey">
            <xs:sequence>
              <xs:element minOccurs="0" name="externalId" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="compositeKey">
        <xs:sequence>
          <xs:element name="center" type="xs:int"/>
          <xs:element name="id" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="extract">
        <xs:sequence>
          <xs:element name="charsetName" type="xs:string"/>
          <xs:element name="id" type="xs:int"/>
          <xs:element maxOccurs="unbounded" name="parameters" type="tns:extractParameter"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="extractParameter">
        <xs:sequence>
          <xs:element name="name" type="xs:string"/>
          <xs:element name="value" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="mimeDocument">
        <xs:sequence>
          <xs:element minOccurs="0" name="data" type="xs:base64Binary"/>
          <xs:element minOccurs="0" name="type" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="availableExtractParameterType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="BOOLEAN"/>
          <xs:enumeration value="CENTER"/>
          <xs:enumeration value="DATE"/>
          <xs:enumeration value="NUMBER_ALLOW_NEGATIVE"/>
          <xs:enumeration value="PERCENTAGE"/>
          <xs:enumeration value="NUMBER"/>
          <xs:enumeration value="LONG_DATE"/>
          <xs:enumeration value="PRICE"/>
          <xs:enumeration value="SCOPE"/>
          <xs:enumeration value="TEXT_FIELD"/>
          <xs:enumeration value="LONG_TEXT"/>
          <xs:enumeration value="TEXT"/>
          <xs:enumeration value="GLOBAL_SUBSCRIPTION_TYPES"/>
          <xs:enumeration value="LOCAL_SUBSCRIPTION_TYPES"/>
          <xs:enumeration value="SUBSCRIPTION_STATE"/>
          <xs:enumeration value="PERSONSTATUS_LIST"/>
          <xs:enumeration value="PERSON_TYPE"/>
          <xs:enumeration value="KEY_LIST"/>
          <xs:enumeration value="LIST"/>
          <xs:enumeration value="UQ_LIST"/>
          <xs:enumeration value="MC_LIST"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="errorCode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UNKNOWN_ERROR"/>
          <xs:enumeration value="CREATE_EXCEPTION"/>
          <xs:enumeration value="REMOVE_EXCEPTION"/>
          <xs:enumeration value="SECURITY"/>
          <xs:enumeration value="SECURITY_ROLE"/>
          <xs:enumeration value="ARGUMENT_IS_NULL"/>
          <xs:enumeration value="ILLEGAL_ARGUMENT"/>
          <xs:enumeration value="PARSE_ERROR"/>
          <xs:enumeration value="ENTITY_NOT_FOUND"/>
          <xs:enumeration value="CONFLICTING_CHANGE"/>
          <xs:enumeration value="INVALID_ZIPCODE"/>
          <xs:enumeration value="INVALID_SOCIAL_SECURITY_NUMBER"/>
          <xs:enumeration value="INVALID_COMPANYID"/>
          <xs:enumeration value="INVALID_PHONE_NUMBER"/>
          <xs:enumeration value="CLIENT"/>
          <xs:enumeration value="ENTITY_IDENTIFIER_STATUS"/>
          <xs:enumeration value="DUPLICATE_PERSON"/>
          <xs:enumeration value="DUPLICATE_EXTERNAL_ID"/>
          <xs:enumeration value="FRIEND_RESTRICTION"/>
          <xs:enumeration value="EMPLOYEE_ALREADY_EXIST"/>
          <xs:enumeration value="DUPLICATE_COMPANY"/>
          <xs:enumeration value="EXPENSIVE_SEARCH"/>
          <xs:enumeration value="MULTIPLE_PERSONS_FOUND"/>
          <xs:enumeration value="NOT_DELIVERABLE"/>
          <xs:enumeration value="CIRCULAR_REFERENCE"/>
          <xs:enumeration value="REFERENCE"/>
          <xs:enumeration value="PERSON_NOT_EDITABLE"/>
          <xs:enumeration value="PERSON_TRANSFER"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_FOUND"/>
          <xs:enumeration value="ACCOUNT_RECEIVABLE_IS_BLOCKED"/>
          <xs:enumeration value="BANK_ACCOUNT_IS_BLOCKED"/>
          <xs:enumeration value="DEBIT_MAX"/>
          <xs:enumeration value="INVALID_PAYMENT_AGREEMENT"/>
          <xs:enumeration value="INVALID_BANK_INFO"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_CREDITOR_FOUND"/>
          <xs:enumeration value="PARTICIPATION_TIME_INTERVAL_OVERLAP"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLACKLISTED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLOCKED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="BOOKING_WAITING_LIST_FULL"/>
          <xs:enumeration value="BOOKING_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_RESTRICTION"/>
          <xs:enumeration value="OUTSIDE_BOOKING_WINDOW_EXCEPTION"/>
          <xs:enumeration value="CUSTOMER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="CENTER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_COLLECTION_NOT_PAID_FOR"/>
          <xs:enumeration value="NO_PRIVILEGE_FOR_PARTICIPATION"/>
          <xs:enumeration value="ALL_PARTICIPATIONS_TAKEN"/>
          <xs:enumeration value="SHOWUP_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_CANCELLATION"/>
          <xs:enumeration value="TOO_EARLY_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="TOO_EARLY_TO_SHOWUP"/>
          <xs:enumeration value="TOO_LATE_TO_SHOWUP"/>
          <xs:enumeration value="PARTICIPANT_TOO_MANY_OPEN_BOOKINGS"/>
          <xs:enumeration value="RESOURCE_OCCUPIED"/>
          <xs:enumeration value="RESOURCE_START_TIME_RESTRICTION"/>
          <xs:enumeration value="RESOURCE_TIME_RESTRICTION"/>
          <xs:enumeration value="ACTIVITY_STATE_INVALID"/>
          <xs:enumeration value="NO_PARENT_BOOKING_FOUND"/>
          <xs:enumeration value="STAFF_BLACKLISTED"/>
          <xs:enumeration value="STAFF_OCCUPIED"/>
          <xs:enumeration value="TOO_MANY_SUB_STAFF_USAGES"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_BOOKED"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_SHOWEDUP"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_BOOKING"/>
          <xs:enumeration value="LISTS_FULL"/>
          <xs:enumeration value="TOO_LATE_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="PARTICIPANT_OCCUPIED"/>
          <xs:enumeration value="FULL_BOOKING_RESTRICTION"/>
          <xs:enumeration value="IN_ADVANCE_LIMIT_BOOKING_RESTRICTION"/>
          <xs:enumeration value="PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="PARTICIPANT_BLACKLISTED"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BOOKING"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CENTER"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CUSTOMER"/>
          <xs:enumeration value="UNABLE_TO_REFRESH_WAITING_LIST"/>
          <xs:enumeration value="TOO_FEW_PARTICIPANTS"/>
          <xs:enumeration value="FREEZE_MAX_PREBOOK_PERIOD"/>
          <xs:enumeration value="FREEZE_MIN_OR_MAX_DURATION"/>
          <xs:enumeration value="FREEZE_TOO_LONG"/>
          <xs:enumeration value="FREEZE_TOO_SHORT"/>
          <xs:enumeration value="FREEZE_MAX_NUMBER_REACHED"/>
          <xs:enumeration value="TOO_MANY_FREEZES_PERIOD"/>
          <xs:enumeration value="TOO_MANY_FREEZES_TOTAL"/>
          <xs:enumeration value="FREEZE_MAX_TOTAL_DURATION_REACHED"/>
          <xs:enumeration value="FREEZE_NOT_ALLOWED"/>
          <xs:enumeration value="FREEZE_START_AND_STOP_DATE"/>
          <xs:enumeration value="FREEZE_START_IN_THE_PAST"/>
          <xs:enumeration value="FREEZE_END_BEFORE_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_AFTER_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_BEFORE_SUBSCRIPTION_START"/>
          <xs:enumeration value="FREEZE_OVERLAP"/>
          <xs:enumeration value="FREEZE_FUTURE_FREEZE"/>
          <xs:enumeration value="BOOKINGS_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="PARTICIPATION_ALREADY_CANCELLED"/>
          <xs:enumeration value="PARTICIPATION_CANCELLED"/>
          <xs:enumeration value="MINIMUM_AGE_EXCEPTION"/>
          <xs:enumeration value="TEMPLATE_NOT_DEFINED"/>
          <xs:enumeration value="INVALID_OTHER_PAYER_TYPE"/>
          <xs:enumeration value="DIFFERENT_COUNTRY_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_IS_NOT_STAFF"/>
          <xs:enumeration value="OTHER_PAYER_HAS_OTHER_PAYER"/>
          <xs:enumeration value="NO_VALID_ACCOUNT_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_STATUS_NOT_VALID_FOR_ATTEND"/>
          <xs:enumeration value="ATTENDING_PERSON_BLACKLISTED"/>
          <xs:enumeration value="MISSING_PRIVILEGE_FOR_ATTEND"/>
          <xs:enumeration value="ATTEND_NOT_POSSIBLE_AT_SPECIFIED_TIME"/>
          <xs:enumeration value="CLIPCARD_NOT_USABLE"/>
          <xs:enumeration value="TOO_MANY_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="NOT_ENOUGH_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="LOGIN_BLOCKED"/>
          <xs:enumeration value="PASSWORD_EXPIRED"/>
          <xs:enumeration value="PERSON_DELETED"/>
          <xs:enumeration value="PERSON_ANONYMIZED"/>
          <xs:enumeration value="INVALID_PICTURE"/>
          <xs:enumeration value="PERSON_NOT_FOUND_FOR_VENDING"/>
          <xs:enumeration value="TOO_MANY_MATCHES"/>
          <xs:enumeration value="PASSWORD_NOT_SET"/>
          <xs:enumeration value="PASSWORD_TOO_SHORT"/>
          <xs:enumeration value="CANNOT_PARTICIPATE_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="INVALID_STATUS"/>
          <xs:enumeration value="CONCURRENT_CALLS"/>
          <xs:enumeration value="CANNOT_UPDATE_COMPLETED_QUESTIONNAIRE"/>
          <xs:enumeration value="MISSING_ADMIN_FEE_PRODUCT"/>
          <xs:enumeration value="LOGIN_NOT_VALID"/>
          <xs:enumeration value="ACTIVE_TASKS_ALREADY_EXISTS_FOR_PERSON"/>
          <xs:enumeration value="TASK_TYPE_EXTERNAL_KEY_DOES_NOT_EXIST"/>
          <xs:enumeration value="SUBSCRIPTION_OF_SAME_TYPE"/>
          <xs:enumeration value="PERSON_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_KEY_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_BLOCKED"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_UNBLOCKED"/>
          <xs:enumeration value="INVALID_EMAIL"/>
          <xs:enumeration value="CENTER_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_TYPE_NOT_STRING"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_UPDATE_NOT_ALLOWED"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_VALUE_NOT_ALLOWED"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="CHILD_MUST_HAVE_AT_LEAST_ONE_PARENT"/>
          <xs:enumeration value="CHILD_HAS_TOO_MANY_PARENTS"/>
          <xs:enumeration value="PARENT_HAS_TOO_MANY_CHILDREN"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_ALREADY_EXISTS"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_DOES_NOT_EXIST"/>
          <xs:enumeration value="GUARDIAN_IS_TOO_YOUNG"/>
          <xs:enumeration value="CHILD_IS_TOO_OLD"/>
          <xs:enumeration value="AGE_NOT_SET"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_PERSON_MISMATCH"/>
          <xs:enumeration value="PAYMENT_CYCLE_TYPE_NOT_ALLOWED_EXCEPTION"/>
          <xs:enumeration value="SUBSCRIPTION_DOES_NOT_BELONG_TO_MEMBER"/>
          <xs:enumeration value="CANNOT_DELETE_SUBSCRIPTION"/>
          <xs:enumeration value="NO_PAYMENT_AGREEMENT_FOUND"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_VALID_FOR_SALES"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_ACTIVE"/>
          <xs:enumeration value="PAYMENT_CYCLE_NOT_ALLOWED"/>
          <xs:enumeration value="SUBSCRIPTION_SALE_OUTSIDE_HOME_CLUB_NOT_ALLOWED"/>
          <xs:enumeration value="BELOW_REQUIRED_AGE_FOR_EMAIL_CAPTURE"/>
          <xs:enumeration value="ROLE_NOT_FOUND"/>
          <xs:enumeration value="ACTION_NOT_ALLOWED"/>
          <xs:enumeration value="SCOPE_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_BLOCKED"/>
          <xs:enumeration value="ROLE_NOT_ASSIGNED"/>
          <xs:enumeration value="INVALID_EMPLOYEE_KEY"/>
          <xs:enumeration value="MISSING_PRIVILEGES"/>
          <xs:enumeration value="DATE_PARSE_ERROR"/>
          <xs:enumeration value="DATE_INVALID"/>
          <xs:enumeration value="CLIPCARD_NOT_ACTIVE"/>
          <xs:enumeration value="GROUP_ALREADY_EXIST"/>
          <xs:enumeration value="EMPLOYEE_AND_PERSON_KEY_SET"/>
          <xs:enumeration value="MULTIPLE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="MULTIPLE_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_ACTIVE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="errorDetailType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="MISSING_ACCESS_GROUP"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_DATE"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_TIME"/>
          <xs:enumeration value="MISSING_PRIVILEGES_COUNT"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="ALLOWED_BOOKING_WINDOW_TIMESLOT"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="personsChangedType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NEW_PERSONS"/>
          <xs:enumeration value="DETAIL_CHANGES"/>
          <xs:enumeration value="STATUS_CHANGES"/>
          <xs:enumeration value="SUBSCRIPTION_STATUS_CHANGES"/>
          <xs:enumeration value="ATTENDS"/>
          <xs:enumeration value="CHECKINS"/>
          <xs:enumeration value="PARTICIPATIONS"/>
          <xs:enumeration value="CLIPCARD_CHANGES"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType final="#all" name="availableExtractArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:availableExtract"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="apiPersonKeyArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:apiPersonKey"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </types>
  <message name="ExtractAPI_runExtractResponse">
    <part name="return" type="tns:mimeDocument"/>
  </message>
  <message name="ExtractAPI_getChangedPersonsResponse">
    <part name="return" type="tns:apiPersonKeyArray"/>
  </message>
  <message name="ExtractAPI_getChangedPersons">
    <part name="center" type="xsd:int"/>
    <part name="fromDate" type="xsd:string"/>
    <part name="toDate" type="xsd:string"/>
    <part name="changeType" type="tns:personsChangedType"/>
  </message>
  <message name="ExtractAPI_runExtract">
    <part name="extract" type="tns:extract"/>
  </message>
  <message name="ExtractAPI_getAvailableExtracts"/>
  <message name="APIException">
    <part element="tns:APIException" name="APIException"/>
  </message>
  <message name="ExtractAPI_getAvailableExtractsResponse">
    <part name="return" type="tns:availableExtractArray"/>
  </message>
  <portType name="ExtractAPI">
    <operation name="getAvailableExtracts">
      <input message="tns:ExtractAPI_getAvailableExtracts"/>
      <output message="tns:ExtractAPI_getAvailableExtractsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getChangedPersons" parameterOrder="center fromDate toDate changeType">
      <input message="tns:ExtractAPI_getChangedPersons"/>
      <output message="tns:ExtractAPI_getChangedPersonsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="runExtract" parameterOrder="extract">
      <input message="tns:ExtractAPI_runExtract"/>
      <output message="tns:ExtractAPI_runExtractResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
  </portType>
  <binding name="ExtractAPIBinding" type="tns:ExtractAPI">
    <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="getAvailableExtracts">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getChangedPersons">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="runExtract">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
  </binding>
  <service name="ExtractAPIService">
    <port binding="tns:ExtractAPIBinding" name="ExtractAPIPort">
      <soap:address location="https://lite-test.exerp.com/api/v5/ExtractAPI"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://lite-test.exerp.com/api/v5/ExtractAPI</con:endpoint></con:endpoints><con:operation id="864ecd36-da0d-4f2e-9fd3-a798c8102c76" isOneWay="false" action="" name="getAvailableExtracts" bindingOperationName="getAvailableExtracts" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fc8b6fc0-cad9-4be0-8354-6264c20846e1" isOneWay="false" action="" name="getChangedPersons" bindingOperationName="getChangedPersons" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c326cfb8-0b3d-4b01-8387-b4db7933df75" isOneWay="false" action="" name="runExtract" bindingOperationName="runExtract" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="6a375ab3-423f-48dc-a9a3-28ea307476b5" wsaVersion="NONE" name="GiftCardAPIBinding" type="wsdl" bindingName="{http://v5.api.eclub.procard.dk/}GiftCardAPIBinding" soapVersion="1_1" anonymous="optional" definition="https://lite-test.exerp.com/api/v5/GiftCardAPI?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://lite-test.exerp.com/api/v5/GiftCardAPI?wsdl"><con:part><con:url>https://lite-test.exerp.com/api/v5/GiftCardAPI?wsdl</con:url><con:content><![CDATA[<definitions name="GiftCardAPIService" targetNamespace="http://v5.api.eclub.procard.dk/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://v5.api.eclub.procard.dk/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <types>
    <xs:schema targetNamespace="http://v5.api.eclub.procard.dk/" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="APIException" type="tns:APIException"/>
      <xs:complexType name="availableGiftCardProduct">
        <xs:sequence>
          <xs:element name="freeGiftCard" type="xs:boolean"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="productKey" type="tns:compositeKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="compositeKey">
        <xs:sequence>
          <xs:element name="center" type="xs:int"/>
          <xs:element name="id" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="APIException">
        <xs:sequence>
          <xs:element minOccurs="0" name="errorCode" type="tns:errorCode"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="errorDetail" type="tns:errorDetail"/>
          <xs:element minOccurs="0" name="errorMessage" type="xs:string"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="errorDetail">
        <xs:sequence>
          <xs:element minOccurs="0" name="info" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:errorDetailType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="sellFreeGiftCardParameter">
        <xs:sequence>
          <xs:element name="amount" type="xs:string"/>
          <xs:element minOccurs="0" name="cardId" type="xs:string"/>
          <xs:element minOccurs="0" name="cardType" type="tns:accessCardType"/>
          <xs:element name="personKey" type="tns:apiPersonKey"/>
          <xs:element name="productKey" type="tns:compositeKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="apiPersonKey">
        <xs:complexContent>
          <xs:extension base="tns:compositeKey">
            <xs:sequence>
              <xs:element minOccurs="0" name="externalId" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="soldGiftCard">
        <xs:sequence>
          <xs:element minOccurs="0" name="cardId" type="xs:string"/>
          <xs:element minOccurs="0" name="cardType" type="tns:accessCardType"/>
          <xs:element minOccurs="0" name="giftCardKey" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="invoiceKey" type="tns:compositeKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="sellGiftCardParameter">
        <xs:sequence>
          <xs:element name="amount" type="xs:string"/>
          <xs:element minOccurs="0" name="cardId" type="xs:string"/>
          <xs:element minOccurs="0" name="cardType" type="tns:accessCardType"/>
          <xs:element name="paymentInfo" type="tns:paymentInfo"/>
          <xs:element name="personKey" type="tns:apiPersonKey"/>
          <xs:element name="productKey" type="tns:compositeKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="paymentInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="amountPaidByCustomer" type="xs:string"/>
          <xs:element minOccurs="0" name="creditCardPaymentInfo" type="tns:creditCardPaymentInfo"/>
          <xs:element minOccurs="0" name="creditCardTransactionRef" type="xs:string"/>
          <xs:element minOccurs="0" name="installmentPlanConfigExternalId" type="xs:string"/>
          <xs:element minOccurs="0" name="paymentAgreementKeyForCollection" type="tns:compositeSubKey"/>
          <xs:element name="paymentMethod" type="tns:paymentMethod"/>
          <xs:element minOccurs="0" name="shoppingBasketCenter" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="creditCardPaymentInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="cardDetailsEncrypted" type="xs:string"/>
          <xs:element name="createAgreement" type="xs:boolean"/>
          <xs:element minOccurs="0" name="replacePaymentAgreementKey" type="tns:compositeSubKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="compositeSubKey">
        <xs:complexContent>
          <xs:extension base="tns:compositeKey">
            <xs:sequence>
              <xs:element name="subId" type="xs:int"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:simpleType name="errorCode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UNKNOWN_ERROR"/>
          <xs:enumeration value="CREATE_EXCEPTION"/>
          <xs:enumeration value="REMOVE_EXCEPTION"/>
          <xs:enumeration value="SECURITY"/>
          <xs:enumeration value="SECURITY_ROLE"/>
          <xs:enumeration value="ARGUMENT_IS_NULL"/>
          <xs:enumeration value="ILLEGAL_ARGUMENT"/>
          <xs:enumeration value="PARSE_ERROR"/>
          <xs:enumeration value="ENTITY_NOT_FOUND"/>
          <xs:enumeration value="CONFLICTING_CHANGE"/>
          <xs:enumeration value="INVALID_ZIPCODE"/>
          <xs:enumeration value="INVALID_SOCIAL_SECURITY_NUMBER"/>
          <xs:enumeration value="INVALID_COMPANYID"/>
          <xs:enumeration value="INVALID_PHONE_NUMBER"/>
          <xs:enumeration value="CLIENT"/>
          <xs:enumeration value="ENTITY_IDENTIFIER_STATUS"/>
          <xs:enumeration value="DUPLICATE_PERSON"/>
          <xs:enumeration value="DUPLICATE_EXTERNAL_ID"/>
          <xs:enumeration value="FRIEND_RESTRICTION"/>
          <xs:enumeration value="EMPLOYEE_ALREADY_EXIST"/>
          <xs:enumeration value="DUPLICATE_COMPANY"/>
          <xs:enumeration value="EXPENSIVE_SEARCH"/>
          <xs:enumeration value="MULTIPLE_PERSONS_FOUND"/>
          <xs:enumeration value="NOT_DELIVERABLE"/>
          <xs:enumeration value="CIRCULAR_REFERENCE"/>
          <xs:enumeration value="REFERENCE"/>
          <xs:enumeration value="PERSON_NOT_EDITABLE"/>
          <xs:enumeration value="PERSON_TRANSFER"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_FOUND"/>
          <xs:enumeration value="ACCOUNT_RECEIVABLE_IS_BLOCKED"/>
          <xs:enumeration value="BANK_ACCOUNT_IS_BLOCKED"/>
          <xs:enumeration value="DEBIT_MAX"/>
          <xs:enumeration value="INVALID_PAYMENT_AGREEMENT"/>
          <xs:enumeration value="INVALID_BANK_INFO"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_CREDITOR_FOUND"/>
          <xs:enumeration value="PARTICIPATION_TIME_INTERVAL_OVERLAP"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLACKLISTED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLOCKED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="BOOKING_WAITING_LIST_FULL"/>
          <xs:enumeration value="BOOKING_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_RESTRICTION"/>
          <xs:enumeration value="OUTSIDE_BOOKING_WINDOW_EXCEPTION"/>
          <xs:enumeration value="CUSTOMER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="CENTER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_COLLECTION_NOT_PAID_FOR"/>
          <xs:enumeration value="NO_PRIVILEGE_FOR_PARTICIPATION"/>
          <xs:enumeration value="ALL_PARTICIPATIONS_TAKEN"/>
          <xs:enumeration value="SHOWUP_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_CANCELLATION"/>
          <xs:enumeration value="TOO_EARLY_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="TOO_EARLY_TO_SHOWUP"/>
          <xs:enumeration value="TOO_LATE_TO_SHOWUP"/>
          <xs:enumeration value="PARTICIPANT_TOO_MANY_OPEN_BOOKINGS"/>
          <xs:enumeration value="RESOURCE_OCCUPIED"/>
          <xs:enumeration value="RESOURCE_START_TIME_RESTRICTION"/>
          <xs:enumeration value="RESOURCE_TIME_RESTRICTION"/>
          <xs:enumeration value="ACTIVITY_STATE_INVALID"/>
          <xs:enumeration value="NO_PARENT_BOOKING_FOUND"/>
          <xs:enumeration value="STAFF_BLACKLISTED"/>
          <xs:enumeration value="STAFF_OCCUPIED"/>
          <xs:enumeration value="TOO_MANY_SUB_STAFF_USAGES"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_BOOKED"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_SHOWEDUP"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_BOOKING"/>
          <xs:enumeration value="LISTS_FULL"/>
          <xs:enumeration value="TOO_LATE_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="PARTICIPANT_OCCUPIED"/>
          <xs:enumeration value="FULL_BOOKING_RESTRICTION"/>
          <xs:enumeration value="IN_ADVANCE_LIMIT_BOOKING_RESTRICTION"/>
          <xs:enumeration value="PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="PARTICIPANT_BLACKLISTED"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BOOKING"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CENTER"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CUSTOMER"/>
          <xs:enumeration value="UNABLE_TO_REFRESH_WAITING_LIST"/>
          <xs:enumeration value="TOO_FEW_PARTICIPANTS"/>
          <xs:enumeration value="FREEZE_MAX_PREBOOK_PERIOD"/>
          <xs:enumeration value="FREEZE_MIN_OR_MAX_DURATION"/>
          <xs:enumeration value="FREEZE_TOO_LONG"/>
          <xs:enumeration value="FREEZE_TOO_SHORT"/>
          <xs:enumeration value="FREEZE_MAX_NUMBER_REACHED"/>
          <xs:enumeration value="TOO_MANY_FREEZES_PERIOD"/>
          <xs:enumeration value="TOO_MANY_FREEZES_TOTAL"/>
          <xs:enumeration value="FREEZE_MAX_TOTAL_DURATION_REACHED"/>
          <xs:enumeration value="FREEZE_NOT_ALLOWED"/>
          <xs:enumeration value="FREEZE_START_AND_STOP_DATE"/>
          <xs:enumeration value="FREEZE_START_IN_THE_PAST"/>
          <xs:enumeration value="FREEZE_END_BEFORE_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_AFTER_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_BEFORE_SUBSCRIPTION_START"/>
          <xs:enumeration value="FREEZE_OVERLAP"/>
          <xs:enumeration value="FREEZE_FUTURE_FREEZE"/>
          <xs:enumeration value="BOOKINGS_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="PARTICIPATION_ALREADY_CANCELLED"/>
          <xs:enumeration value="PARTICIPATION_CANCELLED"/>
          <xs:enumeration value="MINIMUM_AGE_EXCEPTION"/>
          <xs:enumeration value="TEMPLATE_NOT_DEFINED"/>
          <xs:enumeration value="INVALID_OTHER_PAYER_TYPE"/>
          <xs:enumeration value="DIFFERENT_COUNTRY_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_IS_NOT_STAFF"/>
          <xs:enumeration value="OTHER_PAYER_HAS_OTHER_PAYER"/>
          <xs:enumeration value="NO_VALID_ACCOUNT_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_STATUS_NOT_VALID_FOR_ATTEND"/>
          <xs:enumeration value="ATTENDING_PERSON_BLACKLISTED"/>
          <xs:enumeration value="MISSING_PRIVILEGE_FOR_ATTEND"/>
          <xs:enumeration value="ATTEND_NOT_POSSIBLE_AT_SPECIFIED_TIME"/>
          <xs:enumeration value="CLIPCARD_NOT_USABLE"/>
          <xs:enumeration value="TOO_MANY_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="NOT_ENOUGH_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="LOGIN_BLOCKED"/>
          <xs:enumeration value="PASSWORD_EXPIRED"/>
          <xs:enumeration value="PERSON_DELETED"/>
          <xs:enumeration value="PERSON_ANONYMIZED"/>
          <xs:enumeration value="INVALID_PICTURE"/>
          <xs:enumeration value="PERSON_NOT_FOUND_FOR_VENDING"/>
          <xs:enumeration value="TOO_MANY_MATCHES"/>
          <xs:enumeration value="PASSWORD_NOT_SET"/>
          <xs:enumeration value="PASSWORD_TOO_SHORT"/>
          <xs:enumeration value="CANNOT_PARTICIPATE_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="INVALID_STATUS"/>
          <xs:enumeration value="CONCURRENT_CALLS"/>
          <xs:enumeration value="CANNOT_UPDATE_COMPLETED_QUESTIONNAIRE"/>
          <xs:enumeration value="MISSING_ADMIN_FEE_PRODUCT"/>
          <xs:enumeration value="LOGIN_NOT_VALID"/>
          <xs:enumeration value="ACTIVE_TASKS_ALREADY_EXISTS_FOR_PERSON"/>
          <xs:enumeration value="TASK_TYPE_EXTERNAL_KEY_DOES_NOT_EXIST"/>
          <xs:enumeration value="SUBSCRIPTION_OF_SAME_TYPE"/>
          <xs:enumeration value="PERSON_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_KEY_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_BLOCKED"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_UNBLOCKED"/>
          <xs:enumeration value="INVALID_EMAIL"/>
          <xs:enumeration value="CENTER_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_TYPE_NOT_STRING"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_UPDATE_NOT_ALLOWED"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_VALUE_NOT_ALLOWED"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="CHILD_MUST_HAVE_AT_LEAST_ONE_PARENT"/>
          <xs:enumeration value="CHILD_HAS_TOO_MANY_PARENTS"/>
          <xs:enumeration value="PARENT_HAS_TOO_MANY_CHILDREN"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_ALREADY_EXISTS"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_DOES_NOT_EXIST"/>
          <xs:enumeration value="GUARDIAN_IS_TOO_YOUNG"/>
          <xs:enumeration value="CHILD_IS_TOO_OLD"/>
          <xs:enumeration value="AGE_NOT_SET"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_PERSON_MISMATCH"/>
          <xs:enumeration value="PAYMENT_CYCLE_TYPE_NOT_ALLOWED_EXCEPTION"/>
          <xs:enumeration value="SUBSCRIPTION_DOES_NOT_BELONG_TO_MEMBER"/>
          <xs:enumeration value="CANNOT_DELETE_SUBSCRIPTION"/>
          <xs:enumeration value="NO_PAYMENT_AGREEMENT_FOUND"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_VALID_FOR_SALES"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_ACTIVE"/>
          <xs:enumeration value="PAYMENT_CYCLE_NOT_ALLOWED"/>
          <xs:enumeration value="SUBSCRIPTION_SALE_OUTSIDE_HOME_CLUB_NOT_ALLOWED"/>
          <xs:enumeration value="BELOW_REQUIRED_AGE_FOR_EMAIL_CAPTURE"/>
          <xs:enumeration value="ROLE_NOT_FOUND"/>
          <xs:enumeration value="ACTION_NOT_ALLOWED"/>
          <xs:enumeration value="SCOPE_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_BLOCKED"/>
          <xs:enumeration value="ROLE_NOT_ASSIGNED"/>
          <xs:enumeration value="INVALID_EMPLOYEE_KEY"/>
          <xs:enumeration value="MISSING_PRIVILEGES"/>
          <xs:enumeration value="DATE_PARSE_ERROR"/>
          <xs:enumeration value="DATE_INVALID"/>
          <xs:enumeration value="CLIPCARD_NOT_ACTIVE"/>
          <xs:enumeration value="GROUP_ALREADY_EXIST"/>
          <xs:enumeration value="EMPLOYEE_AND_PERSON_KEY_SET"/>
          <xs:enumeration value="MULTIPLE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="MULTIPLE_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_ACTIVE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="errorDetailType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="MISSING_ACCESS_GROUP"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_DATE"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_TIME"/>
          <xs:enumeration value="MISSING_PRIVILEGES_COUNT"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="ALLOWED_BOOKING_WINDOW_TIMESLOT"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="accessCardType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="BARCODE"/>
          <xs:enumeration value="MAGNETICCARD"/>
          <xs:enumeration value="RFCARD"/>
          <xs:enumeration value="PIN"/>
          <xs:enumeration value="ANTIDROWN"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="paymentMethod">
        <xs:restriction base="xs:string">
          <xs:enumeration value="CASH_ACCOUNT"/>
          <xs:enumeration value="PAYMENT_ACCOUNT"/>
          <xs:enumeration value="SHOPPING_BASKET"/>
          <xs:enumeration value="INSTALLMENT_PLAN"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType final="#all" name="availableGiftCardProductArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:availableGiftCardProduct"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </types>
  <message name="GiftCardAPI_sellGiftCard">
    <part name="parameters" type="tns:sellGiftCardParameter"/>
  </message>
  <message name="GiftCardAPI_sellGiftCardResponse">
    <part name="return" type="tns:soldGiftCard"/>
  </message>
  <message name="GiftCardAPI_getRemainingAmountOnGiftCardResponse">
    <part name="return" type="xsd:string"/>
  </message>
  <message name="GiftCardAPI_getAvailableGiftCardProducts">
    <part name="center" type="xsd:int"/>
  </message>
  <message name="GiftCardAPI_sellFreeGiftCardResponse">
    <part name="return" type="tns:soldGiftCard"/>
  </message>
  <message name="GiftCardAPI_sellFreeGiftCard">
    <part name="parameters" type="tns:sellFreeGiftCardParameter"/>
  </message>
  <message name="GiftCardAPI_useGiftCardResponse"/>
  <message name="GiftCardAPI_useGiftCard">
    <part name="centerId" type="xsd:int"/>
    <part name="barcodeText" type="xsd:string"/>
    <part name="amount" type="xsd:string"/>
    <part name="ref" type="xsd:string"/>
  </message>
  <message name="APIException">
    <part element="tns:APIException" name="APIException"/>
  </message>
  <message name="GiftCardAPI_getRemainingAmountOnGiftCard">
    <part name="centerId" type="xsd:int"/>
    <part name="barcodeText" type="xsd:string"/>
  </message>
  <message name="GiftCardAPI_getAvailableGiftCardProductsResponse">
    <part name="return" type="tns:availableGiftCardProductArray"/>
  </message>
  <portType name="GiftCardAPI">
    <operation name="getAvailableGiftCardProducts" parameterOrder="center">
      <input message="tns:GiftCardAPI_getAvailableGiftCardProducts"/>
      <output message="tns:GiftCardAPI_getAvailableGiftCardProductsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getRemainingAmountOnGiftCard" parameterOrder="centerId barcodeText">
      <input message="tns:GiftCardAPI_getRemainingAmountOnGiftCard"/>
      <output message="tns:GiftCardAPI_getRemainingAmountOnGiftCardResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="sellFreeGiftCard" parameterOrder="parameters">
      <input message="tns:GiftCardAPI_sellFreeGiftCard"/>
      <output message="tns:GiftCardAPI_sellFreeGiftCardResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="sellGiftCard" parameterOrder="parameters">
      <input message="tns:GiftCardAPI_sellGiftCard"/>
      <output message="tns:GiftCardAPI_sellGiftCardResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="useGiftCard" parameterOrder="centerId barcodeText amount ref">
      <input message="tns:GiftCardAPI_useGiftCard"/>
      <output message="tns:GiftCardAPI_useGiftCardResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
  </portType>
  <binding name="GiftCardAPIBinding" type="tns:GiftCardAPI">
    <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="getAvailableGiftCardProducts">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getRemainingAmountOnGiftCard">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="sellFreeGiftCard">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="sellGiftCard">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="useGiftCard">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
  </binding>
  <service name="GiftCardAPIService">
    <port binding="tns:GiftCardAPIBinding" name="GiftCardAPIPort">
      <soap:address location="https://lite-test.exerp.com/api/v5/GiftCardAPI"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://lite-test.exerp.com/api/v5/GiftCardAPI</con:endpoint></con:endpoints><con:operation id="25a30fca-df83-4d25-8992-63349df9f546" isOneWay="false" action="" name="getAvailableGiftCardProducts" bindingOperationName="getAvailableGiftCardProducts" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="86838b44-3c69-4e52-b91d-991d60cf144c" isOneWay="false" action="" name="getRemainingAmountOnGiftCard" bindingOperationName="getRemainingAmountOnGiftCard" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="673e3996-366e-41f0-8f2b-7dd8c0f5a044" isOneWay="false" action="" name="sellFreeGiftCard" bindingOperationName="sellFreeGiftCard" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="19b4c7f2-c821-4266-8455-8b75ea1b46c5" isOneWay="false" action="" name="sellGiftCard" bindingOperationName="sellGiftCard" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4a19e38c-d5cc-49dc-bfae-692eeac4506d" isOneWay="false" action="" name="useGiftCard" bindingOperationName="useGiftCard" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="04860c78-3066-412c-bf7c-059ae6c4239e" wsaVersion="NONE" name="PersonAPIBinding" type="wsdl" bindingName="{http://v5.api.eclub.procard.dk/}PersonAPIBinding" soapVersion="1_1" anonymous="optional" definition="https://lite-test.exerp.com/api/v5/PersonAPI?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://lite-test.exerp.com/api/v5/PersonAPI?wsdl"><con:part><con:url>https://lite-test.exerp.com/api/v5/PersonAPI?wsdl</con:url><con:content><![CDATA[<definitions name="PersonAPIService" targetNamespace="http://v5.api.eclub.procard.dk/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://jaxb.dev.java.net/array" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://v5.api.eclub.procard.dk/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <types>
    <xs:schema targetNamespace="http://jaxb.dev.java.net/array" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:complexType final="#all" name="stringArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema targetNamespace="http://v5.api.eclub.procard.dk/" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="APIException" type="tns:APIException"/>
      <xs:element name="RelatedPerson" type="tns:RelatedPerson"/>
      <xs:element name="TransferException" type="tns:TransferException"/>
      <xs:complexType name="createPersonDetails">
        <xs:sequence>
          <xs:element minOccurs="0" name="person" type="tns:person"/>
          <xs:element minOccurs="0" name="personCommunication" type="tns:personCommunication"/>
          <xs:element minOccurs="0" name="password" type="xs:string"/>
          <xs:element minOccurs="0" name="pincode" type="xs:string"/>
          <xs:element minOccurs="0" name="extendedAttributes">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="extendedAttribute" type="tns:extendedAttribute"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="extendedAttributeMIMEs">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="extendedAttributeMIME" type="tns:extendedAttributeMIME"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="person">
        <xs:sequence>
          <xs:element minOccurs="0" name="address" type="tns:address"/>
          <xs:element minOccurs="0" name="birthday" type="xs:string"/>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
          <xs:element minOccurs="0" name="corporateRelationType" type="tns:corporateRelationType"/>
          <xs:element minOccurs="0" name="employeeNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="externalId" type="xs:string"/>
          <xs:element minOccurs="0" name="firstName" type="xs:string"/>
          <xs:element minOccurs="0" name="lastName" type="xs:string"/>
          <xs:element name="male" type="xs:boolean"/>
          <xs:element minOccurs="0" name="nickName" type="xs:string"/>
          <xs:element minOccurs="0" name="passport" type="tns:passport"/>
          <xs:element minOccurs="0" name="personId" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="personType" type="tns:personType"/>
          <xs:element minOccurs="0" name="relatedPersonId" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="salutation" type="xs:string"/>
          <xs:element minOccurs="0" name="socialSecurityNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="status" type="tns:personStatus"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="address">
        <xs:sequence>
          <xs:element name="address1" type="xs:string"/>
          <xs:element minOccurs="0" name="address2" type="xs:string"/>
          <xs:element minOccurs="0" name="address3" type="xs:string"/>
          <xs:element minOccurs="0" name="coName" type="xs:string"/>
          <xs:element name="country" type="xs:string"/>
          <xs:element minOccurs="0" name="county" type="xs:string"/>
          <xs:element minOccurs="0" name="province" type="xs:string"/>
          <xs:element name="zip" type="xs:string"/>
          <xs:element minOccurs="0" name="zipName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="passport">
        <xs:sequence>
          <xs:element name="number" type="xs:string"/>
          <xs:element minOccurs="0" name="issuanceCountry" type="xs:string"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="apiPersonKey">
        <xs:complexContent>
          <xs:extension base="tns:compositeKey">
            <xs:sequence>
              <xs:element minOccurs="0" name="externalId" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="compositeKey">
        <xs:sequence>
          <xs:element name="center" type="xs:int"/>
          <xs:element name="id" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="personCommunication">
        <xs:sequence>
          <xs:element minOccurs="0" name="allowChargedSMS" type="xs:boolean"/>
          <xs:element minOccurs="0" name="allowEmail" type="xs:boolean"/>
          <xs:element minOccurs="0" name="allowLetter" type="xs:boolean"/>
          <xs:element minOccurs="0" name="allowPhone" type="xs:boolean"/>
          <xs:element minOccurs="0" name="allowSMS" type="xs:boolean"/>
          <xs:element minOccurs="0" name="email" type="xs:string"/>
          <xs:element minOccurs="0" name="homePhoneNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="mobilePhoneNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="personId" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="quickChannel" type="tns:quickChannel"/>
          <xs:element minOccurs="0" name="wishToReceiveEmailNewsLetters" type="xs:boolean"/>
          <xs:element minOccurs="0" name="wishToReceiveThirdPartyOffers" type="xs:boolean"/>
          <xs:element minOccurs="0" name="workPhoneNumber" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="extendedAttribute">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:string"/>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="extendedAttributeMIME">
        <xs:sequence>
          <xs:element name="id" type="xs:string"/>
          <xs:element name="document" type="tns:mimeDocument"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="mimeDocument">
        <xs:sequence>
          <xs:element minOccurs="0" name="data" type="xs:base64Binary"/>
          <xs:element minOccurs="0" name="type" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="APIException">
        <xs:sequence>
          <xs:element minOccurs="0" name="errorCode" type="tns:errorCode"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="errorDetail" type="tns:errorDetail"/>
          <xs:element minOccurs="0" name="errorMessage" type="xs:string"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="errorDetail">
        <xs:sequence>
          <xs:element minOccurs="0" name="info" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:errorDetailType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="findPerson">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" nillable="true" type="tns:extendedAttribute"/>
          <xs:element minOccurs="0" name="birthday" type="xs:string"/>
          <xs:element minOccurs="0" name="center" type="xs:int"/>
          <xs:element minOccurs="0" name="country" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="personType" type="tns:personType"/>
          <xs:element minOccurs="0" name="phoneNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="socialSecurityNumber" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="personTypeAndStatus">
        <xs:sequence>
          <xs:element name="blacklisted" type="xs:boolean"/>
          <xs:element minOccurs="0" name="companyAgreementId" type="tns:compositeSubKey"/>
          <xs:element minOccurs="0" name="internalComment" type="xs:string"/>
          <xs:element minOccurs="0" name="messageToMember" type="xs:string"/>
          <xs:element minOccurs="0" name="personId" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="personStatus" type="tns:personStatus"/>
          <xs:element minOccurs="0" name="personType" type="tns:personType"/>
          <xs:element name="suspended" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="compositeSubKey">
        <xs:complexContent>
          <xs:extension base="tns:compositeKey">
            <xs:sequence>
              <xs:element name="subId" type="xs:int"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="changePersonTypeParameter">
        <xs:sequence>
          <xs:element minOccurs="0" name="companyAgreementId" type="tns:compositeSubKey"/>
          <xs:element minOccurs="0" name="corporateRelationType" type="tns:corporateRelationType"/>
          <xs:element minOccurs="0" name="documentExpireDate" type="xs:string"/>
          <xs:element minOccurs="0" name="employeeNumber" type="xs:string"/>
          <xs:element name="personKey" type="tns:apiPersonKey"/>
          <xs:element name="personType" type="tns:personType"/>
          <xs:element minOccurs="0" name="relatedPersonKey" type="tns:apiPersonKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="journalNote">
        <xs:sequence>
          <xs:element minOccurs="0" name="creationDate" type="xs:string"/>
          <xs:element minOccurs="0" name="creationTime" type="xs:string"/>
          <xs:element minOccurs="0" name="filename" type="xs:string"/>
          <xs:element minOccurs="0" name="key" type="xs:int"/>
          <xs:element minOccurs="0" name="mimeDocument" type="tns:mimeDocument"/>
          <xs:element name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="personKey" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="text" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:journalNoteType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="transferPersonParameters">
        <xs:sequence>
          <xs:element minOccurs="0" name="changeEndDateForCashSubscriptions" type="xs:boolean"/>
          <xs:element minOccurs="0" name="changePriceForEFTSubscriptions" type="xs:boolean"/>
          <xs:element name="personKey" type="tns:apiPersonKey"/>
          <xs:element name="toCenterId" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="transferSubscriptionsInfo" type="tns:transferSubscriptionInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="transferSubscriptionInfo">
        <xs:sequence>
          <xs:element name="productKey" type="tns:compositeKey"/>
          <xs:element name="subscriptionKey" type="tns:compositeKey"/>
          <xs:element name="terminateIfUnavailable" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="transferPersonInfo">
        <xs:sequence>
          <xs:element name="person" type="tns:person"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="subscriptions" type="tns:subscription"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="subscription">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="assignedAddOns" nillable="true" type="tns:assignedAddOn"/>
          <xs:element minOccurs="0" name="billedUntilDate" type="xs:string"/>
          <xs:element minOccurs="0" name="bindingEndDate" type="xs:string"/>
          <xs:element minOccurs="0" name="changeRestrictionEnabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="endDate" type="xs:string"/>
          <xs:element name="freeDays" type="xs:int"/>
          <xs:element minOccurs="0" name="paymentAgreementKey" type="tns:compositeSubKey"/>
          <xs:element minOccurs="0" name="personId" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="price" type="xs:string"/>
          <xs:element minOccurs="0" name="product" type="tns:subscriptionProduct"/>
          <xs:element minOccurs="0" name="startDate" type="xs:string"/>
          <xs:element minOccurs="0" name="state" type="tns:subscriptionState"/>
          <xs:element minOccurs="0" name="subState" type="tns:subscriptionSubState"/>
          <xs:element minOccurs="0" name="subscriptionId" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="windowOfOpportunity" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="assignedAddOn">
        <xs:sequence>
          <xs:element minOccurs="0" name="endDate" type="xs:string"/>
          <xs:element minOccurs="0" name="initialPeriodEndDate" type="xs:string"/>
          <xs:element minOccurs="0" name="initialPeriodPrice" type="xs:decimal"/>
          <xs:element minOccurs="0" name="initialPeriodStartDate" type="xs:string"/>
          <xs:element name="key" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="price" type="xs:string"/>
          <xs:element name="pricePeriodLength" type="xs:int"/>
          <xs:element minOccurs="0" name="pricePeriodUnit" type="tns:timeUnit"/>
          <xs:element minOccurs="0" name="startDate" type="xs:string"/>
          <xs:element minOccurs="0" name="startupCampaignEndDate" type="xs:string"/>
          <xs:element minOccurs="0" name="startupCampaignPrice" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="subscriptionProduct">
        <xs:sequence>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element minOccurs="0" name="externalId" type="xs:string"/>
          <xs:element minOccurs="0" name="globalId" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element name="periodLength" type="xs:int"/>
          <xs:element minOccurs="0" name="periodUnit" type="tns:timeUnit"/>
          <xs:element minOccurs="0" name="rank" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="sellingPoints" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:subscriptionType"/>
          <xs:element minOccurs="0" name="webname" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TransferException">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="availableProductsInfo" type="tns:availableProduct"/>
          <xs:element minOccurs="0" name="errorCode" type="tns:errorCode"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="errorDetail" type="tns:errorDetail"/>
          <xs:element minOccurs="0" name="errorMessage" type="xs:string"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="missingSubscriptionsInfo" type="tns:missingSubscriptionInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="availableProduct">
        <xs:sequence>
          <xs:element minOccurs="0" name="globalId" type="xs:string"/>
          <xs:element name="mainSubscription" type="xs:boolean"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="price" type="xs:decimal"/>
          <xs:element minOccurs="0" name="productKey" type="tns:compositeKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="missingSubscriptionInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="mainSubscription" type="xs:boolean"/>
          <xs:element minOccurs="0" name="productBlockedInNewCenter" type="xs:boolean"/>
          <xs:element minOccurs="0" name="subscriptionKey" type="tns:compositeKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="journalNoteParameters">
        <xs:sequence>
          <xs:element minOccurs="0" name="fromDate" type="xs:string"/>
          <xs:element minOccurs="0" name="maxEntries" type="xs:int"/>
          <xs:element name="personId" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="toDate" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:journalNoteType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="journalNoteDocument">
        <xs:sequence>
          <xs:element minOccurs="0" name="journalNoteKey" type="xs:int"/>
          <xs:element minOccurs="0" name="mimeDocument" type="tns:mimeDocument"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="validationResult">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="problems" nillable="true" type="tns:validationProblem"/>
          <xs:element name="valid" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="validationProblem">
        <xs:sequence>
          <xs:element minOccurs="0" name="errorCode" type="tns:errorCode"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="propertyNames" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createToDoParameter">
        <xs:sequence>
          <xs:element name="assignedPersonKey" type="tns:apiPersonKey"/>
          <xs:element name="centerId" type="xs:int"/>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
          <xs:element name="deadline" type="xs:string"/>
          <xs:element minOccurs="0" name="regardingPersonKey" type="tns:apiPersonKey"/>
          <xs:element name="subject" type="xs:string"/>
          <xs:element name="toDoGroupExternalId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="toDo">
        <xs:sequence>
          <xs:element name="assignedPersonKey" type="tns:apiPersonKey"/>
          <xs:element name="createdByKey" type="tns:apiPersonKey"/>
          <xs:element name="creationTime" type="xs:long"/>
          <xs:element name="deadline" type="xs:string"/>
          <xs:element minOccurs="0" name="regardingPerson" type="tns:person"/>
          <xs:element name="subject" type="xs:string"/>
          <xs:element name="toDoExternalId" type="xs:string"/>
          <xs:element name="toDoGroupName" type="xs:string"/>
          <xs:element name="toDoState" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="personDetail">
        <xs:sequence>
          <xs:element name="allowFriendsToBook" type="xs:boolean"/>
          <xs:element minOccurs="0" name="companyRelation" type="tns:personCompanyRelation"/>
          <xs:element minOccurs="0" name="extendedAttributes">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="extendedAttribute" type="tns:extendedAttribute"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="friends">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="friend" type="tns:friend"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="memberCards">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="memberCard" type="tns:memberCard"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="person" type="tns:person"/>
          <xs:element minOccurs="0" name="personActiveDates" type="tns:personActivationDates"/>
          <xs:element minOccurs="0" name="personCommunication" type="tns:personCommunication"/>
          <xs:element minOccurs="0" name="personTypeAndStatus" type="tns:personTypeAndStatus"/>
          <xs:element minOccurs="0" name="subscriptions">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="subscription" type="tns:subscription"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="personCompanyRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="agreement" type="tns:companyAgreement"/>
          <xs:element minOccurs="0" name="companyName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="companyAgreement">
        <xs:sequence>
          <xs:element minOccurs="0" name="allowedCorporateRelationTypes">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="allowedCorporateRelationType" type="tns:corporateRelationType"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="availabilityCenters" nillable="true" type="tns:center"/>
          <xs:element name="companyAgreementId" type="tns:compositeSubKey"/>
          <xs:element name="companyKey" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="contactPerson" type="tns:apiPersonKey"/>
          <xs:element name="documentationRequired" type="xs:boolean"/>
          <xs:element name="employeeNumberRequired" type="xs:boolean"/>
          <xs:element minOccurs="0" name="maximumFamilyMembers" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="privilegeSets" nillable="true" type="tns:privilegeSetAndSponsorship"/>
          <xs:element name="ref" type="xs:string"/>
          <xs:element minOccurs="0" name="requiresOtherPayer" type="xs:boolean"/>
          <xs:element minOccurs="0" name="state" type="tns:companyAgreementStateType"/>
          <xs:element minOccurs="0" name="validity" type="xs:int"/>
          <xs:element minOccurs="0" name="validityUnit" type="tns:timeUnit"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="center">
        <xs:sequence>
          <xs:element minOccurs="0" name="address" type="tns:address"/>
          <xs:element minOccurs="0" name="centerId" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="shortName" type="xs:string"/>
          <xs:element minOccurs="0" name="webName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="privilegeSetAndSponsorship">
        <xs:sequence>
          <xs:element minOccurs="0" name="privilegeSet" type="xs:int"/>
          <xs:element minOccurs="0" name="sponsorship" type="xs:decimal"/>
          <xs:element minOccurs="0" name="sponsorshipType" type="tns:sponsorshipType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="friend">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="personKey" type="tns:compositeKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="memberCard">
        <xs:sequence>
          <xs:element name="cardId" type="xs:string"/>
          <xs:element name="cardType" type="tns:accessCardType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="personActivationDates">
        <xs:sequence>
          <xs:element minOccurs="0" name="firstActiveStartDate" type="xs:string"/>
          <xs:element minOccurs="0" name="lastActiveEndDate" type="xs:string"/>
          <xs:element minOccurs="0" name="lastActiveStartDate" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="personRelationParameters">
        <xs:sequence>
          <xs:element minOccurs="0" name="personKey" type="tns:apiPersonKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RelatedPerson">
        <xs:sequence>
          <xs:element minOccurs="0" name="relationType" type="tns:relationType"/>
          <xs:element minOccurs="0" name="relatedPersonKey" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="relatedCompanyAgreementKey" type="tns:compositeSubKey"/>
          <xs:element minOccurs="0" name="relatedCompanyKey" type="tns:compositeKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="changeSuspensionStatusParameters">
        <xs:sequence>
          <xs:element name="internalComment" type="xs:string"/>
          <xs:element minOccurs="0" name="messageToMember" type="xs:string"/>
          <xs:element name="personKey" type="tns:apiPersonKey"/>
          <xs:element name="status" type="tns:personBlacklistedStatus"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="overridePartnerBenefitActivationAuthorizationCodeParameters">
        <xs:sequence>
          <xs:element name="personKey" type="tns:apiPersonKey"/>
          <xs:element name="activationAuthorizationCode" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="passportCountry">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="scope">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="children" nillable="true" type="tns:scope"/>
          <xs:element minOccurs="0" name="fullName" type="xs:string"/>
          <xs:element name="id" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:scopeType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="corporateRelationType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="EMPLOYEE"/>
          <xs:enumeration value="FAMILY_OF_EMPLOYEE"/>
          <xs:enumeration value="OTHER"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="personType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="PRIVATE"/>
          <xs:enumeration value="STUDENT"/>
          <xs:enumeration value="STAFF"/>
          <xs:enumeration value="FRIEND"/>
          <xs:enumeration value="CORPORATE"/>
          <xs:enumeration value="ONEMANCORPORATE"/>
          <xs:enumeration value="FAMILY"/>
          <xs:enumeration value="SENIOR"/>
          <xs:enumeration value="GUEST"/>
          <xs:enumeration value="CHILD"/>
          <xs:enumeration value="EXTERNAL_STAFF"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="personStatus">
        <xs:restriction base="xs:string">
          <xs:enumeration value="LEAD"/>
          <xs:enumeration value="ACTIVE"/>
          <xs:enumeration value="INACTIVE"/>
          <xs:enumeration value="TEMPORARYINACTIVE"/>
          <xs:enumeration value="TRANSFERRED"/>
          <xs:enumeration value="DUPLICATE"/>
          <xs:enumeration value="PROSPECT"/>
          <xs:enumeration value="CONTACT"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="quickChannel">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NONE"/>
          <xs:enumeration value="EMAIL"/>
          <xs:enumeration value="SMS"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="errorCode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UNKNOWN_ERROR"/>
          <xs:enumeration value="CREATE_EXCEPTION"/>
          <xs:enumeration value="REMOVE_EXCEPTION"/>
          <xs:enumeration value="SECURITY"/>
          <xs:enumeration value="SECURITY_ROLE"/>
          <xs:enumeration value="ARGUMENT_IS_NULL"/>
          <xs:enumeration value="ILLEGAL_ARGUMENT"/>
          <xs:enumeration value="PARSE_ERROR"/>
          <xs:enumeration value="ENTITY_NOT_FOUND"/>
          <xs:enumeration value="CONFLICTING_CHANGE"/>
          <xs:enumeration value="INVALID_ZIPCODE"/>
          <xs:enumeration value="INVALID_SOCIAL_SECURITY_NUMBER"/>
          <xs:enumeration value="INVALID_COMPANYID"/>
          <xs:enumeration value="INVALID_PHONE_NUMBER"/>
          <xs:enumeration value="CLIENT"/>
          <xs:enumeration value="ENTITY_IDENTIFIER_STATUS"/>
          <xs:enumeration value="DUPLICATE_PERSON"/>
          <xs:enumeration value="DUPLICATE_EXTERNAL_ID"/>
          <xs:enumeration value="FRIEND_RESTRICTION"/>
          <xs:enumeration value="EMPLOYEE_ALREADY_EXIST"/>
          <xs:enumeration value="DUPLICATE_COMPANY"/>
          <xs:enumeration value="EXPENSIVE_SEARCH"/>
          <xs:enumeration value="MULTIPLE_PERSONS_FOUND"/>
          <xs:enumeration value="NOT_DELIVERABLE"/>
          <xs:enumeration value="CIRCULAR_REFERENCE"/>
          <xs:enumeration value="REFERENCE"/>
          <xs:enumeration value="PERSON_NOT_EDITABLE"/>
          <xs:enumeration value="PERSON_TRANSFER"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_FOUND"/>
          <xs:enumeration value="ACCOUNT_RECEIVABLE_IS_BLOCKED"/>
          <xs:enumeration value="BANK_ACCOUNT_IS_BLOCKED"/>
          <xs:enumeration value="DEBIT_MAX"/>
          <xs:enumeration value="INVALID_PAYMENT_AGREEMENT"/>
          <xs:enumeration value="INVALID_BANK_INFO"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_CREDITOR_FOUND"/>
          <xs:enumeration value="PARTICIPATION_TIME_INTERVAL_OVERLAP"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLACKLISTED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLOCKED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="BOOKING_WAITING_LIST_FULL"/>
          <xs:enumeration value="BOOKING_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_RESTRICTION"/>
          <xs:enumeration value="OUTSIDE_BOOKING_WINDOW_EXCEPTION"/>
          <xs:enumeration value="CUSTOMER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="CENTER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_COLLECTION_NOT_PAID_FOR"/>
          <xs:enumeration value="NO_PRIVILEGE_FOR_PARTICIPATION"/>
          <xs:enumeration value="ALL_PARTICIPATIONS_TAKEN"/>
          <xs:enumeration value="SHOWUP_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_CANCELLATION"/>
          <xs:enumeration value="TOO_EARLY_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="TOO_EARLY_TO_SHOWUP"/>
          <xs:enumeration value="TOO_LATE_TO_SHOWUP"/>
          <xs:enumeration value="PARTICIPANT_TOO_MANY_OPEN_BOOKINGS"/>
          <xs:enumeration value="RESOURCE_OCCUPIED"/>
          <xs:enumeration value="RESOURCE_START_TIME_RESTRICTION"/>
          <xs:enumeration value="RESOURCE_TIME_RESTRICTION"/>
          <xs:enumeration value="ACTIVITY_STATE_INVALID"/>
          <xs:enumeration value="NO_PARENT_BOOKING_FOUND"/>
          <xs:enumeration value="STAFF_BLACKLISTED"/>
          <xs:enumeration value="STAFF_OCCUPIED"/>
          <xs:enumeration value="TOO_MANY_SUB_STAFF_USAGES"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_BOOKED"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_SHOWEDUP"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_BOOKING"/>
          <xs:enumeration value="LISTS_FULL"/>
          <xs:enumeration value="TOO_LATE_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="PARTICIPANT_OCCUPIED"/>
          <xs:enumeration value="FULL_BOOKING_RESTRICTION"/>
          <xs:enumeration value="IN_ADVANCE_LIMIT_BOOKING_RESTRICTION"/>
          <xs:enumeration value="PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="PARTICIPANT_BLACKLISTED"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BOOKING"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CENTER"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CUSTOMER"/>
          <xs:enumeration value="UNABLE_TO_REFRESH_WAITING_LIST"/>
          <xs:enumeration value="TOO_FEW_PARTICIPANTS"/>
          <xs:enumeration value="FREEZE_MAX_PREBOOK_PERIOD"/>
          <xs:enumeration value="FREEZE_MIN_OR_MAX_DURATION"/>
          <xs:enumeration value="FREEZE_TOO_LONG"/>
          <xs:enumeration value="FREEZE_TOO_SHORT"/>
          <xs:enumeration value="FREEZE_MAX_NUMBER_REACHED"/>
          <xs:enumeration value="TOO_MANY_FREEZES_PERIOD"/>
          <xs:enumeration value="TOO_MANY_FREEZES_TOTAL"/>
          <xs:enumeration value="FREEZE_MAX_TOTAL_DURATION_REACHED"/>
          <xs:enumeration value="FREEZE_NOT_ALLOWED"/>
          <xs:enumeration value="FREEZE_START_AND_STOP_DATE"/>
          <xs:enumeration value="FREEZE_START_IN_THE_PAST"/>
          <xs:enumeration value="FREEZE_END_BEFORE_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_AFTER_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_BEFORE_SUBSCRIPTION_START"/>
          <xs:enumeration value="FREEZE_OVERLAP"/>
          <xs:enumeration value="FREEZE_FUTURE_FREEZE"/>
          <xs:enumeration value="BOOKINGS_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="PARTICIPATION_ALREADY_CANCELLED"/>
          <xs:enumeration value="PARTICIPATION_CANCELLED"/>
          <xs:enumeration value="MINIMUM_AGE_EXCEPTION"/>
          <xs:enumeration value="TEMPLATE_NOT_DEFINED"/>
          <xs:enumeration value="INVALID_OTHER_PAYER_TYPE"/>
          <xs:enumeration value="DIFFERENT_COUNTRY_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_IS_NOT_STAFF"/>
          <xs:enumeration value="OTHER_PAYER_HAS_OTHER_PAYER"/>
          <xs:enumeration value="NO_VALID_ACCOUNT_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_STATUS_NOT_VALID_FOR_ATTEND"/>
          <xs:enumeration value="ATTENDING_PERSON_BLACKLISTED"/>
          <xs:enumeration value="MISSING_PRIVILEGE_FOR_ATTEND"/>
          <xs:enumeration value="ATTEND_NOT_POSSIBLE_AT_SPECIFIED_TIME"/>
          <xs:enumeration value="CLIPCARD_NOT_USABLE"/>
          <xs:enumeration value="TOO_MANY_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="NOT_ENOUGH_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="LOGIN_BLOCKED"/>
          <xs:enumeration value="PASSWORD_EXPIRED"/>
          <xs:enumeration value="PERSON_DELETED"/>
          <xs:enumeration value="PERSON_ANONYMIZED"/>
          <xs:enumeration value="INVALID_PICTURE"/>
          <xs:enumeration value="PERSON_NOT_FOUND_FOR_VENDING"/>
          <xs:enumeration value="TOO_MANY_MATCHES"/>
          <xs:enumeration value="PASSWORD_NOT_SET"/>
          <xs:enumeration value="PASSWORD_TOO_SHORT"/>
          <xs:enumeration value="CANNOT_PARTICIPATE_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="INVALID_STATUS"/>
          <xs:enumeration value="CONCURRENT_CALLS"/>
          <xs:enumeration value="CANNOT_UPDATE_COMPLETED_QUESTIONNAIRE"/>
          <xs:enumeration value="MISSING_ADMIN_FEE_PRODUCT"/>
          <xs:enumeration value="LOGIN_NOT_VALID"/>
          <xs:enumeration value="ACTIVE_TASKS_ALREADY_EXISTS_FOR_PERSON"/>
          <xs:enumeration value="TASK_TYPE_EXTERNAL_KEY_DOES_NOT_EXIST"/>
          <xs:enumeration value="SUBSCRIPTION_OF_SAME_TYPE"/>
          <xs:enumeration value="PERSON_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_KEY_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_BLOCKED"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_UNBLOCKED"/>
          <xs:enumeration value="INVALID_EMAIL"/>
          <xs:enumeration value="CENTER_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_TYPE_NOT_STRING"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_UPDATE_NOT_ALLOWED"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_VALUE_NOT_ALLOWED"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="CHILD_MUST_HAVE_AT_LEAST_ONE_PARENT"/>
          <xs:enumeration value="CHILD_HAS_TOO_MANY_PARENTS"/>
          <xs:enumeration value="PARENT_HAS_TOO_MANY_CHILDREN"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_ALREADY_EXISTS"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_DOES_NOT_EXIST"/>
          <xs:enumeration value="GUARDIAN_IS_TOO_YOUNG"/>
          <xs:enumeration value="CHILD_IS_TOO_OLD"/>
          <xs:enumeration value="AGE_NOT_SET"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_PERSON_MISMATCH"/>
          <xs:enumeration value="PAYMENT_CYCLE_TYPE_NOT_ALLOWED_EXCEPTION"/>
          <xs:enumeration value="SUBSCRIPTION_DOES_NOT_BELONG_TO_MEMBER"/>
          <xs:enumeration value="CANNOT_DELETE_SUBSCRIPTION"/>
          <xs:enumeration value="NO_PAYMENT_AGREEMENT_FOUND"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_VALID_FOR_SALES"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_ACTIVE"/>
          <xs:enumeration value="PAYMENT_CYCLE_NOT_ALLOWED"/>
          <xs:enumeration value="SUBSCRIPTION_SALE_OUTSIDE_HOME_CLUB_NOT_ALLOWED"/>
          <xs:enumeration value="BELOW_REQUIRED_AGE_FOR_EMAIL_CAPTURE"/>
          <xs:enumeration value="ROLE_NOT_FOUND"/>
          <xs:enumeration value="ACTION_NOT_ALLOWED"/>
          <xs:enumeration value="SCOPE_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_BLOCKED"/>
          <xs:enumeration value="ROLE_NOT_ASSIGNED"/>
          <xs:enumeration value="INVALID_EMPLOYEE_KEY"/>
          <xs:enumeration value="MISSING_PRIVILEGES"/>
          <xs:enumeration value="DATE_PARSE_ERROR"/>
          <xs:enumeration value="DATE_INVALID"/>
          <xs:enumeration value="CLIPCARD_NOT_ACTIVE"/>
          <xs:enumeration value="GROUP_ALREADY_EXIST"/>
          <xs:enumeration value="EMPLOYEE_AND_PERSON_KEY_SET"/>
          <xs:enumeration value="MULTIPLE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="MULTIPLE_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_ACTIVE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="errorDetailType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="MISSING_ACCESS_GROUP"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_DATE"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_TIME"/>
          <xs:enumeration value="MISSING_PRIVILEGES_COUNT"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="ALLOWED_BOOKING_WINDOW_TIMESLOT"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="journalNoteType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="SUBSCRIPTION_CONTRACT"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_CONTRACT"/>
          <xs:enumeration value="NOTE"/>
          <xs:enumeration value="SYSTEM"/>
          <xs:enumeration value="DOCTOR_NOTE"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="timeUnit">
        <xs:restriction base="xs:string">
          <xs:enumeration value="WEEK"/>
          <xs:enumeration value="DAY"/>
          <xs:enumeration value="MONTH"/>
          <xs:enumeration value="YEAR"/>
          <xs:enumeration value="HOUR"/>
          <xs:enumeration value="MINUTE"/>
          <xs:enumeration value="SECOND"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="subscriptionType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="CASH"/>
          <xs:enumeration value="EFT"/>
          <xs:enumeration value="RECURRING_CLIPCARD"/>
          <xs:enumeration value="PROSPECT"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="subscriptionState">
        <xs:restriction base="xs:string">
          <xs:enumeration value="ACTIVE"/>
          <xs:enumeration value="ENDED"/>
          <xs:enumeration value="FROZEN"/>
          <xs:enumeration value="WINDOW"/>
          <xs:enumeration value="CREATED"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="subscriptionSubState">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NONE"/>
          <xs:enumeration value="AWAITING_ACTIVATION"/>
          <xs:enumeration value="UPGRADED"/>
          <xs:enumeration value="DOWNGRADED"/>
          <xs:enumeration value="EXTENDED"/>
          <xs:enumeration value="TRANSFERRED"/>
          <xs:enumeration value="REGRETTED"/>
          <xs:enumeration value="CANCELLED"/>
          <xs:enumeration value="BLOCKED"/>
          <xs:enumeration value="CHANGED"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="sponsorshipType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NONE"/>
          <xs:enumeration value="FULL"/>
          <xs:enumeration value="FIXED"/>
          <xs:enumeration value="PERCENTAGE"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="companyAgreementStateType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UNDERTARGET"/>
          <xs:enumeration value="ACTIVE"/>
          <xs:enumeration value="STOPNEW"/>
          <xs:enumeration value="OLD"/>
          <xs:enumeration value="AWAITING_ACTIVATION"/>
          <xs:enumeration value="BLOCKED"/>
          <xs:enumeration value="DELETED"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="accessCardType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="BARCODE"/>
          <xs:enumeration value="MAGNETICCARD"/>
          <xs:enumeration value="RFCARD"/>
          <xs:enumeration value="PIN"/>
          <xs:enumeration value="ANTIDROWN"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="relationType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="MY_FRIEND"/>
          <xs:enumeration value="FRIENDS_OF_ME"/>
          <xs:enumeration value="MY_COMPANY"/>
          <xs:enumeration value="MY_COMPANY_AGREEMENT"/>
          <xs:enumeration value="MY_FAMILY"/>
          <xs:enumeration value="FAMILY_TO_ME"/>
          <xs:enumeration value="MY_COUNSELLOR"/>
          <xs:enumeration value="COUNSELLED_BY_ME"/>
          <xs:enumeration value="MY_PAYER"/>
          <xs:enumeration value="MY_REFERRER"/>
          <xs:enumeration value="REFERRED_BY_ME"/>
          <xs:enumeration value="MY_CHILD"/>
          <xs:enumeration value="MY_PARENT"/>
          <xs:enumeration value="MY_BUDDIES"/>
          <xs:enumeration value="PRIMARY_MEMBER"/>
          <xs:enumeration value="SECONDARY_MEMBER"/>
          <xs:enumeration value="CORPORATE_FAMILY"/>
          <xs:enumeration value="LINKED_CORPORATE_FAMILY"/>
          <xs:enumeration value="LINKED_CORPORATE_EMPLOYEE"/>
          <xs:enumeration value="OTHER"/>
          <xs:enumeration value="PAID_FOR_BY_ME"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="personBlacklistedStatus">
        <xs:restriction base="xs:string">
          <xs:enumeration value="None"/>
          <xs:enumeration value="Blacklisted"/>
          <xs:enumeration value="Suspended"/>
          <xs:enumeration value="Blocked"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="scopeType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Global"/>
          <xs:enumeration value="Tree"/>
          <xs:enumeration value="Area"/>
          <xs:enumeration value="Center"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType final="#all" name="personArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:person"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="journalNoteArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:journalNote"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="RelatedPersonArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:RelatedPerson"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="passportCountryArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:passportCountry"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </types>
  <message name="PersonAPI_getPersonDetailByLoginResponse">
    <part name="personDetail" type="tns:personDetail"/>
  </message>
  <message name="PersonAPI_getCommunicationDetailsResponse">
    <part name="return" type="tns:personCommunication"/>
  </message>
  <message name="PersonAPI_updateExtendedAttributeMIMEResponse"/>
  <message name="PersonAPI_getExtendedAttributeText">
    <part name="personKey" type="tns:apiPersonKey"/>
    <part name="attributeName" type="xsd:string"/>
  </message>
  <message name="PersonAPI_changePersonType">
    <part name="parameters" type="tns:changePersonTypeParameter"/>
  </message>
  <message name="PersonAPI_getJournalNotesResponse">
    <part name="return" type="tns:journalNoteArray"/>
  </message>
  <message name="PersonAPI_getPersonRelationsResponse">
    <part name="return" type="tns:RelatedPersonArray"/>
  </message>
  <message name="PersonAPI_deleteExtendedAttributeResponse">
    <part name="return" type="xsd:boolean"/>
  </message>
  <message name="PersonAPI_validatePhoneNumberResponse"/>
  <message name="PersonAPI_deleteExtendedAttribute">
    <part name="personKey" type="tns:apiPersonKey"/>
    <part name="attributeName" type="xsd:string"/>
  </message>
  <message name="PersonAPI_createJournalNote">
    <part name="personKey" type="tns:apiPersonKey"/>
    <part name="journalNote" type="tns:journalNote"/>
  </message>
  <message name="PersonAPI_getExtendedAttributeTextResponse">
    <part name="return" type="xsd:string"/>
  </message>
  <message name="PersonAPI_getPassportCountries"/>
  <message name="PersonAPI_createJournalNoteResponse"/>
  <message name="PersonAPI_getCitiesForZipcodeResponse">
    <part name="return" type="ns1:stringArray"/>
  </message>
  <message name="PersonAPI_getJournalNotes">
    <part name="parameters" type="tns:journalNoteParameters"/>
  </message>
  <message name="PersonAPI_getExtendedAttributeMIMEResponse">
    <part name="return" type="tns:mimeDocument"/>
  </message>
  <message name="PersonAPI_validatePerson">
    <part name="centerId" type="xsd:int"/>
    <part name="person" type="tns:person"/>
  </message>
  <message name="PersonAPI_changeSuspensionStatusResponse"/>
  <message name="PersonAPI_sendPassword">
    <part name="personKey" type="tns:apiPersonKey"/>
  </message>
  <message name="PersonAPI_validatePhoneNumber">
    <part name="countryId" type="xsd:string"/>
    <part name="phoneNumber" type="xsd:string"/>
  </message>
  <message name="PersonAPI_removePersonReferrerResponse"/>
  <message name="PersonAPI_findPersons">
    <part name="parameters" type="tns:findPerson"/>
  </message>
  <message name="PersonAPI_getPassportCountriesResponse">
    <part name="return" type="tns:passportCountryArray"/>
  </message>
  <message name="PersonAPI_getJournalNoteDocumentResponse">
    <part name="return" type="tns:journalNoteDocument"/>
  </message>
  <message name="PersonAPI_getCurrentPersonIdResponse">
    <part name="return" type="tns:apiPersonKey"/>
  </message>
  <message name="PersonAPI_setPersonReferrerResponse"/>
  <message name="PersonAPI_setPersonReferrer">
    <part name="personKey" type="tns:apiPersonKey"/>
    <part name="referrerKey" type="tns:apiPersonKey"/>
  </message>
  <message name="PersonAPI_getCitiesForZipcode">
    <part name="countryId" type="xsd:string"/>
    <part name="zipCode" type="xsd:string"/>
  </message>
  <message name="PersonAPI_changePasswordWithTokenResponse"/>
  <message name="PersonAPI_getDetailsResponse">
    <part name="return" type="tns:person"/>
  </message>
  <message name="PersonAPI_getScope">
    <part name="scopeType" type="tns:scopeType"/>
    <part name="scopeId" type="xsd:int"/>
  </message>
  <message name="PersonAPI_changeSuspensionStatus">
    <part name="parameters" type="tns:changeSuspensionStatusParameters"/>
  </message>
  <message name="PersonAPI_updateDetailsResponse">
    <part name="return" type="tns:person"/>
  </message>
  <message name="PersonAPI_createDoctorNote">
    <part name="personKey" type="tns:apiPersonKey"/>
    <part name="journalNote" type="tns:journalNote"/>
  </message>
  <message name="PersonAPI_updateExtendedAttributeText">
    <part name="personKey" type="tns:apiPersonKey"/>
    <part name="attributeName" type="xsd:string"/>
    <part name="value" type="xsd:string"/>
  </message>
  <message name="PersonAPI_getExtendedAttributeMIME">
    <part name="personKey" type="tns:apiPersonKey"/>
    <part name="attributeName" type="xsd:string"/>
  </message>
  <message name="PersonAPI_getTypeAndStatusResponse">
    <part name="return" type="tns:personTypeAndStatus"/>
  </message>
  <message name="PersonAPI_createDoctorNoteResponse"/>
  <message name="PersonAPI_findPersonsResponse">
    <part name="return" type="tns:personArray"/>
  </message>
  <message name="PersonAPI_validatePersonResponse">
    <part name="return" type="tns:validationResult"/>
  </message>
  <message name="PersonAPI_createToDoResponse">
    <part name="return" type="tns:toDo"/>
  </message>
  <message name="PersonAPI_createPersonResponse">
    <part name="return" type="tns:createPersonDetails"/>
  </message>
  <message name="PersonAPI_getDetails">
    <part name="personKey" type="tns:apiPersonKey"/>
  </message>
  <message name="PersonAPI_getCurrentPersonId">
    <part name="personKey" type="tns:apiPersonKey"/>
  </message>
  <message name="PersonAPI_createPerson">
    <part name="centerId" type="xsd:int"/>
    <part name="fullPersonCommunication" type="tns:createPersonDetails"/>
  </message>
  <message name="PersonAPI_overridePartnerBenefitActivationAuthorizationCode">
    <part name="parameters" type="tns:overridePartnerBenefitActivationAuthorizationCodeParameters"/>
  </message>
  <message name="PersonAPI_createToDo">
    <part name="parameters" type="tns:createToDoParameter"/>
  </message>
  <message name="PersonAPI_getJournalNoteDocument">
    <part name="journalNoteId" type="xsd:int"/>
  </message>
  <message name="TransferException">
    <part element="tns:TransferException" name="TransferException"/>
  </message>
  <message name="PersonAPI_updateExtendedAttributeTextResponse"/>
  <message name="PersonAPI_getPersonDetailByLogin">
    <part name="email" type="xsd:string"/>
    <part name="password" type="xsd:string"/>
  </message>
  <message name="PersonAPI_updateCommunicationDetailsResponse"/>
  <message name="PersonAPI_transferPersonResponse">
    <part name="return" type="tns:transferPersonInfo"/>
  </message>
  <message name="PersonAPI_removePersonReferrer">
    <part name="personKey" type="tns:apiPersonKey"/>
  </message>
  <message name="PersonAPI_changePasswordWithToken">
    <part name="personKey" type="tns:apiPersonKey"/>
    <part name="newPassword" type="xsd:string"/>
    <part name="token" type="xsd:string"/>
  </message>
  <message name="PersonAPI_getPersonDetail">
    <part name="personKey" type="tns:apiPersonKey"/>
  </message>
  <message name="PersonAPI_updateCommunicationDetails">
    <part name="personCommunication" type="tns:personCommunication"/>
  </message>
  <message name="PersonAPI_overridePartnerBenefitActivationAuthorizationCodeResponse"/>
  <message name="PersonAPI_changePersonTypeResponse"/>
  <message name="PersonAPI_sendPasswordTokenResponse"/>
  <message name="PersonAPI_updateExtendedAttributeMIME">
    <part name="personKey" type="tns:apiPersonKey"/>
    <part name="attributeName" type="xsd:string"/>
    <part name="value" type="tns:mimeDocument"/>
  </message>
  <message name="PersonAPI_transferPerson">
    <part name="parameters" type="tns:transferPersonParameters"/>
  </message>
  <message name="PersonAPI_getPersonDetailResponse">
    <part name="return" type="tns:personDetail"/>
  </message>
  <message name="PersonAPI_getCommunicationDetails">
    <part name="personKey" type="tns:apiPersonKey"/>
  </message>
  <message name="PersonAPI_getTypeAndStatus">
    <part name="personKey" type="tns:apiPersonKey"/>
  </message>
  <message name="PersonAPI_sendPasswordResponse"/>
  <message name="PersonAPI_getPersonRelations">
    <part name="personRelation" type="tns:personRelationParameters"/>
  </message>
  <message name="PersonAPI_updateDetails">
    <part name="person" type="tns:person"/>
  </message>
  <message name="PersonAPI_sendPasswordToken">
    <part name="personKey" type="tns:apiPersonKey"/>
  </message>
  <message name="APIException">
    <part element="tns:APIException" name="APIException"/>
  </message>
  <message name="PersonAPI_getScopeResponse">
    <part name="return" type="tns:scope"/>
  </message>
  <portType name="PersonAPI">
    <operation name="changePasswordWithToken" parameterOrder="personKey newPassword token">
      <input message="tns:PersonAPI_changePasswordWithToken"/>
      <output message="tns:PersonAPI_changePasswordWithTokenResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="changePersonType" parameterOrder="parameters">
      <input message="tns:PersonAPI_changePersonType"/>
      <output message="tns:PersonAPI_changePersonTypeResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="changeSuspensionStatus" parameterOrder="parameters">
      <input message="tns:PersonAPI_changeSuspensionStatus"/>
      <output message="tns:PersonAPI_changeSuspensionStatusResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="createDoctorNote" parameterOrder="personKey journalNote">
      <input message="tns:PersonAPI_createDoctorNote"/>
      <output message="tns:PersonAPI_createDoctorNoteResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="createJournalNote" parameterOrder="personKey journalNote">
      <input message="tns:PersonAPI_createJournalNote"/>
      <output message="tns:PersonAPI_createJournalNoteResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="createPerson" parameterOrder="centerId fullPersonCommunication">
      <input message="tns:PersonAPI_createPerson"/>
      <output message="tns:PersonAPI_createPersonResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="createToDo" parameterOrder="parameters">
      <input message="tns:PersonAPI_createToDo"/>
      <output message="tns:PersonAPI_createToDoResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="deleteExtendedAttribute" parameterOrder="personKey attributeName">
      <input message="tns:PersonAPI_deleteExtendedAttribute"/>
      <output message="tns:PersonAPI_deleteExtendedAttributeResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="findPersons" parameterOrder="parameters">
      <input message="tns:PersonAPI_findPersons"/>
      <output message="tns:PersonAPI_findPersonsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getCitiesForZipcode" parameterOrder="countryId zipCode">
      <input message="tns:PersonAPI_getCitiesForZipcode"/>
      <output message="tns:PersonAPI_getCitiesForZipcodeResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getCommunicationDetails" parameterOrder="personKey">
      <input message="tns:PersonAPI_getCommunicationDetails"/>
      <output message="tns:PersonAPI_getCommunicationDetailsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getCurrentPersonId" parameterOrder="personKey">
      <input message="tns:PersonAPI_getCurrentPersonId"/>
      <output message="tns:PersonAPI_getCurrentPersonIdResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getDetails" parameterOrder="personKey">
      <input message="tns:PersonAPI_getDetails"/>
      <output message="tns:PersonAPI_getDetailsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getExtendedAttributeMIME" parameterOrder="personKey attributeName">
      <input message="tns:PersonAPI_getExtendedAttributeMIME"/>
      <output message="tns:PersonAPI_getExtendedAttributeMIMEResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getExtendedAttributeText" parameterOrder="personKey attributeName">
      <input message="tns:PersonAPI_getExtendedAttributeText"/>
      <output message="tns:PersonAPI_getExtendedAttributeTextResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getJournalNoteDocument" parameterOrder="journalNoteId">
      <input message="tns:PersonAPI_getJournalNoteDocument"/>
      <output message="tns:PersonAPI_getJournalNoteDocumentResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getJournalNotes" parameterOrder="parameters">
      <input message="tns:PersonAPI_getJournalNotes"/>
      <output message="tns:PersonAPI_getJournalNotesResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getPassportCountries">
      <input message="tns:PersonAPI_getPassportCountries"/>
      <output message="tns:PersonAPI_getPassportCountriesResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getPersonDetail" parameterOrder="personKey">
      <input message="tns:PersonAPI_getPersonDetail"/>
      <output message="tns:PersonAPI_getPersonDetailResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getPersonDetailByLogin" parameterOrder="email password">
      <input message="tns:PersonAPI_getPersonDetailByLogin"/>
      <output message="tns:PersonAPI_getPersonDetailByLoginResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getPersonRelations" parameterOrder="personRelation">
      <input message="tns:PersonAPI_getPersonRelations"/>
      <output message="tns:PersonAPI_getPersonRelationsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getScope" parameterOrder="scopeType scopeId">
      <input message="tns:PersonAPI_getScope"/>
      <output message="tns:PersonAPI_getScopeResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getTypeAndStatus" parameterOrder="personKey">
      <input message="tns:PersonAPI_getTypeAndStatus"/>
      <output message="tns:PersonAPI_getTypeAndStatusResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="overridePartnerBenefitActivationAuthorizationCode" parameterOrder="parameters">
      <input message="tns:PersonAPI_overridePartnerBenefitActivationAuthorizationCode"/>
      <output message="tns:PersonAPI_overridePartnerBenefitActivationAuthorizationCodeResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="removePersonReferrer" parameterOrder="personKey">
      <input message="tns:PersonAPI_removePersonReferrer"/>
      <output message="tns:PersonAPI_removePersonReferrerResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="sendPassword" parameterOrder="personKey">
      <input message="tns:PersonAPI_sendPassword"/>
      <output message="tns:PersonAPI_sendPasswordResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="sendPasswordToken" parameterOrder="personKey">
      <input message="tns:PersonAPI_sendPasswordToken"/>
      <output message="tns:PersonAPI_sendPasswordTokenResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="setPersonReferrer" parameterOrder="personKey referrerKey">
      <input message="tns:PersonAPI_setPersonReferrer"/>
      <output message="tns:PersonAPI_setPersonReferrerResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="transferPerson" parameterOrder="parameters">
      <input message="tns:PersonAPI_transferPerson"/>
      <output message="tns:PersonAPI_transferPersonResponse"/>
      <fault message="tns:TransferException" name="TransferException"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="updateCommunicationDetails" parameterOrder="personCommunication">
      <input message="tns:PersonAPI_updateCommunicationDetails"/>
      <output message="tns:PersonAPI_updateCommunicationDetailsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="updateDetails" parameterOrder="person">
      <input message="tns:PersonAPI_updateDetails"/>
      <output message="tns:PersonAPI_updateDetailsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="updateExtendedAttributeMIME" parameterOrder="personKey attributeName value">
      <input message="tns:PersonAPI_updateExtendedAttributeMIME"/>
      <output message="tns:PersonAPI_updateExtendedAttributeMIMEResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="updateExtendedAttributeText" parameterOrder="personKey attributeName value">
      <input message="tns:PersonAPI_updateExtendedAttributeText"/>
      <output message="tns:PersonAPI_updateExtendedAttributeTextResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="validatePerson" parameterOrder="centerId person">
      <input message="tns:PersonAPI_validatePerson"/>
      <output message="tns:PersonAPI_validatePersonResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="validatePhoneNumber" parameterOrder="countryId phoneNumber">
      <input message="tns:PersonAPI_validatePhoneNumber"/>
      <output message="tns:PersonAPI_validatePhoneNumberResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
  </portType>
  <binding name="PersonAPIBinding" type="tns:PersonAPI">
    <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="changePasswordWithToken">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="changePersonType">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="changeSuspensionStatus">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="createDoctorNote">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="createJournalNote">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="createPerson">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="createToDo">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="deleteExtendedAttribute">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="findPersons">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getCitiesForZipcode">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getCommunicationDetails">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getCurrentPersonId">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getDetails">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getExtendedAttributeMIME">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getExtendedAttributeText">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getJournalNoteDocument">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getJournalNotes">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getPassportCountries">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getPersonDetail">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getPersonDetailByLogin">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getPersonRelations">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getScope">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getTypeAndStatus">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="overridePartnerBenefitActivationAuthorizationCode">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="removePersonReferrer">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="sendPassword">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="sendPasswordToken">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="setPersonReferrer">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="transferPerson">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="TransferException">
        <soap:fault name="TransferException" use="literal"/>
      </fault>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="updateCommunicationDetails">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="updateDetails">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="updateExtendedAttributeMIME">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="updateExtendedAttributeText">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="validatePerson">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="validatePhoneNumber">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
  </binding>
  <service name="PersonAPIService">
    <port binding="tns:PersonAPIBinding" name="PersonAPIPort">
      <soap:address location="https://lite-test.exerp.com/api/v5/PersonAPI"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://lite-test.exerp.com/api/v5/PersonAPI</con:endpoint></con:endpoints><con:operation id="09c25f0c-27e4-4d02-afc9-7ccc76e80f84" isOneWay="false" action="" name="changePasswordWithToken" bindingOperationName="changePasswordWithToken" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e49e4214-adbf-4a83-b158-d775a5f4aa33" isOneWay="false" action="" name="changePersonType" bindingOperationName="changePersonType" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="64517844-b77e-467a-8d19-4e3a5f4e7f00" isOneWay="false" action="" name="changeSuspensionStatus" bindingOperationName="changeSuspensionStatus" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a0519e2d-e666-4cc5-8c3a-95ea595e4c1d" isOneWay="false" action="" name="createDoctorNote" bindingOperationName="createDoctorNote" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6624b73a-c646-4141-83f8-e3438d869125" isOneWay="false" action="" name="createJournalNote" bindingOperationName="createJournalNote" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="df99501e-bd5e-43c0-b190-198c589b8268" isOneWay="false" action="" name="createPerson" bindingOperationName="createPerson" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="89d0f1b5-6aad-4c41-8a28-2db964f502d7" name="createPerson"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://skilld.exerp.qa/api/v5/PersonAPI</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:createPerson>
         <centerId>1400</centerId>
         <fullPersonCommunication>
            <!--Optional:-->
            <person>
               <!--Optional:-->
               <address>
                  <address1>5 rue louvre</address1>
                  <country>DK</country>
                  <zip>1000</zip>
               </address>
               <!--Optional:-->
               <birthday>1992-03-22</birthday>
               <!--Optional:-->
               <firstName>Yury</firstName>
               <!--Optional:-->
               <lastName>Shupenko</lastName>
               <gender>MALE</gender>
               <!--Optional:-->
               <personType>PRIVATE</personType>
            </person>
            <!--Optional:-->
            <personCommunication>
               <!--Optional:-->
               <email>yurytestexerp@yopmail.com</email>
            </personCommunication>
            <!--Optional:-->
            <password>exerp+2019</password>
         </fullPersonCommunication>
      </v5:createPerson>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>100emp1</con:username><con:password>vombat</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/PersonAPI/createPersonRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="c06f6878-31bd-4b21-a277-d541dce1ab88" isOneWay="false" action="" name="createToDo" bindingOperationName="createToDo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7ced694b-96dc-4109-b5dc-425ec62568f5" isOneWay="false" action="" name="deleteExtendedAttribute" bindingOperationName="deleteExtendedAttribute" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c3c6156f-cddd-47ff-bf00-c0911e292534" isOneWay="false" action="" name="findPersons" bindingOperationName="findPersons" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2594f22c-a80d-4e14-aa1c-a8f9e47543ae" isOneWay="false" action="" name="getCitiesForZipcode" bindingOperationName="getCitiesForZipcode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3046628c-f53f-4a0f-a0e1-a98506256e00" name="getCitiesForZipcode"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://skilld.exerp.qa/api/v5/PersonAPI?wsdl</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:getCitiesForZipcode>
         <countryId>DK</countryId>
         <zipCode>2200</zipCode>
      </v5:getCitiesForZipcode>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>100emp1</con:username><con:password>vombat</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/PersonAPI/getCitiesForZipcodeRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="4d9d3404-ef9b-4dfa-b986-942e7ab3fa5a" isOneWay="false" action="" name="getCommunicationDetails" bindingOperationName="getCommunicationDetails" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="96bd8745-0b21-4d3f-b737-15bbd8ee9c0a" isOneWay="false" action="" name="getCurrentPersonId" bindingOperationName="getCurrentPersonId" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="98b1e845-f496-4df6-9f2d-e7aaa7c3aaad" isOneWay="false" action="" name="getDetails" bindingOperationName="getDetails" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bca2a801-67c4-4666-a33d-82e7000572dc" isOneWay="false" action="" name="getExtendedAttributeMIME" bindingOperationName="getExtendedAttributeMIME" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a236a31f-1d58-47d9-8edc-5feba9b1d0b3" isOneWay="false" action="" name="getExtendedAttributeText" bindingOperationName="getExtendedAttributeText" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="04b1c060-a0c2-4175-ba27-119a078efc93" isOneWay="false" action="" name="getJournalNoteDocument" bindingOperationName="getJournalNoteDocument" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2fd67f9b-7b95-442b-b8b8-a731842f01e1" isOneWay="false" action="" name="getJournalNotes" bindingOperationName="getJournalNotes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="eccbe442-21dc-464d-a01f-243b750b21db" isOneWay="false" action="" name="getPassportCountries" bindingOperationName="getPassportCountries" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d7b48d2f-855d-483b-aa89-a8ce710522f6" isOneWay="false" action="" name="getPersonDetail" bindingOperationName="getPersonDetail" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e8cdf20b-cb3f-4fe1-a938-41eb3b28e7ff" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://skilld.exerp.qa/api/v5/PersonAPI</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:getPersonDetail>
         <personKey>
            <center>131</center>
            <id>3</id>
         </personKey>
      </v5:getPersonDetail>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>100emp2401</con:username><con:password>b8n1OfNkej</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/PersonAPI/getPersonDetailRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="7fffe57e-6683-4773-a9e3-2967c0fddc50" isOneWay="false" action="" name="getPersonDetailByLogin" bindingOperationName="getPersonDetailByLogin" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="34df5de2-1c0e-4289-8044-d946c9ae8ad1" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://skilld.exerp.qa/api/v5/PersonAPI</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:getPersonDetailByLogin>
         <email>kjhgfdsasdfgh@werdftgyu.uygfd</email>
         <password>ok</password>
      </v5:getPersonDetailByLogin>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>100emp2401</con:username><con:password>b8n1OfNkej</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/PersonAPI/getPersonDetailByLoginRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="44bc33ba-e4ac-46ca-8ace-50dea9249936" isOneWay="false" action="" name="getPersonRelations" bindingOperationName="getPersonRelations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2964bb63-774f-4f7a-b272-244f4f37d9de" isOneWay="false" action="" name="getScope" bindingOperationName="getScope" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="04e5296c-bcaf-4939-a74b-bd4c8bcbb87c" name="getScope"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://lite-test.exerp.com/api/v5/PersonAPI</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:getScope>
         <scopeType>?</scopeType>
         <scopeId>?</scopeId>
      </v5:getScope>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/PersonAPI/getScopeRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="7fd9a059-2c75-4d34-b35f-56c39ed19cb3" isOneWay="false" action="" name="getTypeAndStatus" bindingOperationName="getTypeAndStatus" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="dc394e71-55b6-470e-8a03-738149b1ef59" isOneWay="false" action="" name="overridePartnerBenefitActivationAuthorizationCode" bindingOperationName="overridePartnerBenefitActivationAuthorizationCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="422b3b2d-3e84-40e4-9555-305e21366233" isOneWay="false" action="" name="removePersonReferrer" bindingOperationName="removePersonReferrer" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c81eddd6-7c8e-4eec-acec-9296f3cac0ac" isOneWay="false" action="" name="sendPassword" bindingOperationName="sendPassword" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5371bb60-9493-4f2e-8fa4-7945d90d6061" name="sendPassword"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://skilld.exerp.qa/api/v5/PersonAPI</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:sendPassword>
         <personKey>
            <center>1</center>
            <id>100</id>
            <!--Optional:-->
            <externalId>?</externalId>
         </personKey>
      </v5:sendPassword>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/PersonAPI/sendPasswordRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="cca1d0cf-f9c3-4573-beaa-9a6cf9cffd1b" isOneWay="false" action="" name="sendPasswordToken" bindingOperationName="sendPasswordToken" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1e79af56-22de-4a7a-985c-418d2c2eb451" isOneWay="false" action="" name="setPersonReferrer" bindingOperationName="setPersonReferrer" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d53ac09e-59c4-4814-a632-955d3e4e6c25" isOneWay="false" action="" name="transferPerson" bindingOperationName="transferPerson" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fff9ec3e-256d-44af-b3dd-0057e5d5d9a5" isOneWay="false" action="" name="updateCommunicationDetails" bindingOperationName="updateCommunicationDetails" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3d9943c2-1713-46f9-b57c-e63c1422b900" isOneWay="false" action="" name="updateDetails" bindingOperationName="updateDetails" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="15721444-8a7d-4845-bbfc-87f26d7fd55f" isOneWay="false" action="" name="updateExtendedAttributeMIME" bindingOperationName="updateExtendedAttributeMIME" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9aa02a58-2f3e-457d-8df6-0b542d2d71ab" isOneWay="false" action="" name="updateExtendedAttributeText" bindingOperationName="updateExtendedAttributeText" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5d52bb7e-d7f6-4e32-9cd5-b43d9c2c573a" isOneWay="false" action="" name="validatePerson" bindingOperationName="validatePerson" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="dc62f853-d3d8-4cb1-bd9a-bc7a634bce92" name="validatePerson"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://skilld.exerp.qa/api/v5/PersonAPI</con:endpoint><con:request/><con:credentials><con:username>100emp1</con:username><con:password>vombat</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/PersonAPI/validatePersonRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="3240b47b-dc58-462c-81b6-de06671a00c5" isOneWay="false" action="" name="validatePhoneNumber" bindingOperationName="validatePhoneNumber" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="df095dbb-a8aa-4d64-a636-859f540d19db" wsaVersion="NONE" name="ProductAPIBinding" type="wsdl" bindingName="{http://v5.api.eclub.procard.dk/}ProductAPIBinding" soapVersion="1_1" anonymous="optional" definition="https://lite-test.exerp.com/api/v5/ProductAPI?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://lite-test.exerp.com/api/v5/ProductAPI?wsdl"><con:part><con:url>https://lite-test.exerp.com/api/v5/ProductAPI?wsdl</con:url><con:content><![CDATA[<definitions name="ProductAPIService" targetNamespace="http://v5.api.eclub.procard.dk/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://v5.api.eclub.procard.dk/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <types>
    <xs:schema targetNamespace="http://v5.api.eclub.procard.dk/" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="APIException" type="tns:APIException"/>
      <xs:complexType name="apiPersonKey">
        <xs:complexContent>
          <xs:extension base="tns:compositeKey">
            <xs:sequence>
              <xs:element minOccurs="0" name="externalId" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="compositeKey">
        <xs:sequence>
          <xs:element name="center" type="xs:int"/>
          <xs:element name="id" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="productSale">
        <xs:sequence>
          <xs:element minOccurs="0" name="price" type="xs:string"/>
          <xs:element name="productId" type="tns:compositeKey"/>
          <xs:element name="quantity" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="paymentInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="amountPaidByCustomer" type="xs:string"/>
          <xs:element minOccurs="0" name="creditCardPaymentInfo" type="tns:creditCardPaymentInfo"/>
          <xs:element minOccurs="0" name="creditCardTransactionRef" type="xs:string"/>
          <xs:element minOccurs="0" name="installmentPlanConfigExternalId" type="xs:string"/>
          <xs:element minOccurs="0" name="paymentAgreementKeyForCollection" type="tns:compositeSubKey"/>
          <xs:element name="paymentMethod" type="tns:paymentMethod"/>
          <xs:element minOccurs="0" name="shoppingBasketCenter" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="creditCardPaymentInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="cardDetailsEncrypted" type="xs:string"/>
          <xs:element name="createAgreement" type="xs:boolean"/>
          <xs:element minOccurs="0" name="replacePaymentAgreementKey" type="tns:compositeSubKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="compositeSubKey">
        <xs:complexContent>
          <xs:extension base="tns:compositeKey">
            <xs:sequence>
              <xs:element name="subId" type="xs:int"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="APIException">
        <xs:sequence>
          <xs:element minOccurs="0" name="errorCode" type="tns:errorCode"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="errorDetail" type="tns:errorDetail"/>
          <xs:element minOccurs="0" name="errorMessage" type="xs:string"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="errorDetail">
        <xs:sequence>
          <xs:element minOccurs="0" name="info" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:errorDetailType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="productGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="color" type="xs:string"/>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element minOccurs="0" name="externalId" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element name="primary" type="xs:boolean"/>
          <xs:element name="productGroupKey" type="xs:int"/>
          <xs:element minOccurs="0" name="rank" type="xs:int"/>
          <xs:element minOccurs="0" name="showInShop" type="xs:boolean"/>
          <xs:element minOccurs="0" name="showInSubscriptionSales" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="invoice">
        <xs:sequence>
          <xs:element minOccurs="0" name="employeeKey" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="payerKey" type="tns:apiPersonKey"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="invoiceLines" nillable="true" type="tns:invoiceLine"/>
          <xs:element minOccurs="0" name="invoiceText" type="xs:string"/>
          <xs:element minOccurs="0" name="totalAmount" type="xs:string"/>
          <xs:element minOccurs="0" name="totalVAT" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="vatInfos" nillable="true" type="tns:vatInfo"/>
          <xs:element minOccurs="0" name="salesTaxes">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="salesTax" type="tns:salesTax"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="invoiceLine">
        <xs:sequence>
          <xs:element minOccurs="0" name="amount" type="xs:string"/>
          <xs:element minOccurs="0" name="productKey" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="purchaserKey" type="tns:apiPersonKey"/>
          <xs:element name="quantity" type="xs:int"/>
          <xs:element minOccurs="0" name="text" type="xs:string"/>
          <xs:element minOccurs="0" name="vatInfo" type="tns:vatInfo"/>
          <xs:element minOccurs="0" name="salesTaxes">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="salesTax" type="tns:salesTax"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="vatInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="amount" type="xs:string"/>
          <xs:element minOccurs="0" name="rate" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="salesTax">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="amount" type="xs:string"/>
          <xs:element minOccurs="0" name="rate" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="installmentPlanConfig">
        <xs:sequence>
          <xs:element minOccurs="0" name="adminFee" type="xs:decimal"/>
          <xs:element minOccurs="0" name="amountPerInstallment" type="xs:decimal"/>
          <xs:element minOccurs="0" name="externalId" type="xs:string"/>
          <xs:element minOccurs="0" name="firstInstallmentPaidInPOS" type="xs:boolean"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="numberOfInstallments" type="xs:int"/>
          <xs:element minOccurs="0" name="type" type="tns:installmentPlanConfigType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="product">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="barcodes" nillable="true" type="tns:barcode"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="price" type="xs:string"/>
          <xs:element minOccurs="0" name="productGroups">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="productGroup" type="tns:productGroup"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="productId" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="ref" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:productType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="barcode">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="rebatedPrice">
        <xs:sequence>
          <xs:element minOccurs="0" name="productId" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="rebatedPrice" type="xs:string"/>
          <xs:element minOccurs="0" name="sponsoredAmount" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="paymentMethod">
        <xs:restriction base="xs:string">
          <xs:enumeration value="CASH_ACCOUNT"/>
          <xs:enumeration value="PAYMENT_ACCOUNT"/>
          <xs:enumeration value="SHOPPING_BASKET"/>
          <xs:enumeration value="INSTALLMENT_PLAN"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="errorCode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UNKNOWN_ERROR"/>
          <xs:enumeration value="CREATE_EXCEPTION"/>
          <xs:enumeration value="REMOVE_EXCEPTION"/>
          <xs:enumeration value="SECURITY"/>
          <xs:enumeration value="SECURITY_ROLE"/>
          <xs:enumeration value="ARGUMENT_IS_NULL"/>
          <xs:enumeration value="ILLEGAL_ARGUMENT"/>
          <xs:enumeration value="PARSE_ERROR"/>
          <xs:enumeration value="ENTITY_NOT_FOUND"/>
          <xs:enumeration value="CONFLICTING_CHANGE"/>
          <xs:enumeration value="INVALID_ZIPCODE"/>
          <xs:enumeration value="INVALID_SOCIAL_SECURITY_NUMBER"/>
          <xs:enumeration value="INVALID_COMPANYID"/>
          <xs:enumeration value="INVALID_PHONE_NUMBER"/>
          <xs:enumeration value="CLIENT"/>
          <xs:enumeration value="ENTITY_IDENTIFIER_STATUS"/>
          <xs:enumeration value="DUPLICATE_PERSON"/>
          <xs:enumeration value="DUPLICATE_EXTERNAL_ID"/>
          <xs:enumeration value="FRIEND_RESTRICTION"/>
          <xs:enumeration value="EMPLOYEE_ALREADY_EXIST"/>
          <xs:enumeration value="DUPLICATE_COMPANY"/>
          <xs:enumeration value="EXPENSIVE_SEARCH"/>
          <xs:enumeration value="MULTIPLE_PERSONS_FOUND"/>
          <xs:enumeration value="NOT_DELIVERABLE"/>
          <xs:enumeration value="CIRCULAR_REFERENCE"/>
          <xs:enumeration value="REFERENCE"/>
          <xs:enumeration value="PERSON_NOT_EDITABLE"/>
          <xs:enumeration value="PERSON_TRANSFER"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_FOUND"/>
          <xs:enumeration value="ACCOUNT_RECEIVABLE_IS_BLOCKED"/>
          <xs:enumeration value="BANK_ACCOUNT_IS_BLOCKED"/>
          <xs:enumeration value="DEBIT_MAX"/>
          <xs:enumeration value="INVALID_PAYMENT_AGREEMENT"/>
          <xs:enumeration value="INVALID_BANK_INFO"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_CREDITOR_FOUND"/>
          <xs:enumeration value="PARTICIPATION_TIME_INTERVAL_OVERLAP"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLACKLISTED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLOCKED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="BOOKING_WAITING_LIST_FULL"/>
          <xs:enumeration value="BOOKING_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_RESTRICTION"/>
          <xs:enumeration value="OUTSIDE_BOOKING_WINDOW_EXCEPTION"/>
          <xs:enumeration value="CUSTOMER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="CENTER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_COLLECTION_NOT_PAID_FOR"/>
          <xs:enumeration value="NO_PRIVILEGE_FOR_PARTICIPATION"/>
          <xs:enumeration value="ALL_PARTICIPATIONS_TAKEN"/>
          <xs:enumeration value="SHOWUP_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_CANCELLATION"/>
          <xs:enumeration value="TOO_EARLY_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="TOO_EARLY_TO_SHOWUP"/>
          <xs:enumeration value="TOO_LATE_TO_SHOWUP"/>
          <xs:enumeration value="PARTICIPANT_TOO_MANY_OPEN_BOOKINGS"/>
          <xs:enumeration value="RESOURCE_OCCUPIED"/>
          <xs:enumeration value="RESOURCE_START_TIME_RESTRICTION"/>
          <xs:enumeration value="RESOURCE_TIME_RESTRICTION"/>
          <xs:enumeration value="ACTIVITY_STATE_INVALID"/>
          <xs:enumeration value="NO_PARENT_BOOKING_FOUND"/>
          <xs:enumeration value="STAFF_BLACKLISTED"/>
          <xs:enumeration value="STAFF_OCCUPIED"/>
          <xs:enumeration value="TOO_MANY_SUB_STAFF_USAGES"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_BOOKED"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_SHOWEDUP"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_BOOKING"/>
          <xs:enumeration value="LISTS_FULL"/>
          <xs:enumeration value="TOO_LATE_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="PARTICIPANT_OCCUPIED"/>
          <xs:enumeration value="FULL_BOOKING_RESTRICTION"/>
          <xs:enumeration value="IN_ADVANCE_LIMIT_BOOKING_RESTRICTION"/>
          <xs:enumeration value="PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="PARTICIPANT_BLACKLISTED"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BOOKING"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CENTER"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CUSTOMER"/>
          <xs:enumeration value="UNABLE_TO_REFRESH_WAITING_LIST"/>
          <xs:enumeration value="TOO_FEW_PARTICIPANTS"/>
          <xs:enumeration value="FREEZE_MAX_PREBOOK_PERIOD"/>
          <xs:enumeration value="FREEZE_MIN_OR_MAX_DURATION"/>
          <xs:enumeration value="FREEZE_TOO_LONG"/>
          <xs:enumeration value="FREEZE_TOO_SHORT"/>
          <xs:enumeration value="FREEZE_MAX_NUMBER_REACHED"/>
          <xs:enumeration value="TOO_MANY_FREEZES_PERIOD"/>
          <xs:enumeration value="TOO_MANY_FREEZES_TOTAL"/>
          <xs:enumeration value="FREEZE_MAX_TOTAL_DURATION_REACHED"/>
          <xs:enumeration value="FREEZE_NOT_ALLOWED"/>
          <xs:enumeration value="FREEZE_START_AND_STOP_DATE"/>
          <xs:enumeration value="FREEZE_START_IN_THE_PAST"/>
          <xs:enumeration value="FREEZE_END_BEFORE_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_AFTER_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_BEFORE_SUBSCRIPTION_START"/>
          <xs:enumeration value="FREEZE_OVERLAP"/>
          <xs:enumeration value="FREEZE_FUTURE_FREEZE"/>
          <xs:enumeration value="BOOKINGS_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="PARTICIPATION_ALREADY_CANCELLED"/>
          <xs:enumeration value="PARTICIPATION_CANCELLED"/>
          <xs:enumeration value="MINIMUM_AGE_EXCEPTION"/>
          <xs:enumeration value="TEMPLATE_NOT_DEFINED"/>
          <xs:enumeration value="INVALID_OTHER_PAYER_TYPE"/>
          <xs:enumeration value="DIFFERENT_COUNTRY_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_IS_NOT_STAFF"/>
          <xs:enumeration value="OTHER_PAYER_HAS_OTHER_PAYER"/>
          <xs:enumeration value="NO_VALID_ACCOUNT_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_STATUS_NOT_VALID_FOR_ATTEND"/>
          <xs:enumeration value="ATTENDING_PERSON_BLACKLISTED"/>
          <xs:enumeration value="MISSING_PRIVILEGE_FOR_ATTEND"/>
          <xs:enumeration value="ATTEND_NOT_POSSIBLE_AT_SPECIFIED_TIME"/>
          <xs:enumeration value="CLIPCARD_NOT_USABLE"/>
          <xs:enumeration value="TOO_MANY_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="NOT_ENOUGH_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="LOGIN_BLOCKED"/>
          <xs:enumeration value="PASSWORD_EXPIRED"/>
          <xs:enumeration value="PERSON_DELETED"/>
          <xs:enumeration value="PERSON_ANONYMIZED"/>
          <xs:enumeration value="INVALID_PICTURE"/>
          <xs:enumeration value="PERSON_NOT_FOUND_FOR_VENDING"/>
          <xs:enumeration value="TOO_MANY_MATCHES"/>
          <xs:enumeration value="PASSWORD_NOT_SET"/>
          <xs:enumeration value="PASSWORD_TOO_SHORT"/>
          <xs:enumeration value="CANNOT_PARTICIPATE_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="INVALID_STATUS"/>
          <xs:enumeration value="CONCURRENT_CALLS"/>
          <xs:enumeration value="CANNOT_UPDATE_COMPLETED_QUESTIONNAIRE"/>
          <xs:enumeration value="MISSING_ADMIN_FEE_PRODUCT"/>
          <xs:enumeration value="LOGIN_NOT_VALID"/>
          <xs:enumeration value="ACTIVE_TASKS_ALREADY_EXISTS_FOR_PERSON"/>
          <xs:enumeration value="TASK_TYPE_EXTERNAL_KEY_DOES_NOT_EXIST"/>
          <xs:enumeration value="SUBSCRIPTION_OF_SAME_TYPE"/>
          <xs:enumeration value="PERSON_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_KEY_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_BLOCKED"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_UNBLOCKED"/>
          <xs:enumeration value="INVALID_EMAIL"/>
          <xs:enumeration value="CENTER_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_TYPE_NOT_STRING"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_UPDATE_NOT_ALLOWED"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_VALUE_NOT_ALLOWED"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="CHILD_MUST_HAVE_AT_LEAST_ONE_PARENT"/>
          <xs:enumeration value="CHILD_HAS_TOO_MANY_PARENTS"/>
          <xs:enumeration value="PARENT_HAS_TOO_MANY_CHILDREN"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_ALREADY_EXISTS"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_DOES_NOT_EXIST"/>
          <xs:enumeration value="GUARDIAN_IS_TOO_YOUNG"/>
          <xs:enumeration value="CHILD_IS_TOO_OLD"/>
          <xs:enumeration value="AGE_NOT_SET"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_PERSON_MISMATCH"/>
          <xs:enumeration value="PAYMENT_CYCLE_TYPE_NOT_ALLOWED_EXCEPTION"/>
          <xs:enumeration value="SUBSCRIPTION_DOES_NOT_BELONG_TO_MEMBER"/>
          <xs:enumeration value="CANNOT_DELETE_SUBSCRIPTION"/>
          <xs:enumeration value="NO_PAYMENT_AGREEMENT_FOUND"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_VALID_FOR_SALES"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_ACTIVE"/>
          <xs:enumeration value="PAYMENT_CYCLE_NOT_ALLOWED"/>
          <xs:enumeration value="SUBSCRIPTION_SALE_OUTSIDE_HOME_CLUB_NOT_ALLOWED"/>
          <xs:enumeration value="BELOW_REQUIRED_AGE_FOR_EMAIL_CAPTURE"/>
          <xs:enumeration value="ROLE_NOT_FOUND"/>
          <xs:enumeration value="ACTION_NOT_ALLOWED"/>
          <xs:enumeration value="SCOPE_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_BLOCKED"/>
          <xs:enumeration value="ROLE_NOT_ASSIGNED"/>
          <xs:enumeration value="INVALID_EMPLOYEE_KEY"/>
          <xs:enumeration value="MISSING_PRIVILEGES"/>
          <xs:enumeration value="DATE_PARSE_ERROR"/>
          <xs:enumeration value="DATE_INVALID"/>
          <xs:enumeration value="CLIPCARD_NOT_ACTIVE"/>
          <xs:enumeration value="GROUP_ALREADY_EXIST"/>
          <xs:enumeration value="EMPLOYEE_AND_PERSON_KEY_SET"/>
          <xs:enumeration value="MULTIPLE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="MULTIPLE_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_ACTIVE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="errorDetailType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="MISSING_ACCESS_GROUP"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_DATE"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_TIME"/>
          <xs:enumeration value="MISSING_PRIVILEGES_COUNT"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="ALLOWED_BOOKING_WINDOW_TIMESLOT"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="installmentPlanConfigType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="FIXED_NUMBER"/>
          <xs:enumeration value="FIXED_AMOUNT"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="productType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="GOOD"/>
          <xs:enumeration value="SERVICE"/>
          <xs:enumeration value="CLIPCARD"/>
          <xs:enumeration value="SUBSCRIPTION"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType final="#all" name="productSaleArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:productSale"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="productGroupArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:productGroup"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="installmentPlanConfigArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:installmentPlanConfig"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="productArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:product"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="compositeKeyArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:compositeKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="rebatedPriceArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:rebatedPrice"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </types>
  <message name="ProductAPI_sellProducts">
    <part name="personKey" type="tns:apiPersonKey"/>
    <part name="products" type="tns:productSaleArray"/>
    <part name="paymentInfo" type="tns:paymentInfo"/>
  </message>
  <message name="ProductAPI_getInvoicePreviewForProductSaleResponse">
    <part name="invoice" type="tns:invoice"/>
  </message>
  <message name="ProductAPI_getRebatedPricesForCustomerResponse">
    <part name="return" type="tns:rebatedPriceArray"/>
  </message>
  <message name="ProductAPI_findProductsByRefResponse">
    <part name="return" type="tns:productArray"/>
  </message>
  <message name="ProductAPI_getAvailableInstallmentPlanConfigsForProduct">
    <part name="productId" type="tns:compositeKey"/>
  </message>
  <message name="ProductAPI_getAvailableInstallmentPlanConfigsForProductResponse">
    <part name="return" type="tns:installmentPlanConfigArray"/>
  </message>
  <message name="ProductAPI_getProductGroupsResponse">
    <part name="return" type="tns:productGroupArray"/>
  </message>
  <message name="ProductAPI_getInvoicePreviewForProductSale">
    <part name="personKey" type="tns:apiPersonKey"/>
    <part name="products" type="tns:productSaleArray"/>
    <part name="paymentInfo" type="tns:paymentInfo"/>
  </message>
  <message name="ProductAPI_getProductGroups">
    <part name="centerId" type="xsd:int"/>
    <part name="showInSubscriptionsales" type="xsd:boolean"/>
    <part name="showInShop" type="xsd:boolean"/>
  </message>
  <message name="ProductAPI_getInvoice">
    <part name="invoiceKey" type="tns:compositeKey"/>
  </message>
  <message name="ProductAPI_cancelSaleResponse">
    <part name="return" type="tns:compositeKey"/>
  </message>
  <message name="ProductAPI_findProductsByGroupAndType">
    <part name="centerId" type="xsd:int"/>
    <part name="groupName" type="xsd:string"/>
    <part name="availableOnWebOnly" type="xsd:boolean"/>
    <part name="productType" type="tns:productType"/>
  </message>
  <message name="ProductAPI_cancelSale">
    <part name="invoiceKey" type="tns:compositeKey"/>
    <part name="cancelReason" type="xsd:string"/>
  </message>
  <message name="ProductAPI_findProductsByRef">
    <part name="center" type="xsd:int"/>
    <part name="arg1" type="xsd:string"/>
    <part name="availableOnWebOnly" type="xsd:boolean"/>
  </message>
  <message name="ProductAPI_getRebatedPricesForCustomer">
    <part name="personKey" type="tns:apiPersonKey"/>
    <part name="productIds" type="tns:compositeKeyArray"/>
  </message>
  <message name="ProductAPI_findProductByBarcode">
    <part name="center" type="xsd:int"/>
    <part name="barcode" type="xsd:string"/>
    <part name="availableOnWebOnly" type="xsd:boolean"/>
  </message>
  <message name="ProductAPI_findProductsByName">
    <part name="center" type="xsd:int"/>
    <part name="name" type="xsd:string"/>
    <part name="availableOnWebOnly" type="xsd:boolean"/>
  </message>
  <message name="ProductAPI_findProductsByNameResponse">
    <part name="return" type="tns:productArray"/>
  </message>
  <message name="ProductAPI_findProductByBarcodeResponse">
    <part name="return" type="tns:product"/>
  </message>
  <message name="ProductAPI_findProductsByGroupAndTypeResponse">
    <part name="return" type="tns:productArray"/>
  </message>
  <message name="ProductAPI_sellProductsResponse">
    <part name="return" type="tns:compositeKey"/>
  </message>
  <message name="APIException">
    <part element="tns:APIException" name="APIException"/>
  </message>
  <message name="ProductAPI_getInvoiceResponse">
    <part name="invoice" type="tns:invoice"/>
  </message>
  <portType name="ProductAPI">
    <operation name="cancelSale" parameterOrder="invoiceKey cancelReason">
      <input message="tns:ProductAPI_cancelSale"/>
      <output message="tns:ProductAPI_cancelSaleResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="findProductByBarcode" parameterOrder="center barcode availableOnWebOnly">
      <input message="tns:ProductAPI_findProductByBarcode"/>
      <output message="tns:ProductAPI_findProductByBarcodeResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="findProductsByGroupAndType" parameterOrder="centerId groupName availableOnWebOnly productType">
      <input message="tns:ProductAPI_findProductsByGroupAndType"/>
      <output message="tns:ProductAPI_findProductsByGroupAndTypeResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="findProductsByName" parameterOrder="center name availableOnWebOnly">
      <input message="tns:ProductAPI_findProductsByName"/>
      <output message="tns:ProductAPI_findProductsByNameResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="findProductsByRef" parameterOrder="center arg1 availableOnWebOnly">
      <input message="tns:ProductAPI_findProductsByRef"/>
      <output message="tns:ProductAPI_findProductsByRefResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getAvailableInstallmentPlanConfigsForProduct" parameterOrder="productId">
      <input message="tns:ProductAPI_getAvailableInstallmentPlanConfigsForProduct"/>
      <output message="tns:ProductAPI_getAvailableInstallmentPlanConfigsForProductResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getInvoice" parameterOrder="invoiceKey">
      <input message="tns:ProductAPI_getInvoice"/>
      <output message="tns:ProductAPI_getInvoiceResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getInvoicePreviewForProductSale" parameterOrder="personKey products paymentInfo">
      <input message="tns:ProductAPI_getInvoicePreviewForProductSale"/>
      <output message="tns:ProductAPI_getInvoicePreviewForProductSaleResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getProductGroups" parameterOrder="centerId showInSubscriptionsales showInShop">
      <input message="tns:ProductAPI_getProductGroups"/>
      <output message="tns:ProductAPI_getProductGroupsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getRebatedPricesForCustomer" parameterOrder="personKey productIds">
      <input message="tns:ProductAPI_getRebatedPricesForCustomer"/>
      <output message="tns:ProductAPI_getRebatedPricesForCustomerResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="sellProducts" parameterOrder="personKey products paymentInfo">
      <input message="tns:ProductAPI_sellProducts"/>
      <output message="tns:ProductAPI_sellProductsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
  </portType>
  <binding name="ProductAPIBinding" type="tns:ProductAPI">
    <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="cancelSale">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="findProductByBarcode">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="findProductsByGroupAndType">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="findProductsByName">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="findProductsByRef">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getAvailableInstallmentPlanConfigsForProduct">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getInvoice">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getInvoicePreviewForProductSale">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getProductGroups">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getRebatedPricesForCustomer">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="sellProducts">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
  </binding>
  <service name="ProductAPIService">
    <port binding="tns:ProductAPIBinding" name="ProductAPIPort">
      <soap:address location="https://lite-test.exerp.com/api/v5/ProductAPI"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://lite-test.exerp.com/api/v5/ProductAPI</con:endpoint></con:endpoints><con:operation id="e41fffcf-cbc3-4f1c-bff6-6706e247b680" isOneWay="false" action="" name="cancelSale" bindingOperationName="cancelSale" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0084c93f-f2e4-48a8-b2c8-965fb4d33156" isOneWay="false" action="" name="findProductByBarcode" bindingOperationName="findProductByBarcode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0fece3ed-5ed2-4c39-8f13-57ee03ec82b5" isOneWay="false" action="" name="findProductsByGroupAndType" bindingOperationName="findProductsByGroupAndType" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3a17d1ce-26c1-43bf-abee-71bdf9b289d5" isOneWay="false" action="" name="findProductsByName" bindingOperationName="findProductsByName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fc1f341f-cf33-4684-ab64-883f79fb2fe4" isOneWay="false" action="" name="findProductsByRef" bindingOperationName="findProductsByRef" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="66fb380e-6dbc-44af-bbe8-7cc663897e06" isOneWay="false" action="" name="getAvailableInstallmentPlanConfigsForProduct" bindingOperationName="getAvailableInstallmentPlanConfigsForProduct" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4672eb46-6e62-4e35-b971-6843ef04e638" isOneWay="false" action="" name="getInvoice" bindingOperationName="getInvoice" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="748e989d-6699-4dbf-8e91-220f5fb598c1" isOneWay="false" action="" name="getInvoicePreviewForProductSale" bindingOperationName="getInvoicePreviewForProductSale" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d96c0978-8f38-4295-a395-e86bce8214d0" isOneWay="false" action="" name="getProductGroups" bindingOperationName="getProductGroups" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="449acec9-32af-4a2c-bc92-73571de60e3b" isOneWay="false" action="" name="getRebatedPricesForCustomer" bindingOperationName="getRebatedPricesForCustomer" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6fe1721c-2976-406b-875c-cec448b5f1b2" isOneWay="false" action="" name="sellProducts" bindingOperationName="sellProducts" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="3d22246d-f0ca-4fee-8034-918d5a2004bc" wsaVersion="NONE" name="QuestionnaireAPIBinding" type="wsdl" bindingName="{http://v5.api.eclub.procard.dk/}QuestionnaireAPIBinding" soapVersion="1_1" anonymous="optional" definition="https://lite-test.exerp.com/api/v5/QuestionnaireAPI?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://lite-test.exerp.com/api/v5/QuestionnaireAPI?wsdl"><con:part><con:url>https://lite-test.exerp.com/api/v5/QuestionnaireAPI?wsdl</con:url><con:content><![CDATA[<definitions name="QuestionnaireAPIService" targetNamespace="http://v5.api.eclub.procard.dk/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://v5.api.eclub.procard.dk/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <types>
    <xs:schema targetNamespace="http://v5.api.eclub.procard.dk/" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="APIException" type="tns:APIException"/>
      <xs:complexType final="extension restriction" name="addQuestionnaireAnswerParameters">
        <xs:sequence>
          <xs:element name="questionnaireId" type="xs:int"/>
          <xs:element name="personId" type="tns:apiPersonKey"/>
          <xs:element name="time" type="xs:string"/>
          <xs:element name="answers">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="answer" type="tns:answer"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="apiPersonKey">
        <xs:complexContent>
          <xs:extension base="tns:compositeKey">
            <xs:sequence>
              <xs:element minOccurs="0" name="externalId" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="compositeKey">
        <xs:sequence>
          <xs:element name="center" type="xs:int"/>
          <xs:element name="id" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="answer">
        <xs:sequence>
          <xs:element name="questionId" type="xs:int"/>
          <xs:element minOccurs="0" name="text" type="xs:string"/>
          <xs:element minOccurs="0" name="selectedOption" type="tns:selectedOption"/>
          <xs:element minOccurs="0" name="selectedOptions">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="selectedOption" type="tns:selectedOption"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="selectedOption">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="compositeSubKey">
        <xs:complexContent>
          <xs:extension base="tns:compositeKey">
            <xs:sequence>
              <xs:element name="subId" type="xs:int"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="APIException">
        <xs:sequence>
          <xs:element minOccurs="0" name="errorCode" type="tns:errorCode"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="errorDetail" type="tns:errorDetail"/>
          <xs:element minOccurs="0" name="errorMessage" type="xs:string"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="errorDetail">
        <xs:sequence>
          <xs:element minOccurs="0" name="info" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:errorDetailType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="questionnaireAnswer">
        <xs:sequence>
          <xs:element name="answerId" type="tns:compositeSubKey"/>
          <xs:element name="personId" type="tns:apiPersonKey"/>
          <xs:element name="questionnaireId" type="xs:int"/>
          <xs:element name="templateId" type="xs:int"/>
          <xs:element name="time" type="xs:string"/>
          <xs:element name="completed" type="xs:boolean"/>
          <xs:element name="answers">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="answer" type="tns:answer"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateQuestionnaireAnswerParameters">
        <xs:sequence>
          <xs:element name="answerId" type="tns:compositeSubKey"/>
          <xs:element minOccurs="0" name="time" type="xs:string"/>
          <xs:element name="answers">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="answer" type="tns:answer"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="answersForPersonParameters">
        <xs:sequence>
          <xs:element name="personId" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="includeCompleted" type="xs:boolean"/>
          <xs:element minOccurs="0" name="types">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="type" type="tns:questionnaireType"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="questionnaire">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="templateId" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:questionnaireType"/>
          <xs:element minOccurs="0" name="dateInterval" type="tns:interval"/>
          <xs:element minOccurs="0" name="rank" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="interval">
        <xs:sequence>
          <xs:element name="from" type="xs:string"/>
          <xs:element name="to" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getQuestionnaireParameters">
        <xs:sequence>
          <xs:element name="centerId" type="xs:int"/>
          <xs:element minOccurs="0" name="types">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="type" type="tns:questionnaireType"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="onlyActive" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="questionnaireTemplate">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="status" type="tns:questionnaireTemplateStatus"/>
          <xs:element minOccurs="0" name="heading" type="xs:string"/>
          <xs:element minOccurs="0" name="text" type="xs:string"/>
          <xs:element minOccurs="0" name="questions">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="question" type="tns:question"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="question">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="type" type="tns:questionType"/>
          <xs:element name="blocked" type="xs:boolean"/>
          <xs:element minOccurs="0" name="text" type="xs:string"/>
          <xs:element minOccurs="0" name="options">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="option" type="tns:option"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="defaultOption" type="tns:selectedOption"/>
          <xs:element minOccurs="0" name="required" type="xs:boolean"/>
          <xs:element minOccurs="0" name="requiredForAnswer" type="tns:answer"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="option">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
          <xs:element minOccurs="0" name="text" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="errorCode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UNKNOWN_ERROR"/>
          <xs:enumeration value="CREATE_EXCEPTION"/>
          <xs:enumeration value="REMOVE_EXCEPTION"/>
          <xs:enumeration value="SECURITY"/>
          <xs:enumeration value="SECURITY_ROLE"/>
          <xs:enumeration value="ARGUMENT_IS_NULL"/>
          <xs:enumeration value="ILLEGAL_ARGUMENT"/>
          <xs:enumeration value="PARSE_ERROR"/>
          <xs:enumeration value="ENTITY_NOT_FOUND"/>
          <xs:enumeration value="CONFLICTING_CHANGE"/>
          <xs:enumeration value="INVALID_ZIPCODE"/>
          <xs:enumeration value="INVALID_SOCIAL_SECURITY_NUMBER"/>
          <xs:enumeration value="INVALID_COMPANYID"/>
          <xs:enumeration value="INVALID_PHONE_NUMBER"/>
          <xs:enumeration value="CLIENT"/>
          <xs:enumeration value="ENTITY_IDENTIFIER_STATUS"/>
          <xs:enumeration value="DUPLICATE_PERSON"/>
          <xs:enumeration value="DUPLICATE_EXTERNAL_ID"/>
          <xs:enumeration value="FRIEND_RESTRICTION"/>
          <xs:enumeration value="EMPLOYEE_ALREADY_EXIST"/>
          <xs:enumeration value="DUPLICATE_COMPANY"/>
          <xs:enumeration value="EXPENSIVE_SEARCH"/>
          <xs:enumeration value="MULTIPLE_PERSONS_FOUND"/>
          <xs:enumeration value="NOT_DELIVERABLE"/>
          <xs:enumeration value="CIRCULAR_REFERENCE"/>
          <xs:enumeration value="REFERENCE"/>
          <xs:enumeration value="PERSON_NOT_EDITABLE"/>
          <xs:enumeration value="PERSON_TRANSFER"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_FOUND"/>
          <xs:enumeration value="ACCOUNT_RECEIVABLE_IS_BLOCKED"/>
          <xs:enumeration value="BANK_ACCOUNT_IS_BLOCKED"/>
          <xs:enumeration value="DEBIT_MAX"/>
          <xs:enumeration value="INVALID_PAYMENT_AGREEMENT"/>
          <xs:enumeration value="INVALID_BANK_INFO"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_CREDITOR_FOUND"/>
          <xs:enumeration value="PARTICIPATION_TIME_INTERVAL_OVERLAP"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLACKLISTED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLOCKED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="BOOKING_WAITING_LIST_FULL"/>
          <xs:enumeration value="BOOKING_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_RESTRICTION"/>
          <xs:enumeration value="OUTSIDE_BOOKING_WINDOW_EXCEPTION"/>
          <xs:enumeration value="CUSTOMER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="CENTER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_COLLECTION_NOT_PAID_FOR"/>
          <xs:enumeration value="NO_PRIVILEGE_FOR_PARTICIPATION"/>
          <xs:enumeration value="ALL_PARTICIPATIONS_TAKEN"/>
          <xs:enumeration value="SHOWUP_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_CANCELLATION"/>
          <xs:enumeration value="TOO_EARLY_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="TOO_EARLY_TO_SHOWUP"/>
          <xs:enumeration value="TOO_LATE_TO_SHOWUP"/>
          <xs:enumeration value="PARTICIPANT_TOO_MANY_OPEN_BOOKINGS"/>
          <xs:enumeration value="RESOURCE_OCCUPIED"/>
          <xs:enumeration value="RESOURCE_START_TIME_RESTRICTION"/>
          <xs:enumeration value="RESOURCE_TIME_RESTRICTION"/>
          <xs:enumeration value="ACTIVITY_STATE_INVALID"/>
          <xs:enumeration value="NO_PARENT_BOOKING_FOUND"/>
          <xs:enumeration value="STAFF_BLACKLISTED"/>
          <xs:enumeration value="STAFF_OCCUPIED"/>
          <xs:enumeration value="TOO_MANY_SUB_STAFF_USAGES"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_BOOKED"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_SHOWEDUP"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_BOOKING"/>
          <xs:enumeration value="LISTS_FULL"/>
          <xs:enumeration value="TOO_LATE_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="PARTICIPANT_OCCUPIED"/>
          <xs:enumeration value="FULL_BOOKING_RESTRICTION"/>
          <xs:enumeration value="IN_ADVANCE_LIMIT_BOOKING_RESTRICTION"/>
          <xs:enumeration value="PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="PARTICIPANT_BLACKLISTED"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BOOKING"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CENTER"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CUSTOMER"/>
          <xs:enumeration value="UNABLE_TO_REFRESH_WAITING_LIST"/>
          <xs:enumeration value="TOO_FEW_PARTICIPANTS"/>
          <xs:enumeration value="FREEZE_MAX_PREBOOK_PERIOD"/>
          <xs:enumeration value="FREEZE_MIN_OR_MAX_DURATION"/>
          <xs:enumeration value="FREEZE_TOO_LONG"/>
          <xs:enumeration value="FREEZE_TOO_SHORT"/>
          <xs:enumeration value="FREEZE_MAX_NUMBER_REACHED"/>
          <xs:enumeration value="TOO_MANY_FREEZES_PERIOD"/>
          <xs:enumeration value="TOO_MANY_FREEZES_TOTAL"/>
          <xs:enumeration value="FREEZE_MAX_TOTAL_DURATION_REACHED"/>
          <xs:enumeration value="FREEZE_NOT_ALLOWED"/>
          <xs:enumeration value="FREEZE_START_AND_STOP_DATE"/>
          <xs:enumeration value="FREEZE_START_IN_THE_PAST"/>
          <xs:enumeration value="FREEZE_END_BEFORE_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_AFTER_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_BEFORE_SUBSCRIPTION_START"/>
          <xs:enumeration value="FREEZE_OVERLAP"/>
          <xs:enumeration value="FREEZE_FUTURE_FREEZE"/>
          <xs:enumeration value="BOOKINGS_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="PARTICIPATION_ALREADY_CANCELLED"/>
          <xs:enumeration value="PARTICIPATION_CANCELLED"/>
          <xs:enumeration value="MINIMUM_AGE_EXCEPTION"/>
          <xs:enumeration value="TEMPLATE_NOT_DEFINED"/>
          <xs:enumeration value="INVALID_OTHER_PAYER_TYPE"/>
          <xs:enumeration value="DIFFERENT_COUNTRY_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_IS_NOT_STAFF"/>
          <xs:enumeration value="OTHER_PAYER_HAS_OTHER_PAYER"/>
          <xs:enumeration value="NO_VALID_ACCOUNT_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_STATUS_NOT_VALID_FOR_ATTEND"/>
          <xs:enumeration value="ATTENDING_PERSON_BLACKLISTED"/>
          <xs:enumeration value="MISSING_PRIVILEGE_FOR_ATTEND"/>
          <xs:enumeration value="ATTEND_NOT_POSSIBLE_AT_SPECIFIED_TIME"/>
          <xs:enumeration value="CLIPCARD_NOT_USABLE"/>
          <xs:enumeration value="TOO_MANY_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="NOT_ENOUGH_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="LOGIN_BLOCKED"/>
          <xs:enumeration value="PASSWORD_EXPIRED"/>
          <xs:enumeration value="PERSON_DELETED"/>
          <xs:enumeration value="PERSON_ANONYMIZED"/>
          <xs:enumeration value="INVALID_PICTURE"/>
          <xs:enumeration value="PERSON_NOT_FOUND_FOR_VENDING"/>
          <xs:enumeration value="TOO_MANY_MATCHES"/>
          <xs:enumeration value="PASSWORD_NOT_SET"/>
          <xs:enumeration value="PASSWORD_TOO_SHORT"/>
          <xs:enumeration value="CANNOT_PARTICIPATE_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="INVALID_STATUS"/>
          <xs:enumeration value="CONCURRENT_CALLS"/>
          <xs:enumeration value="CANNOT_UPDATE_COMPLETED_QUESTIONNAIRE"/>
          <xs:enumeration value="MISSING_ADMIN_FEE_PRODUCT"/>
          <xs:enumeration value="LOGIN_NOT_VALID"/>
          <xs:enumeration value="ACTIVE_TASKS_ALREADY_EXISTS_FOR_PERSON"/>
          <xs:enumeration value="TASK_TYPE_EXTERNAL_KEY_DOES_NOT_EXIST"/>
          <xs:enumeration value="SUBSCRIPTION_OF_SAME_TYPE"/>
          <xs:enumeration value="PERSON_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_KEY_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_BLOCKED"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_UNBLOCKED"/>
          <xs:enumeration value="INVALID_EMAIL"/>
          <xs:enumeration value="CENTER_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_TYPE_NOT_STRING"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_UPDATE_NOT_ALLOWED"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_VALUE_NOT_ALLOWED"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="CHILD_MUST_HAVE_AT_LEAST_ONE_PARENT"/>
          <xs:enumeration value="CHILD_HAS_TOO_MANY_PARENTS"/>
          <xs:enumeration value="PARENT_HAS_TOO_MANY_CHILDREN"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_ALREADY_EXISTS"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_DOES_NOT_EXIST"/>
          <xs:enumeration value="GUARDIAN_IS_TOO_YOUNG"/>
          <xs:enumeration value="CHILD_IS_TOO_OLD"/>
          <xs:enumeration value="AGE_NOT_SET"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_PERSON_MISMATCH"/>
          <xs:enumeration value="PAYMENT_CYCLE_TYPE_NOT_ALLOWED_EXCEPTION"/>
          <xs:enumeration value="SUBSCRIPTION_DOES_NOT_BELONG_TO_MEMBER"/>
          <xs:enumeration value="CANNOT_DELETE_SUBSCRIPTION"/>
          <xs:enumeration value="NO_PAYMENT_AGREEMENT_FOUND"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_VALID_FOR_SALES"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_ACTIVE"/>
          <xs:enumeration value="PAYMENT_CYCLE_NOT_ALLOWED"/>
          <xs:enumeration value="SUBSCRIPTION_SALE_OUTSIDE_HOME_CLUB_NOT_ALLOWED"/>
          <xs:enumeration value="BELOW_REQUIRED_AGE_FOR_EMAIL_CAPTURE"/>
          <xs:enumeration value="ROLE_NOT_FOUND"/>
          <xs:enumeration value="ACTION_NOT_ALLOWED"/>
          <xs:enumeration value="SCOPE_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_BLOCKED"/>
          <xs:enumeration value="ROLE_NOT_ASSIGNED"/>
          <xs:enumeration value="INVALID_EMPLOYEE_KEY"/>
          <xs:enumeration value="MISSING_PRIVILEGES"/>
          <xs:enumeration value="DATE_PARSE_ERROR"/>
          <xs:enumeration value="DATE_INVALID"/>
          <xs:enumeration value="CLIPCARD_NOT_ACTIVE"/>
          <xs:enumeration value="GROUP_ALREADY_EXIST"/>
          <xs:enumeration value="EMPLOYEE_AND_PERSON_KEY_SET"/>
          <xs:enumeration value="MULTIPLE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="MULTIPLE_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_ACTIVE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="errorDetailType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="MISSING_ACCESS_GROUP"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_DATE"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_TIME"/>
          <xs:enumeration value="MISSING_PRIVILEGES_COUNT"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="ALLOWED_BOOKING_WINDOW_TIMESLOT"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="questionnaireType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NewPerson"/>
          <xs:enumeration value="NewGuest"/>
          <xs:enumeration value="NewSubscription"/>
          <xs:enumeration value="EndSubscription"/>
          <xs:enumeration value="Survey"/>
          <xs:enumeration value="Health"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="questionnaireTemplateStatus">
        <xs:restriction base="xs:string">
          <xs:enumeration value="New"/>
          <xs:enumeration value="Active"/>
          <xs:enumeration value="Inactive"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="questionType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="FreeText"/>
          <xs:enumeration value="SelectSingleOption"/>
          <xs:enumeration value="SelectMultipleOptions"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType final="#all" name="questionnaireAnswerArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:questionnaireAnswer"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="questionnaireArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:questionnaire"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </types>
  <message name="QuestionnaireAPI_getAnswersForPerson">
    <part name="parameters" type="tns:answersForPersonParameters"/>
  </message>
  <message name="QuestionnaireAPI_getQuestionnaireResponse">
    <part name="return" type="tns:questionnaire"/>
  </message>
  <message name="QuestionnaireAPI_getAnswerResponse">
    <part name="return" type="tns:questionnaireAnswer"/>
  </message>
  <message name="QuestionnaireAPI_getTemplateResponse">
    <part name="return" type="tns:questionnaireTemplate"/>
  </message>
  <message name="QuestionnaireAPI_addAnswerResponse">
    <part name="return" type="tns:compositeSubKey"/>
  </message>
  <message name="QuestionnaireAPI_updateAnswer">
    <part name="parameters" type="tns:updateQuestionnaireAnswerParameters"/>
  </message>
  <message name="QuestionnaireAPI_getQuestionnairesResponse">
    <part name="return" type="tns:questionnaireArray"/>
  </message>
  <message name="QuestionnaireAPI_getQuestionnaire">
    <part name="questionnaireId" type="xsd:int"/>
  </message>
  <message name="QuestionnaireAPI_getAnswersForPersonResponse">
    <part name="return" type="tns:questionnaireAnswerArray"/>
  </message>
  <message name="QuestionnaireAPI_updateAnswerResponse"/>
  <message name="QuestionnaireAPI_addAnswer">
    <part name="parameters" type="tns:addQuestionnaireAnswerParameters"/>
  </message>
  <message name="QuestionnaireAPI_getQuestionnaires">
    <part name="parameters" type="tns:getQuestionnaireParameters"/>
  </message>
  <message name="APIException">
    <part element="tns:APIException" name="APIException"/>
  </message>
  <message name="QuestionnaireAPI_getAnswer">
    <part name="answerId" type="tns:compositeSubKey"/>
  </message>
  <message name="QuestionnaireAPI_getTemplate">
    <part name="templateId" type="xsd:int"/>
  </message>
  <portType name="QuestionnaireAPI">
    <operation name="addAnswer" parameterOrder="parameters">
      <input message="tns:QuestionnaireAPI_addAnswer"/>
      <output message="tns:QuestionnaireAPI_addAnswerResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getAnswer" parameterOrder="answerId">
      <input message="tns:QuestionnaireAPI_getAnswer"/>
      <output message="tns:QuestionnaireAPI_getAnswerResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getAnswersForPerson" parameterOrder="parameters">
      <input message="tns:QuestionnaireAPI_getAnswersForPerson"/>
      <output message="tns:QuestionnaireAPI_getAnswersForPersonResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getQuestionnaire" parameterOrder="questionnaireId">
      <input message="tns:QuestionnaireAPI_getQuestionnaire"/>
      <output message="tns:QuestionnaireAPI_getQuestionnaireResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getQuestionnaires" parameterOrder="parameters">
      <input message="tns:QuestionnaireAPI_getQuestionnaires"/>
      <output message="tns:QuestionnaireAPI_getQuestionnairesResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getTemplate" parameterOrder="templateId">
      <input message="tns:QuestionnaireAPI_getTemplate"/>
      <output message="tns:QuestionnaireAPI_getTemplateResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="updateAnswer" parameterOrder="parameters">
      <input message="tns:QuestionnaireAPI_updateAnswer"/>
      <output message="tns:QuestionnaireAPI_updateAnswerResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
  </portType>
  <binding name="QuestionnaireAPIBinding" type="tns:QuestionnaireAPI">
    <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="addAnswer">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getAnswer">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getAnswersForPerson">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getQuestionnaire">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getQuestionnaires">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getTemplate">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="updateAnswer">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
  </binding>
  <service name="QuestionnaireAPIService">
    <port binding="tns:QuestionnaireAPIBinding" name="QuestionnaireAPIPort">
      <soap:address location="https://lite-test.exerp.com/api/v5/QuestionnaireAPI"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://lite-test.exerp.com/api/v5/QuestionnaireAPI</con:endpoint></con:endpoints><con:operation id="02bdbaa4-3719-4cce-8878-fa220c78866d" isOneWay="false" action="" name="addAnswer" bindingOperationName="addAnswer" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="86aff622-52aa-461d-8370-61cbe2c4d5c2" isOneWay="false" action="" name="getAnswer" bindingOperationName="getAnswer" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fdfca24d-fe34-45f2-8cb5-a1c4e3149f7a" isOneWay="false" action="" name="getAnswersForPerson" bindingOperationName="getAnswersForPerson" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="965ea707-49ff-470b-ae1d-b58a99d00894" isOneWay="false" action="" name="getQuestionnaire" bindingOperationName="getQuestionnaire" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d3ba2f57-2c77-4651-ad90-30e8c4bee94a" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://skilld.exerp.qa/api/v5/QuestionnaireAPI</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:getQuestionnaire>
         <questionnaireId>601</questionnaireId>
      </v5:getQuestionnaire>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>100emp2401</con:username><con:password>b8n1OfNkej</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/QuestionnaireAPI/getQuestionnaireRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="b016ba70-69ea-4332-b4f9-8631c5c9232a" isOneWay="false" action="" name="getQuestionnaires" bindingOperationName="getQuestionnaires" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="79384963-6f67-4614-8edf-b238063c4e67" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://skilld.exerp.qa/api/v5/QuestionnaireAPI</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:getQuestionnaires>
         <parameters>
            <centerId>100</centerId>
            <!--Optional:-->
            <types>
               <!--1 or more repetitions:-->
               <type>NewSubscription</type>
            </types>
            <!--Optional:-->
            <onlyActive></onlyActive>
         </parameters>
      </v5:getQuestionnaires>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>100emp2401</con:username><con:password>b8n1OfNkej</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/QuestionnaireAPI/getQuestionnairesRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="39533f6f-148e-41ee-ae40-9441bea3c6d1" name="Request 2"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://lite-test.exerp.com/api/v5/QuestionnaireAPI</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:getQuestionnaires>
         <parameters>
            <centerId>?</centerId>
            <!--Optional:-->
            <types>
               <!--1 or more repetitions:-->
               <type>?</type>
            </types>
            <!--Optional:-->
            <onlyActive>?</onlyActive>
         </parameters>
      </v5:getQuestionnaires>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/QuestionnaireAPI/getQuestionnairesRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="70f3a3b7-333b-4b2a-aa21-b6e9d6dbe9aa" isOneWay="false" action="" name="getTemplate" bindingOperationName="getTemplate" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b48c3e51-2d5b-4ad1-89b3-0b7ab006527f" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://skilld.exerp.qa/api/v5/QuestionnaireAPI</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:getTemplate>
         <templateId>201</templateId>
      </v5:getTemplate>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>100emp2401</con:username><con:password>b8n1OfNkej</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/QuestionnaireAPI/getTemplateRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="bb49964c-70ca-4627-ad1a-97ccae50d7ac" isOneWay="false" action="" name="updateAnswer" bindingOperationName="updateAnswer" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="59e61d77-9372-4544-9cd1-5396c0b78a34" wsaVersion="NONE" name="ResourceBookingAPIBinding" type="wsdl" bindingName="{http://v5.api.eclub.procard.dk/}ResourceBookingAPIBinding" soapVersion="1_1" anonymous="optional" definition="https://lite-test.exerp.com/api/v5/ResourceBookingAPI?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://lite-test.exerp.com/api/v5/ResourceBookingAPI?wsdl"><con:part><con:url>https://lite-test.exerp.com/api/v5/ResourceBookingAPI?wsdl</con:url><con:content><![CDATA[<definitions name="ResourceBookingAPIService" targetNamespace="http://v5.api.eclub.procard.dk/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://jaxb.dev.java.net/array" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://v5.api.eclub.procard.dk/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <types>
    <xs:schema targetNamespace="http://jaxb.dev.java.net/array" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:complexType final="#all" name="stringArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema targetNamespace="http://v5.api.eclub.procard.dk/" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="APIException" type="tns:APIException"/>
      <xs:complexType name="resourceBookingAvailability">
        <xs:sequence>
          <xs:element name="available" type="xs:boolean"/>
          <xs:element minOccurs="0" name="resourceKey" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="time" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="compositeKey">
        <xs:sequence>
          <xs:element name="center" type="xs:int"/>
          <xs:element name="id" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="APIException">
        <xs:sequence>
          <xs:element minOccurs="0" name="errorCode" type="tns:errorCode"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="errorDetail" type="tns:errorDetail"/>
          <xs:element minOccurs="0" name="errorMessage" type="xs:string"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="errorDetail">
        <xs:sequence>
          <xs:element minOccurs="0" name="info" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:errorDetailType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createCourtBookingParameter">
        <xs:sequence>
          <xs:element name="courtActivityId" type="xs:int"/>
          <xs:element name="courtResourceKey" type="tns:compositeKey"/>
          <xs:element name="date" type="xs:string"/>
          <xs:element name="duration" type="xs:int"/>
          <xs:element name="personKey" type="tns:apiPersonKey"/>
          <xs:element name="startTime" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="apiPersonKey">
        <xs:complexContent>
          <xs:extension base="tns:compositeKey">
            <xs:sequence>
              <xs:element minOccurs="0" name="externalId" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="courtBooking">
        <xs:sequence>
          <xs:element minOccurs="0" name="courtActivity" type="tns:courtActivity"/>
          <xs:element minOccurs="0" name="date" type="xs:string"/>
          <xs:element minOccurs="0" name="endTime" type="xs:string"/>
          <xs:element minOccurs="0" name="key" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="startTime" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="courtActivity">
        <xs:sequence>
          <xs:element minOccurs="0" name="color" type="tns:activityColor"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="durations" nillable="true" type="xs:int"/>
          <xs:element name="key" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="courtResource">
        <xs:sequence>
          <xs:element minOccurs="0" name="key" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="errorCode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UNKNOWN_ERROR"/>
          <xs:enumeration value="CREATE_EXCEPTION"/>
          <xs:enumeration value="REMOVE_EXCEPTION"/>
          <xs:enumeration value="SECURITY"/>
          <xs:enumeration value="SECURITY_ROLE"/>
          <xs:enumeration value="ARGUMENT_IS_NULL"/>
          <xs:enumeration value="ILLEGAL_ARGUMENT"/>
          <xs:enumeration value="PARSE_ERROR"/>
          <xs:enumeration value="ENTITY_NOT_FOUND"/>
          <xs:enumeration value="CONFLICTING_CHANGE"/>
          <xs:enumeration value="INVALID_ZIPCODE"/>
          <xs:enumeration value="INVALID_SOCIAL_SECURITY_NUMBER"/>
          <xs:enumeration value="INVALID_COMPANYID"/>
          <xs:enumeration value="INVALID_PHONE_NUMBER"/>
          <xs:enumeration value="CLIENT"/>
          <xs:enumeration value="ENTITY_IDENTIFIER_STATUS"/>
          <xs:enumeration value="DUPLICATE_PERSON"/>
          <xs:enumeration value="DUPLICATE_EXTERNAL_ID"/>
          <xs:enumeration value="FRIEND_RESTRICTION"/>
          <xs:enumeration value="EMPLOYEE_ALREADY_EXIST"/>
          <xs:enumeration value="DUPLICATE_COMPANY"/>
          <xs:enumeration value="EXPENSIVE_SEARCH"/>
          <xs:enumeration value="MULTIPLE_PERSONS_FOUND"/>
          <xs:enumeration value="NOT_DELIVERABLE"/>
          <xs:enumeration value="CIRCULAR_REFERENCE"/>
          <xs:enumeration value="REFERENCE"/>
          <xs:enumeration value="PERSON_NOT_EDITABLE"/>
          <xs:enumeration value="PERSON_TRANSFER"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_FOUND"/>
          <xs:enumeration value="ACCOUNT_RECEIVABLE_IS_BLOCKED"/>
          <xs:enumeration value="BANK_ACCOUNT_IS_BLOCKED"/>
          <xs:enumeration value="DEBIT_MAX"/>
          <xs:enumeration value="INVALID_PAYMENT_AGREEMENT"/>
          <xs:enumeration value="INVALID_BANK_INFO"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_CREDITOR_FOUND"/>
          <xs:enumeration value="PARTICIPATION_TIME_INTERVAL_OVERLAP"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLACKLISTED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLOCKED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="BOOKING_WAITING_LIST_FULL"/>
          <xs:enumeration value="BOOKING_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_RESTRICTION"/>
          <xs:enumeration value="OUTSIDE_BOOKING_WINDOW_EXCEPTION"/>
          <xs:enumeration value="CUSTOMER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="CENTER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_COLLECTION_NOT_PAID_FOR"/>
          <xs:enumeration value="NO_PRIVILEGE_FOR_PARTICIPATION"/>
          <xs:enumeration value="ALL_PARTICIPATIONS_TAKEN"/>
          <xs:enumeration value="SHOWUP_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_CANCELLATION"/>
          <xs:enumeration value="TOO_EARLY_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="TOO_EARLY_TO_SHOWUP"/>
          <xs:enumeration value="TOO_LATE_TO_SHOWUP"/>
          <xs:enumeration value="PARTICIPANT_TOO_MANY_OPEN_BOOKINGS"/>
          <xs:enumeration value="RESOURCE_OCCUPIED"/>
          <xs:enumeration value="RESOURCE_START_TIME_RESTRICTION"/>
          <xs:enumeration value="RESOURCE_TIME_RESTRICTION"/>
          <xs:enumeration value="ACTIVITY_STATE_INVALID"/>
          <xs:enumeration value="NO_PARENT_BOOKING_FOUND"/>
          <xs:enumeration value="STAFF_BLACKLISTED"/>
          <xs:enumeration value="STAFF_OCCUPIED"/>
          <xs:enumeration value="TOO_MANY_SUB_STAFF_USAGES"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_BOOKED"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_SHOWEDUP"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_BOOKING"/>
          <xs:enumeration value="LISTS_FULL"/>
          <xs:enumeration value="TOO_LATE_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="PARTICIPANT_OCCUPIED"/>
          <xs:enumeration value="FULL_BOOKING_RESTRICTION"/>
          <xs:enumeration value="IN_ADVANCE_LIMIT_BOOKING_RESTRICTION"/>
          <xs:enumeration value="PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="PARTICIPANT_BLACKLISTED"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BOOKING"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CENTER"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CUSTOMER"/>
          <xs:enumeration value="UNABLE_TO_REFRESH_WAITING_LIST"/>
          <xs:enumeration value="TOO_FEW_PARTICIPANTS"/>
          <xs:enumeration value="FREEZE_MAX_PREBOOK_PERIOD"/>
          <xs:enumeration value="FREEZE_MIN_OR_MAX_DURATION"/>
          <xs:enumeration value="FREEZE_TOO_LONG"/>
          <xs:enumeration value="FREEZE_TOO_SHORT"/>
          <xs:enumeration value="FREEZE_MAX_NUMBER_REACHED"/>
          <xs:enumeration value="TOO_MANY_FREEZES_PERIOD"/>
          <xs:enumeration value="TOO_MANY_FREEZES_TOTAL"/>
          <xs:enumeration value="FREEZE_MAX_TOTAL_DURATION_REACHED"/>
          <xs:enumeration value="FREEZE_NOT_ALLOWED"/>
          <xs:enumeration value="FREEZE_START_AND_STOP_DATE"/>
          <xs:enumeration value="FREEZE_START_IN_THE_PAST"/>
          <xs:enumeration value="FREEZE_END_BEFORE_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_AFTER_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_BEFORE_SUBSCRIPTION_START"/>
          <xs:enumeration value="FREEZE_OVERLAP"/>
          <xs:enumeration value="FREEZE_FUTURE_FREEZE"/>
          <xs:enumeration value="BOOKINGS_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="PARTICIPATION_ALREADY_CANCELLED"/>
          <xs:enumeration value="PARTICIPATION_CANCELLED"/>
          <xs:enumeration value="MINIMUM_AGE_EXCEPTION"/>
          <xs:enumeration value="TEMPLATE_NOT_DEFINED"/>
          <xs:enumeration value="INVALID_OTHER_PAYER_TYPE"/>
          <xs:enumeration value="DIFFERENT_COUNTRY_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_IS_NOT_STAFF"/>
          <xs:enumeration value="OTHER_PAYER_HAS_OTHER_PAYER"/>
          <xs:enumeration value="NO_VALID_ACCOUNT_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_STATUS_NOT_VALID_FOR_ATTEND"/>
          <xs:enumeration value="ATTENDING_PERSON_BLACKLISTED"/>
          <xs:enumeration value="MISSING_PRIVILEGE_FOR_ATTEND"/>
          <xs:enumeration value="ATTEND_NOT_POSSIBLE_AT_SPECIFIED_TIME"/>
          <xs:enumeration value="CLIPCARD_NOT_USABLE"/>
          <xs:enumeration value="TOO_MANY_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="NOT_ENOUGH_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="LOGIN_BLOCKED"/>
          <xs:enumeration value="PASSWORD_EXPIRED"/>
          <xs:enumeration value="PERSON_DELETED"/>
          <xs:enumeration value="PERSON_ANONYMIZED"/>
          <xs:enumeration value="INVALID_PICTURE"/>
          <xs:enumeration value="PERSON_NOT_FOUND_FOR_VENDING"/>
          <xs:enumeration value="TOO_MANY_MATCHES"/>
          <xs:enumeration value="PASSWORD_NOT_SET"/>
          <xs:enumeration value="PASSWORD_TOO_SHORT"/>
          <xs:enumeration value="CANNOT_PARTICIPATE_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="INVALID_STATUS"/>
          <xs:enumeration value="CONCURRENT_CALLS"/>
          <xs:enumeration value="CANNOT_UPDATE_COMPLETED_QUESTIONNAIRE"/>
          <xs:enumeration value="MISSING_ADMIN_FEE_PRODUCT"/>
          <xs:enumeration value="LOGIN_NOT_VALID"/>
          <xs:enumeration value="ACTIVE_TASKS_ALREADY_EXISTS_FOR_PERSON"/>
          <xs:enumeration value="TASK_TYPE_EXTERNAL_KEY_DOES_NOT_EXIST"/>
          <xs:enumeration value="SUBSCRIPTION_OF_SAME_TYPE"/>
          <xs:enumeration value="PERSON_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_KEY_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_BLOCKED"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_UNBLOCKED"/>
          <xs:enumeration value="INVALID_EMAIL"/>
          <xs:enumeration value="CENTER_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_TYPE_NOT_STRING"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_UPDATE_NOT_ALLOWED"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_VALUE_NOT_ALLOWED"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="CHILD_MUST_HAVE_AT_LEAST_ONE_PARENT"/>
          <xs:enumeration value="CHILD_HAS_TOO_MANY_PARENTS"/>
          <xs:enumeration value="PARENT_HAS_TOO_MANY_CHILDREN"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_ALREADY_EXISTS"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_DOES_NOT_EXIST"/>
          <xs:enumeration value="GUARDIAN_IS_TOO_YOUNG"/>
          <xs:enumeration value="CHILD_IS_TOO_OLD"/>
          <xs:enumeration value="AGE_NOT_SET"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_PERSON_MISMATCH"/>
          <xs:enumeration value="PAYMENT_CYCLE_TYPE_NOT_ALLOWED_EXCEPTION"/>
          <xs:enumeration value="SUBSCRIPTION_DOES_NOT_BELONG_TO_MEMBER"/>
          <xs:enumeration value="CANNOT_DELETE_SUBSCRIPTION"/>
          <xs:enumeration value="NO_PAYMENT_AGREEMENT_FOUND"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_VALID_FOR_SALES"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_ACTIVE"/>
          <xs:enumeration value="PAYMENT_CYCLE_NOT_ALLOWED"/>
          <xs:enumeration value="SUBSCRIPTION_SALE_OUTSIDE_HOME_CLUB_NOT_ALLOWED"/>
          <xs:enumeration value="BELOW_REQUIRED_AGE_FOR_EMAIL_CAPTURE"/>
          <xs:enumeration value="ROLE_NOT_FOUND"/>
          <xs:enumeration value="ACTION_NOT_ALLOWED"/>
          <xs:enumeration value="SCOPE_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_BLOCKED"/>
          <xs:enumeration value="ROLE_NOT_ASSIGNED"/>
          <xs:enumeration value="INVALID_EMPLOYEE_KEY"/>
          <xs:enumeration value="MISSING_PRIVILEGES"/>
          <xs:enumeration value="DATE_PARSE_ERROR"/>
          <xs:enumeration value="DATE_INVALID"/>
          <xs:enumeration value="CLIPCARD_NOT_ACTIVE"/>
          <xs:enumeration value="GROUP_ALREADY_EXIST"/>
          <xs:enumeration value="EMPLOYEE_AND_PERSON_KEY_SET"/>
          <xs:enumeration value="MULTIPLE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="MULTIPLE_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_ACTIVE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="errorDetailType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="MISSING_ACCESS_GROUP"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_DATE"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_TIME"/>
          <xs:enumeration value="MISSING_PRIVILEGES_COUNT"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="ALLOWED_BOOKING_WINDOW_TIMESLOT"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="activityColor">
        <xs:restriction base="xs:string">
          <xs:enumeration value="WHITE"/>
          <xs:enumeration value="YELLOW"/>
          <xs:enumeration value="GREEN"/>
          <xs:enumeration value="BLUE"/>
          <xs:enumeration value="ORANGE"/>
          <xs:enumeration value="RED"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType final="#all" name="resourceBookingAvailabilityArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:resourceBookingAvailability"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="courtBookingArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:courtBooking"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="courtActivityArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:courtActivity"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="courtResourceArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:courtResource"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </types>
  <message name="ResourceBookingAPI_getFutureCourtBookings">
    <part name="personKey" type="tns:apiPersonKey"/>
  </message>
  <message name="ResourceBookingAPI_getCourtActivitiesResponse">
    <part name="return" type="tns:courtActivityArray"/>
  </message>
  <message name="ResourceBookingAPI_getCourtResources">
    <part name="centerKey" type="xsd:int"/>
    <part name="courtActivityKey" type="xsd:int"/>
  </message>
  <message name="ResourceBookingAPI_getStartTimes">
    <part name="courtResourceKey" type="tns:compositeKey"/>
    <part name="courtActivityKey" type="xsd:int"/>
    <part name="date" type="xsd:string"/>
  </message>
  <message name="ResourceBookingAPI_createCourtBooking">
    <part name="parameters" type="tns:createCourtBookingParameter"/>
  </message>
  <message name="ResourceBookingAPI_getStartTimesResponse">
    <part name="return" type="ns1:stringArray"/>
  </message>
  <message name="ResourceBookingAPI_getFutureCourtBookingsResponse">
    <part name="return" type="tns:courtBookingArray"/>
  </message>
  <message name="ResourceBookingAPI_getCourtResourcesResponse">
    <part name="return" type="tns:courtResourceArray"/>
  </message>
  <message name="ResourceBookingAPI_cancelCourtBooking">
    <part name="courtBookingKey" type="tns:compositeKey"/>
    <part name="personKey" type="tns:apiPersonKey"/>
  </message>
  <message name="ResourceBookingAPI_getAvailableStartTimes">
    <part name="centerKey" type="xsd:int"/>
    <part name="courtActivityKey" type="xsd:int"/>
    <part name="date" type="xsd:string"/>
  </message>
  <message name="ResourceBookingAPI_getAvailableStartTimesResponse">
    <part name="return" type="tns:resourceBookingAvailabilityArray"/>
  </message>
  <message name="ResourceBookingAPI_createCourtBookingResponse">
    <part name="return" type="tns:courtBooking"/>
  </message>
  <message name="ResourceBookingAPI_getCourtActivities">
    <part name="centerKey" type="xsd:int"/>
  </message>
  <message name="ResourceBookingAPI_cancelCourtBookingResponse"/>
  <message name="APIException">
    <part element="tns:APIException" name="APIException"/>
  </message>
  <portType name="ResourceBookingAPI">
    <operation name="cancelCourtBooking" parameterOrder="courtBookingKey personKey">
      <input message="tns:ResourceBookingAPI_cancelCourtBooking"/>
      <output message="tns:ResourceBookingAPI_cancelCourtBookingResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="createCourtBooking" parameterOrder="parameters">
      <input message="tns:ResourceBookingAPI_createCourtBooking"/>
      <output message="tns:ResourceBookingAPI_createCourtBookingResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getAvailableStartTimes" parameterOrder="centerKey courtActivityKey date">
      <input message="tns:ResourceBookingAPI_getAvailableStartTimes"/>
      <output message="tns:ResourceBookingAPI_getAvailableStartTimesResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getCourtActivities" parameterOrder="centerKey">
      <input message="tns:ResourceBookingAPI_getCourtActivities"/>
      <output message="tns:ResourceBookingAPI_getCourtActivitiesResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getCourtResources" parameterOrder="centerKey courtActivityKey">
      <input message="tns:ResourceBookingAPI_getCourtResources"/>
      <output message="tns:ResourceBookingAPI_getCourtResourcesResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getFutureCourtBookings" parameterOrder="personKey">
      <input message="tns:ResourceBookingAPI_getFutureCourtBookings"/>
      <output message="tns:ResourceBookingAPI_getFutureCourtBookingsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getStartTimes" parameterOrder="courtResourceKey courtActivityKey date">
      <input message="tns:ResourceBookingAPI_getStartTimes"/>
      <output message="tns:ResourceBookingAPI_getStartTimesResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
  </portType>
  <binding name="ResourceBookingAPIBinding" type="tns:ResourceBookingAPI">
    <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="cancelCourtBooking">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="createCourtBooking">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getAvailableStartTimes">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getCourtActivities">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getCourtResources">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getFutureCourtBookings">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getStartTimes">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
  </binding>
  <service name="ResourceBookingAPIService">
    <port binding="tns:ResourceBookingAPIBinding" name="ResourceBookingAPIPort">
      <soap:address location="https://lite-test.exerp.com/api/v5/ResourceBookingAPI"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://lite-test.exerp.com/api/v5/ResourceBookingAPI</con:endpoint></con:endpoints><con:operation id="f7e0c269-e208-456b-988c-9f5c27a099f5" isOneWay="false" action="" name="cancelCourtBooking" bindingOperationName="cancelCourtBooking" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="47ee25f3-a8ae-4723-afc3-dd9a2a7dca24" isOneWay="false" action="" name="createCourtBooking" bindingOperationName="createCourtBooking" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1322cea1-272d-4074-ab2d-29b84e3f833d" isOneWay="false" action="" name="getAvailableStartTimes" bindingOperationName="getAvailableStartTimes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3d4955c0-50ce-48cf-a1af-7ad09a635c85" isOneWay="false" action="" name="getCourtActivities" bindingOperationName="getCourtActivities" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0880e7c9-50cc-47a1-a91a-6a5ab20e4d02" isOneWay="false" action="" name="getCourtResources" bindingOperationName="getCourtResources" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3fbc4e21-46eb-496e-bf88-2e58a4ec4a8a" isOneWay="false" action="" name="getFutureCourtBookings" bindingOperationName="getFutureCourtBookings" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b764d023-a19f-4a19-851b-7eb8cbc0138a" isOneWay="false" action="" name="getStartTimes" bindingOperationName="getStartTimes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="bc4ef80f-da28-4f53-be28-2221501daba9" wsaVersion="NONE" name="SelfServiceAPIBinding" type="wsdl" bindingName="{http://v5.api.eclub.procard.dk/}SelfServiceAPIBinding" soapVersion="1_1" anonymous="optional" definition="https://lite-test.exerp.com/api/v5/SelfServiceAPI?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://lite-test.exerp.com/api/v5/SelfServiceAPI?wsdl"><con:part><con:url>https://lite-test.exerp.com/api/v5/SelfServiceAPI?wsdl</con:url><con:content><![CDATA[<definitions name="SelfServiceAPIService" targetNamespace="http://v5.api.eclub.procard.dk/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://v5.api.eclub.procard.dk/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <types>
    <xs:schema targetNamespace="http://v5.api.eclub.procard.dk/" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="APIException" type="tns:APIException"/>
      <xs:complexType name="apiPersonKey">
        <xs:complexContent>
          <xs:extension base="tns:compositeKey">
            <xs:sequence>
              <xs:element minOccurs="0" name="externalId" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="compositeKey">
        <xs:sequence>
          <xs:element name="center" type="xs:int"/>
          <xs:element name="id" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="APIException">
        <xs:sequence>
          <xs:element minOccurs="0" name="errorCode" type="tns:errorCode"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="errorDetail" type="tns:errorDetail"/>
          <xs:element minOccurs="0" name="errorMessage" type="xs:string"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="errorDetail">
        <xs:sequence>
          <xs:element minOccurs="0" name="info" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:errorDetailType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="memberCard">
        <xs:sequence>
          <xs:element name="cardId" type="xs:string"/>
          <xs:element name="cardType" type="tns:accessCardType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="personDetail">
        <xs:sequence>
          <xs:element name="allowFriendsToBook" type="xs:boolean"/>
          <xs:element minOccurs="0" name="companyRelation" type="tns:personCompanyRelation"/>
          <xs:element minOccurs="0" name="extendedAttributes">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="extendedAttribute" type="tns:extendedAttribute"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="friends">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="friend" type="tns:friend"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="memberCards">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="memberCard" type="tns:memberCard"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="person" type="tns:person"/>
          <xs:element minOccurs="0" name="personActiveDates" type="tns:personActivationDates"/>
          <xs:element minOccurs="0" name="personCommunication" type="tns:personCommunication"/>
          <xs:element minOccurs="0" name="personTypeAndStatus" type="tns:personTypeAndStatus"/>
          <xs:element minOccurs="0" name="subscriptions">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="subscription" type="tns:subscription"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="personCompanyRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="agreement" type="tns:companyAgreement"/>
          <xs:element minOccurs="0" name="companyName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="companyAgreement">
        <xs:sequence>
          <xs:element minOccurs="0" name="allowedCorporateRelationTypes">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="allowedCorporateRelationType" type="tns:corporateRelationType"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="availabilityCenters" nillable="true" type="tns:center"/>
          <xs:element name="companyAgreementId" type="tns:compositeSubKey"/>
          <xs:element name="companyKey" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="contactPerson" type="tns:apiPersonKey"/>
          <xs:element name="documentationRequired" type="xs:boolean"/>
          <xs:element name="employeeNumberRequired" type="xs:boolean"/>
          <xs:element minOccurs="0" name="maximumFamilyMembers" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="privilegeSets" nillable="true" type="tns:privilegeSetAndSponsorship"/>
          <xs:element name="ref" type="xs:string"/>
          <xs:element minOccurs="0" name="requiresOtherPayer" type="xs:boolean"/>
          <xs:element minOccurs="0" name="state" type="tns:companyAgreementStateType"/>
          <xs:element minOccurs="0" name="validity" type="xs:int"/>
          <xs:element minOccurs="0" name="validityUnit" type="tns:timeUnit"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="center">
        <xs:sequence>
          <xs:element minOccurs="0" name="address" type="tns:address"/>
          <xs:element minOccurs="0" name="centerId" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="shortName" type="xs:string"/>
          <xs:element minOccurs="0" name="webName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="address">
        <xs:sequence>
          <xs:element name="address1" type="xs:string"/>
          <xs:element minOccurs="0" name="address2" type="xs:string"/>
          <xs:element minOccurs="0" name="address3" type="xs:string"/>
          <xs:element minOccurs="0" name="coName" type="xs:string"/>
          <xs:element name="country" type="xs:string"/>
          <xs:element minOccurs="0" name="county" type="xs:string"/>
          <xs:element minOccurs="0" name="province" type="xs:string"/>
          <xs:element name="zip" type="xs:string"/>
          <xs:element minOccurs="0" name="zipName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="compositeSubKey">
        <xs:complexContent>
          <xs:extension base="tns:compositeKey">
            <xs:sequence>
              <xs:element name="subId" type="xs:int"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="privilegeSetAndSponsorship">
        <xs:sequence>
          <xs:element minOccurs="0" name="privilegeSet" type="xs:int"/>
          <xs:element minOccurs="0" name="sponsorship" type="xs:decimal"/>
          <xs:element minOccurs="0" name="sponsorshipType" type="tns:sponsorshipType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="extendedAttribute">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:string"/>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="friend">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="personKey" type="tns:compositeKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="person">
        <xs:sequence>
          <xs:element minOccurs="0" name="address" type="tns:address"/>
          <xs:element minOccurs="0" name="birthday" type="xs:string"/>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
          <xs:element minOccurs="0" name="corporateRelationType" type="tns:corporateRelationType"/>
          <xs:element minOccurs="0" name="employeeNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="externalId" type="xs:string"/>
          <xs:element minOccurs="0" name="firstName" type="xs:string"/>
          <xs:element minOccurs="0" name="lastName" type="xs:string"/>
          <xs:element name="male" type="xs:boolean"/>
          <xs:element minOccurs="0" name="nickName" type="xs:string"/>
          <xs:element minOccurs="0" name="passport" type="tns:passport"/>
          <xs:element minOccurs="0" name="personId" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="personType" type="tns:personType"/>
          <xs:element minOccurs="0" name="relatedPersonId" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="salutation" type="xs:string"/>
          <xs:element minOccurs="0" name="socialSecurityNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="status" type="tns:personStatus"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="passport">
        <xs:sequence>
          <xs:element name="number" type="xs:string"/>
          <xs:element minOccurs="0" name="issuanceCountry" type="xs:string"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="personActivationDates">
        <xs:sequence>
          <xs:element minOccurs="0" name="firstActiveStartDate" type="xs:string"/>
          <xs:element minOccurs="0" name="lastActiveEndDate" type="xs:string"/>
          <xs:element minOccurs="0" name="lastActiveStartDate" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="personCommunication">
        <xs:sequence>
          <xs:element minOccurs="0" name="allowChargedSMS" type="xs:boolean"/>
          <xs:element minOccurs="0" name="allowEmail" type="xs:boolean"/>
          <xs:element minOccurs="0" name="allowLetter" type="xs:boolean"/>
          <xs:element minOccurs="0" name="allowPhone" type="xs:boolean"/>
          <xs:element minOccurs="0" name="allowSMS" type="xs:boolean"/>
          <xs:element minOccurs="0" name="email" type="xs:string"/>
          <xs:element minOccurs="0" name="homePhoneNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="mobilePhoneNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="personId" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="quickChannel" type="tns:quickChannel"/>
          <xs:element minOccurs="0" name="wishToReceiveEmailNewsLetters" type="xs:boolean"/>
          <xs:element minOccurs="0" name="wishToReceiveThirdPartyOffers" type="xs:boolean"/>
          <xs:element minOccurs="0" name="workPhoneNumber" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="personTypeAndStatus">
        <xs:sequence>
          <xs:element name="blacklisted" type="xs:boolean"/>
          <xs:element minOccurs="0" name="companyAgreementId" type="tns:compositeSubKey"/>
          <xs:element minOccurs="0" name="internalComment" type="xs:string"/>
          <xs:element minOccurs="0" name="messageToMember" type="xs:string"/>
          <xs:element minOccurs="0" name="personId" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="personStatus" type="tns:personStatus"/>
          <xs:element minOccurs="0" name="personType" type="tns:personType"/>
          <xs:element name="suspended" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="subscription">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="assignedAddOns" nillable="true" type="tns:assignedAddOn"/>
          <xs:element minOccurs="0" name="billedUntilDate" type="xs:string"/>
          <xs:element minOccurs="0" name="bindingEndDate" type="xs:string"/>
          <xs:element minOccurs="0" name="changeRestrictionEnabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="endDate" type="xs:string"/>
          <xs:element name="freeDays" type="xs:int"/>
          <xs:element minOccurs="0" name="paymentAgreementKey" type="tns:compositeSubKey"/>
          <xs:element minOccurs="0" name="personId" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="price" type="xs:string"/>
          <xs:element minOccurs="0" name="product" type="tns:subscriptionProduct"/>
          <xs:element minOccurs="0" name="startDate" type="xs:string"/>
          <xs:element minOccurs="0" name="state" type="tns:subscriptionState"/>
          <xs:element minOccurs="0" name="subState" type="tns:subscriptionSubState"/>
          <xs:element minOccurs="0" name="subscriptionId" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="windowOfOpportunity" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="assignedAddOn">
        <xs:sequence>
          <xs:element minOccurs="0" name="endDate" type="xs:string"/>
          <xs:element minOccurs="0" name="initialPeriodEndDate" type="xs:string"/>
          <xs:element minOccurs="0" name="initialPeriodPrice" type="xs:decimal"/>
          <xs:element minOccurs="0" name="initialPeriodStartDate" type="xs:string"/>
          <xs:element name="key" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="price" type="xs:string"/>
          <xs:element name="pricePeriodLength" type="xs:int"/>
          <xs:element minOccurs="0" name="pricePeriodUnit" type="tns:timeUnit"/>
          <xs:element minOccurs="0" name="startDate" type="xs:string"/>
          <xs:element minOccurs="0" name="startupCampaignEndDate" type="xs:string"/>
          <xs:element minOccurs="0" name="startupCampaignPrice" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="subscriptionProduct">
        <xs:sequence>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element minOccurs="0" name="externalId" type="xs:string"/>
          <xs:element minOccurs="0" name="globalId" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element name="periodLength" type="xs:int"/>
          <xs:element minOccurs="0" name="periodUnit" type="tns:timeUnit"/>
          <xs:element minOccurs="0" name="rank" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="sellingPoints" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:subscriptionType"/>
          <xs:element minOccurs="0" name="webname" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="errorCode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UNKNOWN_ERROR"/>
          <xs:enumeration value="CREATE_EXCEPTION"/>
          <xs:enumeration value="REMOVE_EXCEPTION"/>
          <xs:enumeration value="SECURITY"/>
          <xs:enumeration value="SECURITY_ROLE"/>
          <xs:enumeration value="ARGUMENT_IS_NULL"/>
          <xs:enumeration value="ILLEGAL_ARGUMENT"/>
          <xs:enumeration value="PARSE_ERROR"/>
          <xs:enumeration value="ENTITY_NOT_FOUND"/>
          <xs:enumeration value="CONFLICTING_CHANGE"/>
          <xs:enumeration value="INVALID_ZIPCODE"/>
          <xs:enumeration value="INVALID_SOCIAL_SECURITY_NUMBER"/>
          <xs:enumeration value="INVALID_COMPANYID"/>
          <xs:enumeration value="INVALID_PHONE_NUMBER"/>
          <xs:enumeration value="CLIENT"/>
          <xs:enumeration value="ENTITY_IDENTIFIER_STATUS"/>
          <xs:enumeration value="DUPLICATE_PERSON"/>
          <xs:enumeration value="DUPLICATE_EXTERNAL_ID"/>
          <xs:enumeration value="FRIEND_RESTRICTION"/>
          <xs:enumeration value="EMPLOYEE_ALREADY_EXIST"/>
          <xs:enumeration value="DUPLICATE_COMPANY"/>
          <xs:enumeration value="EXPENSIVE_SEARCH"/>
          <xs:enumeration value="MULTIPLE_PERSONS_FOUND"/>
          <xs:enumeration value="NOT_DELIVERABLE"/>
          <xs:enumeration value="CIRCULAR_REFERENCE"/>
          <xs:enumeration value="REFERENCE"/>
          <xs:enumeration value="PERSON_NOT_EDITABLE"/>
          <xs:enumeration value="PERSON_TRANSFER"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_FOUND"/>
          <xs:enumeration value="ACCOUNT_RECEIVABLE_IS_BLOCKED"/>
          <xs:enumeration value="BANK_ACCOUNT_IS_BLOCKED"/>
          <xs:enumeration value="DEBIT_MAX"/>
          <xs:enumeration value="INVALID_PAYMENT_AGREEMENT"/>
          <xs:enumeration value="INVALID_BANK_INFO"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_CREDITOR_FOUND"/>
          <xs:enumeration value="PARTICIPATION_TIME_INTERVAL_OVERLAP"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLACKLISTED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLOCKED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="BOOKING_WAITING_LIST_FULL"/>
          <xs:enumeration value="BOOKING_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_RESTRICTION"/>
          <xs:enumeration value="OUTSIDE_BOOKING_WINDOW_EXCEPTION"/>
          <xs:enumeration value="CUSTOMER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="CENTER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_COLLECTION_NOT_PAID_FOR"/>
          <xs:enumeration value="NO_PRIVILEGE_FOR_PARTICIPATION"/>
          <xs:enumeration value="ALL_PARTICIPATIONS_TAKEN"/>
          <xs:enumeration value="SHOWUP_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_CANCELLATION"/>
          <xs:enumeration value="TOO_EARLY_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="TOO_EARLY_TO_SHOWUP"/>
          <xs:enumeration value="TOO_LATE_TO_SHOWUP"/>
          <xs:enumeration value="PARTICIPANT_TOO_MANY_OPEN_BOOKINGS"/>
          <xs:enumeration value="RESOURCE_OCCUPIED"/>
          <xs:enumeration value="RESOURCE_START_TIME_RESTRICTION"/>
          <xs:enumeration value="RESOURCE_TIME_RESTRICTION"/>
          <xs:enumeration value="ACTIVITY_STATE_INVALID"/>
          <xs:enumeration value="NO_PARENT_BOOKING_FOUND"/>
          <xs:enumeration value="STAFF_BLACKLISTED"/>
          <xs:enumeration value="STAFF_OCCUPIED"/>
          <xs:enumeration value="TOO_MANY_SUB_STAFF_USAGES"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_BOOKED"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_SHOWEDUP"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_BOOKING"/>
          <xs:enumeration value="LISTS_FULL"/>
          <xs:enumeration value="TOO_LATE_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="PARTICIPANT_OCCUPIED"/>
          <xs:enumeration value="FULL_BOOKING_RESTRICTION"/>
          <xs:enumeration value="IN_ADVANCE_LIMIT_BOOKING_RESTRICTION"/>
          <xs:enumeration value="PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="PARTICIPANT_BLACKLISTED"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BOOKING"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CENTER"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CUSTOMER"/>
          <xs:enumeration value="UNABLE_TO_REFRESH_WAITING_LIST"/>
          <xs:enumeration value="TOO_FEW_PARTICIPANTS"/>
          <xs:enumeration value="FREEZE_MAX_PREBOOK_PERIOD"/>
          <xs:enumeration value="FREEZE_MIN_OR_MAX_DURATION"/>
          <xs:enumeration value="FREEZE_TOO_LONG"/>
          <xs:enumeration value="FREEZE_TOO_SHORT"/>
          <xs:enumeration value="FREEZE_MAX_NUMBER_REACHED"/>
          <xs:enumeration value="TOO_MANY_FREEZES_PERIOD"/>
          <xs:enumeration value="TOO_MANY_FREEZES_TOTAL"/>
          <xs:enumeration value="FREEZE_MAX_TOTAL_DURATION_REACHED"/>
          <xs:enumeration value="FREEZE_NOT_ALLOWED"/>
          <xs:enumeration value="FREEZE_START_AND_STOP_DATE"/>
          <xs:enumeration value="FREEZE_START_IN_THE_PAST"/>
          <xs:enumeration value="FREEZE_END_BEFORE_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_AFTER_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_BEFORE_SUBSCRIPTION_START"/>
          <xs:enumeration value="FREEZE_OVERLAP"/>
          <xs:enumeration value="FREEZE_FUTURE_FREEZE"/>
          <xs:enumeration value="BOOKINGS_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="PARTICIPATION_ALREADY_CANCELLED"/>
          <xs:enumeration value="PARTICIPATION_CANCELLED"/>
          <xs:enumeration value="MINIMUM_AGE_EXCEPTION"/>
          <xs:enumeration value="TEMPLATE_NOT_DEFINED"/>
          <xs:enumeration value="INVALID_OTHER_PAYER_TYPE"/>
          <xs:enumeration value="DIFFERENT_COUNTRY_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_IS_NOT_STAFF"/>
          <xs:enumeration value="OTHER_PAYER_HAS_OTHER_PAYER"/>
          <xs:enumeration value="NO_VALID_ACCOUNT_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_STATUS_NOT_VALID_FOR_ATTEND"/>
          <xs:enumeration value="ATTENDING_PERSON_BLACKLISTED"/>
          <xs:enumeration value="MISSING_PRIVILEGE_FOR_ATTEND"/>
          <xs:enumeration value="ATTEND_NOT_POSSIBLE_AT_SPECIFIED_TIME"/>
          <xs:enumeration value="CLIPCARD_NOT_USABLE"/>
          <xs:enumeration value="TOO_MANY_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="NOT_ENOUGH_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="LOGIN_BLOCKED"/>
          <xs:enumeration value="PASSWORD_EXPIRED"/>
          <xs:enumeration value="PERSON_DELETED"/>
          <xs:enumeration value="PERSON_ANONYMIZED"/>
          <xs:enumeration value="INVALID_PICTURE"/>
          <xs:enumeration value="PERSON_NOT_FOUND_FOR_VENDING"/>
          <xs:enumeration value="TOO_MANY_MATCHES"/>
          <xs:enumeration value="PASSWORD_NOT_SET"/>
          <xs:enumeration value="PASSWORD_TOO_SHORT"/>
          <xs:enumeration value="CANNOT_PARTICIPATE_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="INVALID_STATUS"/>
          <xs:enumeration value="CONCURRENT_CALLS"/>
          <xs:enumeration value="CANNOT_UPDATE_COMPLETED_QUESTIONNAIRE"/>
          <xs:enumeration value="MISSING_ADMIN_FEE_PRODUCT"/>
          <xs:enumeration value="LOGIN_NOT_VALID"/>
          <xs:enumeration value="ACTIVE_TASKS_ALREADY_EXISTS_FOR_PERSON"/>
          <xs:enumeration value="TASK_TYPE_EXTERNAL_KEY_DOES_NOT_EXIST"/>
          <xs:enumeration value="SUBSCRIPTION_OF_SAME_TYPE"/>
          <xs:enumeration value="PERSON_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_KEY_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_BLOCKED"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_UNBLOCKED"/>
          <xs:enumeration value="INVALID_EMAIL"/>
          <xs:enumeration value="CENTER_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_TYPE_NOT_STRING"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_UPDATE_NOT_ALLOWED"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_VALUE_NOT_ALLOWED"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="CHILD_MUST_HAVE_AT_LEAST_ONE_PARENT"/>
          <xs:enumeration value="CHILD_HAS_TOO_MANY_PARENTS"/>
          <xs:enumeration value="PARENT_HAS_TOO_MANY_CHILDREN"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_ALREADY_EXISTS"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_DOES_NOT_EXIST"/>
          <xs:enumeration value="GUARDIAN_IS_TOO_YOUNG"/>
          <xs:enumeration value="CHILD_IS_TOO_OLD"/>
          <xs:enumeration value="AGE_NOT_SET"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_PERSON_MISMATCH"/>
          <xs:enumeration value="PAYMENT_CYCLE_TYPE_NOT_ALLOWED_EXCEPTION"/>
          <xs:enumeration value="SUBSCRIPTION_DOES_NOT_BELONG_TO_MEMBER"/>
          <xs:enumeration value="CANNOT_DELETE_SUBSCRIPTION"/>
          <xs:enumeration value="NO_PAYMENT_AGREEMENT_FOUND"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_VALID_FOR_SALES"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_ACTIVE"/>
          <xs:enumeration value="PAYMENT_CYCLE_NOT_ALLOWED"/>
          <xs:enumeration value="SUBSCRIPTION_SALE_OUTSIDE_HOME_CLUB_NOT_ALLOWED"/>
          <xs:enumeration value="BELOW_REQUIRED_AGE_FOR_EMAIL_CAPTURE"/>
          <xs:enumeration value="ROLE_NOT_FOUND"/>
          <xs:enumeration value="ACTION_NOT_ALLOWED"/>
          <xs:enumeration value="SCOPE_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_BLOCKED"/>
          <xs:enumeration value="ROLE_NOT_ASSIGNED"/>
          <xs:enumeration value="INVALID_EMPLOYEE_KEY"/>
          <xs:enumeration value="MISSING_PRIVILEGES"/>
          <xs:enumeration value="DATE_PARSE_ERROR"/>
          <xs:enumeration value="DATE_INVALID"/>
          <xs:enumeration value="CLIPCARD_NOT_ACTIVE"/>
          <xs:enumeration value="GROUP_ALREADY_EXIST"/>
          <xs:enumeration value="EMPLOYEE_AND_PERSON_KEY_SET"/>
          <xs:enumeration value="MULTIPLE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="MULTIPLE_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_ACTIVE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="errorDetailType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="MISSING_ACCESS_GROUP"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_DATE"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_TIME"/>
          <xs:enumeration value="MISSING_PRIVILEGES_COUNT"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="ALLOWED_BOOKING_WINDOW_TIMESLOT"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="accessCardType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="BARCODE"/>
          <xs:enumeration value="MAGNETICCARD"/>
          <xs:enumeration value="RFCARD"/>
          <xs:enumeration value="PIN"/>
          <xs:enumeration value="ANTIDROWN"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="corporateRelationType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="EMPLOYEE"/>
          <xs:enumeration value="FAMILY_OF_EMPLOYEE"/>
          <xs:enumeration value="OTHER"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="sponsorshipType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NONE"/>
          <xs:enumeration value="FULL"/>
          <xs:enumeration value="FIXED"/>
          <xs:enumeration value="PERCENTAGE"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="companyAgreementStateType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UNDERTARGET"/>
          <xs:enumeration value="ACTIVE"/>
          <xs:enumeration value="STOPNEW"/>
          <xs:enumeration value="OLD"/>
          <xs:enumeration value="AWAITING_ACTIVATION"/>
          <xs:enumeration value="BLOCKED"/>
          <xs:enumeration value="DELETED"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="timeUnit">
        <xs:restriction base="xs:string">
          <xs:enumeration value="WEEK"/>
          <xs:enumeration value="DAY"/>
          <xs:enumeration value="MONTH"/>
          <xs:enumeration value="YEAR"/>
          <xs:enumeration value="HOUR"/>
          <xs:enumeration value="MINUTE"/>
          <xs:enumeration value="SECOND"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="personType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="PRIVATE"/>
          <xs:enumeration value="STUDENT"/>
          <xs:enumeration value="STAFF"/>
          <xs:enumeration value="FRIEND"/>
          <xs:enumeration value="CORPORATE"/>
          <xs:enumeration value="ONEMANCORPORATE"/>
          <xs:enumeration value="FAMILY"/>
          <xs:enumeration value="SENIOR"/>
          <xs:enumeration value="GUEST"/>
          <xs:enumeration value="CHILD"/>
          <xs:enumeration value="EXTERNAL_STAFF"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="personStatus">
        <xs:restriction base="xs:string">
          <xs:enumeration value="LEAD"/>
          <xs:enumeration value="ACTIVE"/>
          <xs:enumeration value="INACTIVE"/>
          <xs:enumeration value="TEMPORARYINACTIVE"/>
          <xs:enumeration value="TRANSFERRED"/>
          <xs:enumeration value="DUPLICATE"/>
          <xs:enumeration value="PROSPECT"/>
          <xs:enumeration value="CONTACT"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="quickChannel">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NONE"/>
          <xs:enumeration value="EMAIL"/>
          <xs:enumeration value="SMS"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="subscriptionType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="CASH"/>
          <xs:enumeration value="EFT"/>
          <xs:enumeration value="RECURRING_CLIPCARD"/>
          <xs:enumeration value="PROSPECT"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="subscriptionState">
        <xs:restriction base="xs:string">
          <xs:enumeration value="ACTIVE"/>
          <xs:enumeration value="ENDED"/>
          <xs:enumeration value="FROZEN"/>
          <xs:enumeration value="WINDOW"/>
          <xs:enumeration value="CREATED"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="subscriptionSubState">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NONE"/>
          <xs:enumeration value="AWAITING_ACTIVATION"/>
          <xs:enumeration value="UPGRADED"/>
          <xs:enumeration value="DOWNGRADED"/>
          <xs:enumeration value="EXTENDED"/>
          <xs:enumeration value="TRANSFERRED"/>
          <xs:enumeration value="REGRETTED"/>
          <xs:enumeration value="CANCELLED"/>
          <xs:enumeration value="BLOCKED"/>
          <xs:enumeration value="CHANGED"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
  </types>
  <message name="SelfServiceAPI_findPersonByAccessCardAndEmailResponse">
    <part name="return" type="tns:personDetail"/>
  </message>
  <message name="SelfServiceAPI_validateEmployeePasswordResponse">
    <part name="return" type="tns:apiPersonKey"/>
  </message>
  <message name="SelfServiceAPI_setPassword">
    <part name="personKey" type="tns:apiPersonKey"/>
    <part name="newPassword" type="xsd:string"/>
    <part name="comment" type="xsd:string"/>
  </message>
  <message name="SelfServiceAPI_validatePincodeResponse">
    <part name="return" type="xsd:boolean"/>
  </message>
  <message name="SelfServiceAPI_findPersonByAccessCardAndEmail">
    <part name="memberCard" type="tns:memberCard"/>
    <part name="email" type="xsd:string"/>
  </message>
  <message name="SelfServiceAPI_validatePincode">
    <part name="personKey" type="tns:apiPersonKey"/>
    <part name="pincode" type="xsd:string"/>
  </message>
  <message name="SelfServiceAPI_updatePincodeResponse">
    <part name="return" type="xsd:boolean"/>
  </message>
  <message name="SelfServiceAPI_updatePasswordResponse">
    <part name="return" type="xsd:boolean"/>
  </message>
  <message name="SelfServiceAPI_validatePasswordResponse">
    <part name="return" type="xsd:boolean"/>
  </message>
  <message name="SelfServiceAPI_findPersonByEmailResponse">
    <part name="return" type="tns:apiPersonKey"/>
  </message>
  <message name="SelfServiceAPI_findPersonByAccessCardResponse">
    <part name="return" type="tns:apiPersonKey"/>
  </message>
  <message name="SelfServiceAPI_findPersonByAccessCard">
    <part name="cardId" type="xsd:string"/>
    <part name="cardType" type="tns:accessCardType"/>
  </message>
  <message name="SelfServiceAPI_setPincode">
    <part name="personKey" type="tns:apiPersonKey"/>
    <part name="newPincode" type="xsd:string"/>
    <part name="comment" type="xsd:string"/>
  </message>
  <message name="SelfServiceAPI_validatePassword">
    <part name="personKey" type="tns:apiPersonKey"/>
    <part name="password" type="xsd:string"/>
  </message>
  <message name="SelfServiceAPI_setPasswordResponse">
    <part name="return" type="xsd:boolean"/>
  </message>
  <message name="SelfServiceAPI_updatePassword">
    <part name="personKey" type="tns:apiPersonKey"/>
    <part name="currentPassword" type="xsd:string"/>
    <part name="newPassword" type="xsd:string"/>
  </message>
  <message name="SelfServiceAPI_updatePincode">
    <part name="personKey" type="tns:apiPersonKey"/>
    <part name="currentPincode" type="xsd:string"/>
    <part name="newPincode" type="xsd:string"/>
  </message>
  <message name="APIException">
    <part element="tns:APIException" name="APIException"/>
  </message>
  <message name="SelfServiceAPI_setPincodeResponse"/>
  <message name="SelfServiceAPI_validateEmployeePassword">
    <part name="employeeId" type="xsd:string"/>
    <part name="password" type="xsd:string"/>
  </message>
  <message name="SelfServiceAPI_findPersonByEmail">
    <part name="email" type="xsd:string"/>
  </message>
  <portType name="SelfServiceAPI">
    <operation name="findPersonByAccessCard" parameterOrder="cardId cardType">
      <input message="tns:SelfServiceAPI_findPersonByAccessCard"/>
      <output message="tns:SelfServiceAPI_findPersonByAccessCardResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="findPersonByAccessCardAndEmail" parameterOrder="memberCard email">
      <input message="tns:SelfServiceAPI_findPersonByAccessCardAndEmail"/>
      <output message="tns:SelfServiceAPI_findPersonByAccessCardAndEmailResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="findPersonByEmail" parameterOrder="email">
      <input message="tns:SelfServiceAPI_findPersonByEmail"/>
      <output message="tns:SelfServiceAPI_findPersonByEmailResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="setPassword" parameterOrder="personKey newPassword comment">
      <input message="tns:SelfServiceAPI_setPassword"/>
      <output message="tns:SelfServiceAPI_setPasswordResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="setPincode" parameterOrder="personKey newPincode comment">
      <input message="tns:SelfServiceAPI_setPincode"/>
      <output message="tns:SelfServiceAPI_setPincodeResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="updatePassword" parameterOrder="personKey currentPassword newPassword">
      <input message="tns:SelfServiceAPI_updatePassword"/>
      <output message="tns:SelfServiceAPI_updatePasswordResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="updatePincode" parameterOrder="personKey currentPincode newPincode">
      <input message="tns:SelfServiceAPI_updatePincode"/>
      <output message="tns:SelfServiceAPI_updatePincodeResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="validateEmployeePassword" parameterOrder="employeeId password">
      <input message="tns:SelfServiceAPI_validateEmployeePassword"/>
      <output message="tns:SelfServiceAPI_validateEmployeePasswordResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="validatePassword" parameterOrder="personKey password">
      <input message="tns:SelfServiceAPI_validatePassword"/>
      <output message="tns:SelfServiceAPI_validatePasswordResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="validatePincode" parameterOrder="personKey pincode">
      <input message="tns:SelfServiceAPI_validatePincode"/>
      <output message="tns:SelfServiceAPI_validatePincodeResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
  </portType>
  <binding name="SelfServiceAPIBinding" type="tns:SelfServiceAPI">
    <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="findPersonByAccessCard">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="findPersonByAccessCardAndEmail">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="findPersonByEmail">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="setPassword">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="setPincode">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="updatePassword">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="updatePincode">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="validateEmployeePassword">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="validatePassword">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="validatePincode">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
  </binding>
  <service name="SelfServiceAPIService">
    <port binding="tns:SelfServiceAPIBinding" name="SelfServiceAPIPort">
      <soap:address location="https://lite-test.exerp.com/api/v5/SelfServiceAPI"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://lite-test.exerp.com/api/v5/SelfServiceAPI</con:endpoint></con:endpoints><con:operation id="acc238ef-f511-48bf-bef6-3b9104ddead8" isOneWay="false" action="" name="findPersonByAccessCard" bindingOperationName="findPersonByAccessCard" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="54c633ec-b06a-4ec9-8369-f1c128807d20" isOneWay="false" action="" name="findPersonByAccessCardAndEmail" bindingOperationName="findPersonByAccessCardAndEmail" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="88a23693-8071-4c32-9722-609352953b30" isOneWay="false" action="" name="findPersonByEmail" bindingOperationName="findPersonByEmail" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8039f646-ab61-4bc7-9404-a468fad407f8" name="findPersonByEmail"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://skilld.exerp.qa/api/v5/SelfServiceAPI</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:findPersonByEmail>
         <email>exerpwlp@mailinator.com</email>
      </v5:findPersonByEmail>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>100emp1</con:username><con:password>vombat</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://v5.api.eclub.procard.dk/SelfServiceAPI/findPersonByEmailRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="21b24d13-2235-4a5e-987b-1117e68bc92b" isOneWay="false" action="" name="setPassword" bindingOperationName="setPassword" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4a609993-ac87-41fb-bb64-c805b29e789e" isOneWay="false" action="" name="setPincode" bindingOperationName="setPincode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="56392642-9dfb-46a8-8589-403000df5d13" isOneWay="false" action="" name="updatePassword" bindingOperationName="updatePassword" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9a1639b4-4fd6-4883-8640-907b4eca9fd5" isOneWay="false" action="" name="updatePincode" bindingOperationName="updatePincode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="12eb9747-3d12-4b73-b565-a548f1079ea7" isOneWay="false" action="" name="validateEmployeePassword" bindingOperationName="validateEmployeePassword" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="29ccb904-c17a-43d4-8daa-9e5770174196" isOneWay="false" action="" name="validatePassword" bindingOperationName="validatePassword" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b616bf93-87cb-452c-8764-b4ddd9358b9a" isOneWay="false" action="" name="validatePincode" bindingOperationName="validatePincode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="8edb7943-5227-4086-b6d8-295d895fbad5" wsaVersion="NONE" name="SocialAPIBinding" type="wsdl" bindingName="{http://v5.api.eclub.procard.dk/}SocialAPIBinding" soapVersion="1_1" anonymous="optional" definition="https://lite-test.exerp.com/api/v5/SocialAPI?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://lite-test.exerp.com/api/v5/SocialAPI?wsdl"><con:part><con:url>https://lite-test.exerp.com/api/v5/SocialAPI?wsdl</con:url><con:content><![CDATA[<definitions name="SocialAPIService" targetNamespace="http://v5.api.eclub.procard.dk/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://v5.api.eclub.procard.dk/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <types>
    <xs:schema targetNamespace="http://v5.api.eclub.procard.dk/" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="APIException" type="tns:APIException"/>
      <xs:complexType name="apiPersonKey">
        <xs:complexContent>
          <xs:extension base="tns:compositeKey">
            <xs:sequence>
              <xs:element minOccurs="0" name="externalId" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="compositeKey">
        <xs:sequence>
          <xs:element name="center" type="xs:int"/>
          <xs:element name="id" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="APIException">
        <xs:sequence>
          <xs:element minOccurs="0" name="errorCode" type="tns:errorCode"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="errorDetail" type="tns:errorDetail"/>
          <xs:element minOccurs="0" name="errorMessage" type="xs:string"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="errorDetail">
        <xs:sequence>
          <xs:element minOccurs="0" name="info" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:errorDetailType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="errorCode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UNKNOWN_ERROR"/>
          <xs:enumeration value="CREATE_EXCEPTION"/>
          <xs:enumeration value="REMOVE_EXCEPTION"/>
          <xs:enumeration value="SECURITY"/>
          <xs:enumeration value="SECURITY_ROLE"/>
          <xs:enumeration value="ARGUMENT_IS_NULL"/>
          <xs:enumeration value="ILLEGAL_ARGUMENT"/>
          <xs:enumeration value="PARSE_ERROR"/>
          <xs:enumeration value="ENTITY_NOT_FOUND"/>
          <xs:enumeration value="CONFLICTING_CHANGE"/>
          <xs:enumeration value="INVALID_ZIPCODE"/>
          <xs:enumeration value="INVALID_SOCIAL_SECURITY_NUMBER"/>
          <xs:enumeration value="INVALID_COMPANYID"/>
          <xs:enumeration value="INVALID_PHONE_NUMBER"/>
          <xs:enumeration value="CLIENT"/>
          <xs:enumeration value="ENTITY_IDENTIFIER_STATUS"/>
          <xs:enumeration value="DUPLICATE_PERSON"/>
          <xs:enumeration value="DUPLICATE_EXTERNAL_ID"/>
          <xs:enumeration value="FRIEND_RESTRICTION"/>
          <xs:enumeration value="EMPLOYEE_ALREADY_EXIST"/>
          <xs:enumeration value="DUPLICATE_COMPANY"/>
          <xs:enumeration value="EXPENSIVE_SEARCH"/>
          <xs:enumeration value="MULTIPLE_PERSONS_FOUND"/>
          <xs:enumeration value="NOT_DELIVERABLE"/>
          <xs:enumeration value="CIRCULAR_REFERENCE"/>
          <xs:enumeration value="REFERENCE"/>
          <xs:enumeration value="PERSON_NOT_EDITABLE"/>
          <xs:enumeration value="PERSON_TRANSFER"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_FOUND"/>
          <xs:enumeration value="ACCOUNT_RECEIVABLE_IS_BLOCKED"/>
          <xs:enumeration value="BANK_ACCOUNT_IS_BLOCKED"/>
          <xs:enumeration value="DEBIT_MAX"/>
          <xs:enumeration value="INVALID_PAYMENT_AGREEMENT"/>
          <xs:enumeration value="INVALID_BANK_INFO"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_CREDITOR_FOUND"/>
          <xs:enumeration value="PARTICIPATION_TIME_INTERVAL_OVERLAP"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLACKLISTED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLOCKED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="BOOKING_WAITING_LIST_FULL"/>
          <xs:enumeration value="BOOKING_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_RESTRICTION"/>
          <xs:enumeration value="OUTSIDE_BOOKING_WINDOW_EXCEPTION"/>
          <xs:enumeration value="CUSTOMER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="CENTER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_COLLECTION_NOT_PAID_FOR"/>
          <xs:enumeration value="NO_PRIVILEGE_FOR_PARTICIPATION"/>
          <xs:enumeration value="ALL_PARTICIPATIONS_TAKEN"/>
          <xs:enumeration value="SHOWUP_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_CANCELLATION"/>
          <xs:enumeration value="TOO_EARLY_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="TOO_EARLY_TO_SHOWUP"/>
          <xs:enumeration value="TOO_LATE_TO_SHOWUP"/>
          <xs:enumeration value="PARTICIPANT_TOO_MANY_OPEN_BOOKINGS"/>
          <xs:enumeration value="RESOURCE_OCCUPIED"/>
          <xs:enumeration value="RESOURCE_START_TIME_RESTRICTION"/>
          <xs:enumeration value="RESOURCE_TIME_RESTRICTION"/>
          <xs:enumeration value="ACTIVITY_STATE_INVALID"/>
          <xs:enumeration value="NO_PARENT_BOOKING_FOUND"/>
          <xs:enumeration value="STAFF_BLACKLISTED"/>
          <xs:enumeration value="STAFF_OCCUPIED"/>
          <xs:enumeration value="TOO_MANY_SUB_STAFF_USAGES"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_BOOKED"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_SHOWEDUP"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_BOOKING"/>
          <xs:enumeration value="LISTS_FULL"/>
          <xs:enumeration value="TOO_LATE_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="PARTICIPANT_OCCUPIED"/>
          <xs:enumeration value="FULL_BOOKING_RESTRICTION"/>
          <xs:enumeration value="IN_ADVANCE_LIMIT_BOOKING_RESTRICTION"/>
          <xs:enumeration value="PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="PARTICIPANT_BLACKLISTED"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BOOKING"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CENTER"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CUSTOMER"/>
          <xs:enumeration value="UNABLE_TO_REFRESH_WAITING_LIST"/>
          <xs:enumeration value="TOO_FEW_PARTICIPANTS"/>
          <xs:enumeration value="FREEZE_MAX_PREBOOK_PERIOD"/>
          <xs:enumeration value="FREEZE_MIN_OR_MAX_DURATION"/>
          <xs:enumeration value="FREEZE_TOO_LONG"/>
          <xs:enumeration value="FREEZE_TOO_SHORT"/>
          <xs:enumeration value="FREEZE_MAX_NUMBER_REACHED"/>
          <xs:enumeration value="TOO_MANY_FREEZES_PERIOD"/>
          <xs:enumeration value="TOO_MANY_FREEZES_TOTAL"/>
          <xs:enumeration value="FREEZE_MAX_TOTAL_DURATION_REACHED"/>
          <xs:enumeration value="FREEZE_NOT_ALLOWED"/>
          <xs:enumeration value="FREEZE_START_AND_STOP_DATE"/>
          <xs:enumeration value="FREEZE_START_IN_THE_PAST"/>
          <xs:enumeration value="FREEZE_END_BEFORE_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_AFTER_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_BEFORE_SUBSCRIPTION_START"/>
          <xs:enumeration value="FREEZE_OVERLAP"/>
          <xs:enumeration value="FREEZE_FUTURE_FREEZE"/>
          <xs:enumeration value="BOOKINGS_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="PARTICIPATION_ALREADY_CANCELLED"/>
          <xs:enumeration value="PARTICIPATION_CANCELLED"/>
          <xs:enumeration value="MINIMUM_AGE_EXCEPTION"/>
          <xs:enumeration value="TEMPLATE_NOT_DEFINED"/>
          <xs:enumeration value="INVALID_OTHER_PAYER_TYPE"/>
          <xs:enumeration value="DIFFERENT_COUNTRY_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_IS_NOT_STAFF"/>
          <xs:enumeration value="OTHER_PAYER_HAS_OTHER_PAYER"/>
          <xs:enumeration value="NO_VALID_ACCOUNT_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_STATUS_NOT_VALID_FOR_ATTEND"/>
          <xs:enumeration value="ATTENDING_PERSON_BLACKLISTED"/>
          <xs:enumeration value="MISSING_PRIVILEGE_FOR_ATTEND"/>
          <xs:enumeration value="ATTEND_NOT_POSSIBLE_AT_SPECIFIED_TIME"/>
          <xs:enumeration value="CLIPCARD_NOT_USABLE"/>
          <xs:enumeration value="TOO_MANY_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="NOT_ENOUGH_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="LOGIN_BLOCKED"/>
          <xs:enumeration value="PASSWORD_EXPIRED"/>
          <xs:enumeration value="PERSON_DELETED"/>
          <xs:enumeration value="PERSON_ANONYMIZED"/>
          <xs:enumeration value="INVALID_PICTURE"/>
          <xs:enumeration value="PERSON_NOT_FOUND_FOR_VENDING"/>
          <xs:enumeration value="TOO_MANY_MATCHES"/>
          <xs:enumeration value="PASSWORD_NOT_SET"/>
          <xs:enumeration value="PASSWORD_TOO_SHORT"/>
          <xs:enumeration value="CANNOT_PARTICIPATE_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="INVALID_STATUS"/>
          <xs:enumeration value="CONCURRENT_CALLS"/>
          <xs:enumeration value="CANNOT_UPDATE_COMPLETED_QUESTIONNAIRE"/>
          <xs:enumeration value="MISSING_ADMIN_FEE_PRODUCT"/>
          <xs:enumeration value="LOGIN_NOT_VALID"/>
          <xs:enumeration value="ACTIVE_TASKS_ALREADY_EXISTS_FOR_PERSON"/>
          <xs:enumeration value="TASK_TYPE_EXTERNAL_KEY_DOES_NOT_EXIST"/>
          <xs:enumeration value="SUBSCRIPTION_OF_SAME_TYPE"/>
          <xs:enumeration value="PERSON_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_KEY_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_BLOCKED"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_UNBLOCKED"/>
          <xs:enumeration value="INVALID_EMAIL"/>
          <xs:enumeration value="CENTER_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_TYPE_NOT_STRING"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_UPDATE_NOT_ALLOWED"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_VALUE_NOT_ALLOWED"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="CHILD_MUST_HAVE_AT_LEAST_ONE_PARENT"/>
          <xs:enumeration value="CHILD_HAS_TOO_MANY_PARENTS"/>
          <xs:enumeration value="PARENT_HAS_TOO_MANY_CHILDREN"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_ALREADY_EXISTS"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_DOES_NOT_EXIST"/>
          <xs:enumeration value="GUARDIAN_IS_TOO_YOUNG"/>
          <xs:enumeration value="CHILD_IS_TOO_OLD"/>
          <xs:enumeration value="AGE_NOT_SET"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_PERSON_MISMATCH"/>
          <xs:enumeration value="PAYMENT_CYCLE_TYPE_NOT_ALLOWED_EXCEPTION"/>
          <xs:enumeration value="SUBSCRIPTION_DOES_NOT_BELONG_TO_MEMBER"/>
          <xs:enumeration value="CANNOT_DELETE_SUBSCRIPTION"/>
          <xs:enumeration value="NO_PAYMENT_AGREEMENT_FOUND"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_VALID_FOR_SALES"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_ACTIVE"/>
          <xs:enumeration value="PAYMENT_CYCLE_NOT_ALLOWED"/>
          <xs:enumeration value="SUBSCRIPTION_SALE_OUTSIDE_HOME_CLUB_NOT_ALLOWED"/>
          <xs:enumeration value="BELOW_REQUIRED_AGE_FOR_EMAIL_CAPTURE"/>
          <xs:enumeration value="ROLE_NOT_FOUND"/>
          <xs:enumeration value="ACTION_NOT_ALLOWED"/>
          <xs:enumeration value="SCOPE_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_BLOCKED"/>
          <xs:enumeration value="ROLE_NOT_ASSIGNED"/>
          <xs:enumeration value="INVALID_EMPLOYEE_KEY"/>
          <xs:enumeration value="MISSING_PRIVILEGES"/>
          <xs:enumeration value="DATE_PARSE_ERROR"/>
          <xs:enumeration value="DATE_INVALID"/>
          <xs:enumeration value="CLIPCARD_NOT_ACTIVE"/>
          <xs:enumeration value="GROUP_ALREADY_EXIST"/>
          <xs:enumeration value="EMPLOYEE_AND_PERSON_KEY_SET"/>
          <xs:enumeration value="MULTIPLE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="MULTIPLE_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_ACTIVE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="errorDetailType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="MISSING_ACCESS_GROUP"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_DATE"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_TIME"/>
          <xs:enumeration value="MISSING_PRIVILEGES_COUNT"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="ALLOWED_BOOKING_WINDOW_TIMESLOT"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
  </types>
  <message name="SocialAPI_deleteParentRelationResponse"/>
  <message name="SocialAPI_deleteFriendRelationResponse"/>
  <message name="SocialAPI_createParentRelation">
    <part name="childKey" type="tns:apiPersonKey"/>
    <part name="parentKey" type="tns:apiPersonKey"/>
  </message>
  <message name="SocialAPI_deleteParentRelation">
    <part name="childKey" type="tns:apiPersonKey"/>
    <part name="parentKey" type="tns:apiPersonKey"/>
  </message>
  <message name="SocialAPI_createFriendRelationResponse"/>
  <message name="SocialAPI_deleteFriendRelation">
    <part name="personKey" type="tns:apiPersonKey"/>
    <part name="friendKey" type="tns:apiPersonKey"/>
  </message>
  <message name="SocialAPI_createFriendRelation">
    <part name="personKey" type="tns:apiPersonKey"/>
    <part name="friendKey" type="tns:apiPersonKey"/>
  </message>
  <message name="APIException">
    <part element="tns:APIException" name="APIException"/>
  </message>
  <message name="SocialAPI_createParentRelationResponse"/>
  <portType name="SocialAPI">
    <operation name="createFriendRelation" parameterOrder="personKey friendKey">
      <input message="tns:SocialAPI_createFriendRelation"/>
      <output message="tns:SocialAPI_createFriendRelationResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="createParentRelation" parameterOrder="childKey parentKey">
      <input message="tns:SocialAPI_createParentRelation"/>
      <output message="tns:SocialAPI_createParentRelationResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="deleteFriendRelation" parameterOrder="personKey friendKey">
      <input message="tns:SocialAPI_deleteFriendRelation"/>
      <output message="tns:SocialAPI_deleteFriendRelationResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="deleteParentRelation" parameterOrder="childKey parentKey">
      <input message="tns:SocialAPI_deleteParentRelation"/>
      <output message="tns:SocialAPI_deleteParentRelationResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
  </portType>
  <binding name="SocialAPIBinding" type="tns:SocialAPI">
    <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="createFriendRelation">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="createParentRelation">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="deleteFriendRelation">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="deleteParentRelation">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
  </binding>
  <service name="SocialAPIService">
    <port binding="tns:SocialAPIBinding" name="SocialAPIPort">
      <soap:address location="https://lite-test.exerp.com/api/v5/SocialAPI"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://lite-test.exerp.com/api/v5/SocialAPI</con:endpoint></con:endpoints><con:operation id="1f9edaf9-7653-48be-a218-7677ac51b4b5" isOneWay="false" action="" name="createFriendRelation" bindingOperationName="createFriendRelation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8b59c8e2-9396-4ea7-b4d7-3970f433ed95" isOneWay="false" action="" name="createParentRelation" bindingOperationName="createParentRelation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="57e045c4-07ad-435f-8fd1-dea37ef441cf" isOneWay="false" action="" name="deleteFriendRelation" bindingOperationName="deleteFriendRelation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2dc0abbc-6766-4030-8c91-50dd25a8a16b" isOneWay="false" action="" name="deleteParentRelation" bindingOperationName="deleteParentRelation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="b03e84a9-c8cc-4e43-9eb5-c1ab3f8544c9" wsaVersion="NONE" name="StaffBookingAPIBinding" type="wsdl" bindingName="{http://v5.api.eclub.procard.dk/}StaffBookingAPIBinding" soapVersion="1_1" anonymous="optional" definition="https://lite-test.exerp.com/api/v5/StaffBookingAPI?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://lite-test.exerp.com/api/v5/StaffBookingAPI?wsdl"><con:part><con:url>https://lite-test.exerp.com/api/v5/StaffBookingAPI?wsdl</con:url><con:content><![CDATA[<definitions name="StaffBookingAPIService" targetNamespace="http://v5.api.eclub.procard.dk/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://v5.api.eclub.procard.dk/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <types>
    <xs:schema targetNamespace="http://v5.api.eclub.procard.dk/" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="APIException" type="tns:APIException"/>
      <xs:complexType name="compositeKey">
        <xs:sequence>
          <xs:element name="center" type="xs:int"/>
          <xs:element name="id" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="apiPersonKey">
        <xs:complexContent>
          <xs:extension base="tns:compositeKey">
            <xs:sequence>
              <xs:element minOccurs="0" name="externalId" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="APIException">
        <xs:sequence>
          <xs:element minOccurs="0" name="errorCode" type="tns:errorCode"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="errorDetail" type="tns:errorDetail"/>
          <xs:element minOccurs="0" name="errorMessage" type="xs:string"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="errorDetail">
        <xs:sequence>
          <xs:element minOccurs="0" name="info" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:errorDetailType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="personalTrainingBooking">
        <xs:sequence>
          <xs:element minOccurs="0" name="bookingKey" type="tns:compositeKey"/>
          <xs:element minOccurs="0" name="date" type="xs:string"/>
          <xs:element minOccurs="0" name="personalTrainingActivity" type="tns:personalTrainingActivity"/>
          <xs:element minOccurs="0" name="startTime" type="xs:string"/>
          <xs:element minOccurs="0" name="stopTime" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="personalTrainingActivity">
        <xs:sequence>
          <xs:element minOccurs="0" name="color" type="tns:activityColor"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="durations" nillable="true" type="xs:int"/>
          <xs:element name="key" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createPersonalTrainingBookingParameter">
        <xs:sequence>
          <xs:element name="centerId" type="xs:int"/>
          <xs:element name="date" type="xs:string"/>
          <xs:element name="duration" type="xs:int"/>
          <xs:element name="instructorKey" type="tns:apiPersonKey"/>
          <xs:element name="personKey" type="tns:apiPersonKey"/>
          <xs:element name="personalTrainingActivityId" type="xs:int"/>
          <xs:element name="startTime" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="availableTrainingInterval">
        <xs:sequence>
          <xs:element minOccurs="0" name="intructorKey" type="tns:apiPersonKey"/>
          <xs:element minOccurs="0" name="startTime" type="xs:string"/>
          <xs:element minOccurs="0" name="stopTime" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="staffMember">
        <xs:sequence>
          <xs:element minOccurs="0" name="firstName" type="xs:string"/>
          <xs:element minOccurs="0" name="fullName" type="xs:string"/>
          <xs:element minOccurs="0" name="lastName" type="xs:string"/>
          <xs:element minOccurs="0" name="personId" type="tns:apiPersonKey"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="errorCode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UNKNOWN_ERROR"/>
          <xs:enumeration value="CREATE_EXCEPTION"/>
          <xs:enumeration value="REMOVE_EXCEPTION"/>
          <xs:enumeration value="SECURITY"/>
          <xs:enumeration value="SECURITY_ROLE"/>
          <xs:enumeration value="ARGUMENT_IS_NULL"/>
          <xs:enumeration value="ILLEGAL_ARGUMENT"/>
          <xs:enumeration value="PARSE_ERROR"/>
          <xs:enumeration value="ENTITY_NOT_FOUND"/>
          <xs:enumeration value="CONFLICTING_CHANGE"/>
          <xs:enumeration value="INVALID_ZIPCODE"/>
          <xs:enumeration value="INVALID_SOCIAL_SECURITY_NUMBER"/>
          <xs:enumeration value="INVALID_COMPANYID"/>
          <xs:enumeration value="INVALID_PHONE_NUMBER"/>
          <xs:enumeration value="CLIENT"/>
          <xs:enumeration value="ENTITY_IDENTIFIER_STATUS"/>
          <xs:enumeration value="DUPLICATE_PERSON"/>
          <xs:enumeration value="DUPLICATE_EXTERNAL_ID"/>
          <xs:enumeration value="FRIEND_RESTRICTION"/>
          <xs:enumeration value="EMPLOYEE_ALREADY_EXIST"/>
          <xs:enumeration value="DUPLICATE_COMPANY"/>
          <xs:enumeration value="EXPENSIVE_SEARCH"/>
          <xs:enumeration value="MULTIPLE_PERSONS_FOUND"/>
          <xs:enumeration value="NOT_DELIVERABLE"/>
          <xs:enumeration value="CIRCULAR_REFERENCE"/>
          <xs:enumeration value="REFERENCE"/>
          <xs:enumeration value="PERSON_NOT_EDITABLE"/>
          <xs:enumeration value="PERSON_TRANSFER"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_FOUND"/>
          <xs:enumeration value="ACCOUNT_RECEIVABLE_IS_BLOCKED"/>
          <xs:enumeration value="BANK_ACCOUNT_IS_BLOCKED"/>
          <xs:enumeration value="DEBIT_MAX"/>
          <xs:enumeration value="INVALID_PAYMENT_AGREEMENT"/>
          <xs:enumeration value="INVALID_BANK_INFO"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_CREDITOR_FOUND"/>
          <xs:enumeration value="PARTICIPATION_TIME_INTERVAL_OVERLAP"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLACKLISTED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLOCKED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="BOOKING_WAITING_LIST_FULL"/>
          <xs:enumeration value="BOOKING_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_RESTRICTION"/>
          <xs:enumeration value="OUTSIDE_BOOKING_WINDOW_EXCEPTION"/>
          <xs:enumeration value="CUSTOMER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="CENTER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_COLLECTION_NOT_PAID_FOR"/>
          <xs:enumeration value="NO_PRIVILEGE_FOR_PARTICIPATION"/>
          <xs:enumeration value="ALL_PARTICIPATIONS_TAKEN"/>
          <xs:enumeration value="SHOWUP_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_CANCELLATION"/>
          <xs:enumeration value="TOO_EARLY_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="TOO_EARLY_TO_SHOWUP"/>
          <xs:enumeration value="TOO_LATE_TO_SHOWUP"/>
          <xs:enumeration value="PARTICIPANT_TOO_MANY_OPEN_BOOKINGS"/>
          <xs:enumeration value="RESOURCE_OCCUPIED"/>
          <xs:enumeration value="RESOURCE_START_TIME_RESTRICTION"/>
          <xs:enumeration value="RESOURCE_TIME_RESTRICTION"/>
          <xs:enumeration value="ACTIVITY_STATE_INVALID"/>
          <xs:enumeration value="NO_PARENT_BOOKING_FOUND"/>
          <xs:enumeration value="STAFF_BLACKLISTED"/>
          <xs:enumeration value="STAFF_OCCUPIED"/>
          <xs:enumeration value="TOO_MANY_SUB_STAFF_USAGES"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_BOOKED"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_SHOWEDUP"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_BOOKING"/>
          <xs:enumeration value="LISTS_FULL"/>
          <xs:enumeration value="TOO_LATE_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="PARTICIPANT_OCCUPIED"/>
          <xs:enumeration value="FULL_BOOKING_RESTRICTION"/>
          <xs:enumeration value="IN_ADVANCE_LIMIT_BOOKING_RESTRICTION"/>
          <xs:enumeration value="PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="PARTICIPANT_BLACKLISTED"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BOOKING"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CENTER"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CUSTOMER"/>
          <xs:enumeration value="UNABLE_TO_REFRESH_WAITING_LIST"/>
          <xs:enumeration value="TOO_FEW_PARTICIPANTS"/>
          <xs:enumeration value="FREEZE_MAX_PREBOOK_PERIOD"/>
          <xs:enumeration value="FREEZE_MIN_OR_MAX_DURATION"/>
          <xs:enumeration value="FREEZE_TOO_LONG"/>
          <xs:enumeration value="FREEZE_TOO_SHORT"/>
          <xs:enumeration value="FREEZE_MAX_NUMBER_REACHED"/>
          <xs:enumeration value="TOO_MANY_FREEZES_PERIOD"/>
          <xs:enumeration value="TOO_MANY_FREEZES_TOTAL"/>
          <xs:enumeration value="FREEZE_MAX_TOTAL_DURATION_REACHED"/>
          <xs:enumeration value="FREEZE_NOT_ALLOWED"/>
          <xs:enumeration value="FREEZE_START_AND_STOP_DATE"/>
          <xs:enumeration value="FREEZE_START_IN_THE_PAST"/>
          <xs:enumeration value="FREEZE_END_BEFORE_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_AFTER_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_BEFORE_SUBSCRIPTION_START"/>
          <xs:enumeration value="FREEZE_OVERLAP"/>
          <xs:enumeration value="FREEZE_FUTURE_FREEZE"/>
          <xs:enumeration value="BOOKINGS_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="PARTICIPATION_ALREADY_CANCELLED"/>
          <xs:enumeration value="PARTICIPATION_CANCELLED"/>
          <xs:enumeration value="MINIMUM_AGE_EXCEPTION"/>
          <xs:enumeration value="TEMPLATE_NOT_DEFINED"/>
          <xs:enumeration value="INVALID_OTHER_PAYER_TYPE"/>
          <xs:enumeration value="DIFFERENT_COUNTRY_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_IS_NOT_STAFF"/>
          <xs:enumeration value="OTHER_PAYER_HAS_OTHER_PAYER"/>
          <xs:enumeration value="NO_VALID_ACCOUNT_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_STATUS_NOT_VALID_FOR_ATTEND"/>
          <xs:enumeration value="ATTENDING_PERSON_BLACKLISTED"/>
          <xs:enumeration value="MISSING_PRIVILEGE_FOR_ATTEND"/>
          <xs:enumeration value="ATTEND_NOT_POSSIBLE_AT_SPECIFIED_TIME"/>
          <xs:enumeration value="CLIPCARD_NOT_USABLE"/>
          <xs:enumeration value="TOO_MANY_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="NOT_ENOUGH_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="LOGIN_BLOCKED"/>
          <xs:enumeration value="PASSWORD_EXPIRED"/>
          <xs:enumeration value="PERSON_DELETED"/>
          <xs:enumeration value="PERSON_ANONYMIZED"/>
          <xs:enumeration value="INVALID_PICTURE"/>
          <xs:enumeration value="PERSON_NOT_FOUND_FOR_VENDING"/>
          <xs:enumeration value="TOO_MANY_MATCHES"/>
          <xs:enumeration value="PASSWORD_NOT_SET"/>
          <xs:enumeration value="PASSWORD_TOO_SHORT"/>
          <xs:enumeration value="CANNOT_PARTICIPATE_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="INVALID_STATUS"/>
          <xs:enumeration value="CONCURRENT_CALLS"/>
          <xs:enumeration value="CANNOT_UPDATE_COMPLETED_QUESTIONNAIRE"/>
          <xs:enumeration value="MISSING_ADMIN_FEE_PRODUCT"/>
          <xs:enumeration value="LOGIN_NOT_VALID"/>
          <xs:enumeration value="ACTIVE_TASKS_ALREADY_EXISTS_FOR_PERSON"/>
          <xs:enumeration value="TASK_TYPE_EXTERNAL_KEY_DOES_NOT_EXIST"/>
          <xs:enumeration value="SUBSCRIPTION_OF_SAME_TYPE"/>
          <xs:enumeration value="PERSON_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_KEY_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_BLOCKED"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_UNBLOCKED"/>
          <xs:enumeration value="INVALID_EMAIL"/>
          <xs:enumeration value="CENTER_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_TYPE_NOT_STRING"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_UPDATE_NOT_ALLOWED"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_VALUE_NOT_ALLOWED"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="CHILD_MUST_HAVE_AT_LEAST_ONE_PARENT"/>
          <xs:enumeration value="CHILD_HAS_TOO_MANY_PARENTS"/>
          <xs:enumeration value="PARENT_HAS_TOO_MANY_CHILDREN"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_ALREADY_EXISTS"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_DOES_NOT_EXIST"/>
          <xs:enumeration value="GUARDIAN_IS_TOO_YOUNG"/>
          <xs:enumeration value="CHILD_IS_TOO_OLD"/>
          <xs:enumeration value="AGE_NOT_SET"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_PERSON_MISMATCH"/>
          <xs:enumeration value="PAYMENT_CYCLE_TYPE_NOT_ALLOWED_EXCEPTION"/>
          <xs:enumeration value="SUBSCRIPTION_DOES_NOT_BELONG_TO_MEMBER"/>
          <xs:enumeration value="CANNOT_DELETE_SUBSCRIPTION"/>
          <xs:enumeration value="NO_PAYMENT_AGREEMENT_FOUND"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_VALID_FOR_SALES"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_ACTIVE"/>
          <xs:enumeration value="PAYMENT_CYCLE_NOT_ALLOWED"/>
          <xs:enumeration value="SUBSCRIPTION_SALE_OUTSIDE_HOME_CLUB_NOT_ALLOWED"/>
          <xs:enumeration value="BELOW_REQUIRED_AGE_FOR_EMAIL_CAPTURE"/>
          <xs:enumeration value="ROLE_NOT_FOUND"/>
          <xs:enumeration value="ACTION_NOT_ALLOWED"/>
          <xs:enumeration value="SCOPE_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_BLOCKED"/>
          <xs:enumeration value="ROLE_NOT_ASSIGNED"/>
          <xs:enumeration value="INVALID_EMPLOYEE_KEY"/>
          <xs:enumeration value="MISSING_PRIVILEGES"/>
          <xs:enumeration value="DATE_PARSE_ERROR"/>
          <xs:enumeration value="DATE_INVALID"/>
          <xs:enumeration value="CLIPCARD_NOT_ACTIVE"/>
          <xs:enumeration value="GROUP_ALREADY_EXIST"/>
          <xs:enumeration value="EMPLOYEE_AND_PERSON_KEY_SET"/>
          <xs:enumeration value="MULTIPLE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="MULTIPLE_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_ACTIVE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="errorDetailType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="MISSING_ACCESS_GROUP"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_DATE"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_TIME"/>
          <xs:enumeration value="MISSING_PRIVILEGES_COUNT"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="ALLOWED_BOOKING_WINDOW_TIMESLOT"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="activityColor">
        <xs:restriction base="xs:string">
          <xs:enumeration value="WHITE"/>
          <xs:enumeration value="YELLOW"/>
          <xs:enumeration value="GREEN"/>
          <xs:enumeration value="BLUE"/>
          <xs:enumeration value="ORANGE"/>
          <xs:enumeration value="RED"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType final="#all" name="personalTrainingBookingArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:personalTrainingBooking"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="personalTrainingActivityArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:personalTrainingActivity"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="availableTrainingIntervalArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:availableTrainingInterval"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="#all" name="staffMemberArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:staffMember"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </types>
  <message name="StaffBookingAPI_getFutureBookings">
    <part name="personKey" type="tns:apiPersonKey"/>
  </message>
  <message name="StaffBookingAPI_cancelBooking">
    <part name="bookingKey" type="tns:compositeKey"/>
    <part name="personKey" type="tns:apiPersonKey"/>
  </message>
  <message name="StaffBookingAPI_getSubstitutesForBooking">
    <part name="bokingKey" type="tns:compositeKey"/>
  </message>
  <message name="StaffBookingAPI_createPersonalTrainingBooking">
    <part name="parameters" type="tns:createPersonalTrainingBookingParameter"/>
  </message>
  <message name="StaffBookingAPI_createPersonalTrainingBookingResponse">
    <part name="return" type="tns:personalTrainingBooking"/>
  </message>
  <message name="StaffBookingAPI_cancelBookingResponse"/>
  <message name="StaffBookingAPI_getAvailableTrainingIntervalsResponse">
    <part name="return" type="tns:availableTrainingIntervalArray"/>
  </message>
  <message name="StaffBookingAPI_getSubstitutesForBookingResponse">
    <part name="return" type="tns:staffMemberArray"/>
  </message>
  <message name="StaffBookingAPI_getPersonalTrainingActivitiesResponse">
    <part name="return" type="tns:personalTrainingActivityArray"/>
  </message>
  <message name="StaffBookingAPI_getAvailableTrainingIntervals">
    <part name="centerId" type="xsd:int"/>
    <part name="activityId" type="xsd:int"/>
    <part name="date" type="xsd:string"/>
  </message>
  <message name="APIException">
    <part element="tns:APIException" name="APIException"/>
  </message>
  <message name="StaffBookingAPI_getPersonalTrainingActivities">
    <part name="centerId" type="xsd:int"/>
  </message>
  <message name="StaffBookingAPI_getFutureBookingsResponse">
    <part name="return" type="tns:personalTrainingBookingArray"/>
  </message>
  <portType name="StaffBookingAPI">
    <operation name="cancelBooking" parameterOrder="bookingKey personKey">
      <input message="tns:StaffBookingAPI_cancelBooking"/>
      <output message="tns:StaffBookingAPI_cancelBookingResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="createPersonalTrainingBooking" parameterOrder="parameters">
      <input message="tns:StaffBookingAPI_createPersonalTrainingBooking"/>
      <output message="tns:StaffBookingAPI_createPersonalTrainingBookingResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getAvailableTrainingIntervals" parameterOrder="centerId activityId date">
      <input message="tns:StaffBookingAPI_getAvailableTrainingIntervals"/>
      <output message="tns:StaffBookingAPI_getAvailableTrainingIntervalsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getFutureBookings" parameterOrder="personKey">
      <input message="tns:StaffBookingAPI_getFutureBookings"/>
      <output message="tns:StaffBookingAPI_getFutureBookingsResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getPersonalTrainingActivities" parameterOrder="centerId">
      <input message="tns:StaffBookingAPI_getPersonalTrainingActivities"/>
      <output message="tns:StaffBookingAPI_getPersonalTrainingActivitiesResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="getSubstitutesForBooking" parameterOrder="bokingKey">
      <input message="tns:StaffBookingAPI_getSubstitutesForBooking"/>
      <output message="tns:StaffBookingAPI_getSubstitutesForBookingResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
  </portType>
  <binding name="StaffBookingAPIBinding" type="tns:StaffBookingAPI">
    <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="cancelBooking">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="createPersonalTrainingBooking">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getAvailableTrainingIntervals">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getFutureBookings">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getPersonalTrainingActivities">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="getSubstitutesForBooking">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
  </binding>
  <service name="StaffBookingAPIService">
    <port binding="tns:StaffBookingAPIBinding" name="StaffBookingAPIPort">
      <soap:address location="https://lite-test.exerp.com/api/v5/StaffBookingAPI"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://lite-test.exerp.com/api/v5/StaffBookingAPI</con:endpoint></con:endpoints><con:operation id="ac294cfb-10c8-4a03-a5a8-796e8cb30857" isOneWay="false" action="" name="cancelBooking" bindingOperationName="cancelBooking" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6d6b8d7b-60b0-4a48-b412-1f8fdecd9fa8" isOneWay="false" action="" name="createPersonalTrainingBooking" bindingOperationName="createPersonalTrainingBooking" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0deab6d0-7b19-4d05-82b8-9799ebfadb5d" isOneWay="false" action="" name="getAvailableTrainingIntervals" bindingOperationName="getAvailableTrainingIntervals" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ac61ed8d-d68d-43dd-ada2-687f95cde52b" isOneWay="false" action="" name="getFutureBookings" bindingOperationName="getFutureBookings" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="baf80253-c4cb-4eec-9a8a-c6037b127fe4" isOneWay="false" action="" name="getPersonalTrainingActivities" bindingOperationName="getPersonalTrainingActivities" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="48c1ab62-fb96-43de-a7a1-533f3662a1d4" isOneWay="false" action="" name="getSubstitutesForBooking" bindingOperationName="getSubstitutesForBooking" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="b1cfb78d-ff92-4107-a0af-66540d2ed2bb" wsaVersion="NONE" name="VendingAPIBinding" type="wsdl" bindingName="{http://v5.api.eclub.procard.dk/}VendingAPIBinding" soapVersion="1_1" anonymous="optional" definition="https://lite-test.exerp.com/api/v5/VendingAPI?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://lite-test.exerp.com/api/v5/VendingAPI?wsdl"><con:part><con:url>https://lite-test.exerp.com/api/v5/VendingAPI?wsdl</con:url><con:content><![CDATA[<definitions name="VendingAPIService" targetNamespace="http://v5.api.eclub.procard.dk/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://v5.api.eclub.procard.dk/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <types>
    <xs:schema targetNamespace="http://v5.api.eclub.procard.dk/" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="APIException" type="tns:APIException"/>
      <xs:complexType name="getVendingAccountInfoParameters">
        <xs:sequence>
          <xs:element name="cardId" type="xs:string"/>
          <xs:element name="cardType" type="tns:memberCardType"/>
          <xs:element minOccurs="0" name="maxPurchaseAmount" type="xs:string"/>
          <xs:element name="vendingMachineId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="vendingAccountInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="maxPurchaseAmount" type="xs:string"/>
          <xs:element minOccurs="0" name="welcomeMessage" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="APIException">
        <xs:sequence>
          <xs:element minOccurs="0" name="errorCode" type="tns:errorCode"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="errorDetail" type="tns:errorDetail"/>
          <xs:element minOccurs="0" name="errorMessage" type="xs:string"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="errorDetail">
        <xs:sequence>
          <xs:element minOccurs="0" name="info" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:errorDetailType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="registerVendingSaleParameters">
        <xs:sequence>
          <xs:element name="cardId" type="xs:string"/>
          <xs:element name="cardType" type="tns:memberCardType"/>
          <xs:element name="selectedProducts">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="selectedProduct" type="tns:selectedVendingProduct"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="vendingMachineId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="selectedVendingProduct">
        <xs:sequence>
          <xs:element minOccurs="0" name="defaultPrice" type="xs:decimal"/>
          <xs:element name="productId" type="xs:string"/>
          <xs:element name="quantity" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="vendingMachineSaleInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="amount" type="xs:string"/>
          <xs:element minOccurs="0" name="reference" type="xs:string"/>
          <xs:element minOccurs="0" name="saleResult" type="tns:vendingMachineSaleResult"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="memberCardType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="MAGNETIC"/>
          <xs:enumeration value="RFID"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="errorCode">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UNKNOWN_ERROR"/>
          <xs:enumeration value="CREATE_EXCEPTION"/>
          <xs:enumeration value="REMOVE_EXCEPTION"/>
          <xs:enumeration value="SECURITY"/>
          <xs:enumeration value="SECURITY_ROLE"/>
          <xs:enumeration value="ARGUMENT_IS_NULL"/>
          <xs:enumeration value="ILLEGAL_ARGUMENT"/>
          <xs:enumeration value="PARSE_ERROR"/>
          <xs:enumeration value="ENTITY_NOT_FOUND"/>
          <xs:enumeration value="CONFLICTING_CHANGE"/>
          <xs:enumeration value="INVALID_ZIPCODE"/>
          <xs:enumeration value="INVALID_SOCIAL_SECURITY_NUMBER"/>
          <xs:enumeration value="INVALID_COMPANYID"/>
          <xs:enumeration value="INVALID_PHONE_NUMBER"/>
          <xs:enumeration value="CLIENT"/>
          <xs:enumeration value="ENTITY_IDENTIFIER_STATUS"/>
          <xs:enumeration value="DUPLICATE_PERSON"/>
          <xs:enumeration value="DUPLICATE_EXTERNAL_ID"/>
          <xs:enumeration value="FRIEND_RESTRICTION"/>
          <xs:enumeration value="EMPLOYEE_ALREADY_EXIST"/>
          <xs:enumeration value="DUPLICATE_COMPANY"/>
          <xs:enumeration value="EXPENSIVE_SEARCH"/>
          <xs:enumeration value="MULTIPLE_PERSONS_FOUND"/>
          <xs:enumeration value="NOT_DELIVERABLE"/>
          <xs:enumeration value="CIRCULAR_REFERENCE"/>
          <xs:enumeration value="REFERENCE"/>
          <xs:enumeration value="PERSON_NOT_EDITABLE"/>
          <xs:enumeration value="PERSON_TRANSFER"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_FOUND"/>
          <xs:enumeration value="ACCOUNT_RECEIVABLE_IS_BLOCKED"/>
          <xs:enumeration value="BANK_ACCOUNT_IS_BLOCKED"/>
          <xs:enumeration value="DEBIT_MAX"/>
          <xs:enumeration value="INVALID_PAYMENT_AGREEMENT"/>
          <xs:enumeration value="INVALID_BANK_INFO"/>
          <xs:enumeration value="NO_CLEARING_HOUSE_CREDITOR_FOUND"/>
          <xs:enumeration value="PARTICIPATION_TIME_INTERVAL_OVERLAP"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLACKLISTED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_BLOCKED"/>
          <xs:enumeration value="PARTICIPATION_PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="BOOKING_WAITING_LIST_FULL"/>
          <xs:enumeration value="BOOKING_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_RESTRICTION"/>
          <xs:enumeration value="OUTSIDE_BOOKING_WINDOW_EXCEPTION"/>
          <xs:enumeration value="CUSTOMER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="CENTER_CANCEL_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="BOOKING_COLLECTION_NOT_PAID_FOR"/>
          <xs:enumeration value="NO_PRIVILEGE_FOR_PARTICIPATION"/>
          <xs:enumeration value="ALL_PARTICIPATIONS_TAKEN"/>
          <xs:enumeration value="SHOWUP_OUTSIDE_TIME_INTERVAL"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_CANCELLATION"/>
          <xs:enumeration value="TOO_EARLY_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="TOO_EARLY_TO_SHOWUP"/>
          <xs:enumeration value="TOO_LATE_TO_SHOWUP"/>
          <xs:enumeration value="PARTICIPANT_TOO_MANY_OPEN_BOOKINGS"/>
          <xs:enumeration value="RESOURCE_OCCUPIED"/>
          <xs:enumeration value="RESOURCE_START_TIME_RESTRICTION"/>
          <xs:enumeration value="RESOURCE_TIME_RESTRICTION"/>
          <xs:enumeration value="ACTIVITY_STATE_INVALID"/>
          <xs:enumeration value="NO_PARENT_BOOKING_FOUND"/>
          <xs:enumeration value="STAFF_BLACKLISTED"/>
          <xs:enumeration value="STAFF_OCCUPIED"/>
          <xs:enumeration value="TOO_MANY_SUB_STAFF_USAGES"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_BOOKED"/>
          <xs:enumeration value="PARTICIPANT_ALREADY_SHOWEDUP"/>
          <xs:enumeration value="ILLEGAL_BOOKING_STATE_FOR_BOOKING"/>
          <xs:enumeration value="LISTS_FULL"/>
          <xs:enumeration value="TOO_LATE_TO_BOOK_PARTICIPANT"/>
          <xs:enumeration value="PARTICIPANT_OCCUPIED"/>
          <xs:enumeration value="FULL_BOOKING_RESTRICTION"/>
          <xs:enumeration value="IN_ADVANCE_LIMIT_BOOKING_RESTRICTION"/>
          <xs:enumeration value="PERSON_DOUBLE_PARTICIPATION"/>
          <xs:enumeration value="PARTICIPANT_BLACKLISTED"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BOOKING"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CENTER"/>
          <xs:enumeration value="TOO_LATE_TO_CANCEL_BY_CUSTOMER"/>
          <xs:enumeration value="UNABLE_TO_REFRESH_WAITING_LIST"/>
          <xs:enumeration value="TOO_FEW_PARTICIPANTS"/>
          <xs:enumeration value="FREEZE_MAX_PREBOOK_PERIOD"/>
          <xs:enumeration value="FREEZE_MIN_OR_MAX_DURATION"/>
          <xs:enumeration value="FREEZE_TOO_LONG"/>
          <xs:enumeration value="FREEZE_TOO_SHORT"/>
          <xs:enumeration value="FREEZE_MAX_NUMBER_REACHED"/>
          <xs:enumeration value="TOO_MANY_FREEZES_PERIOD"/>
          <xs:enumeration value="TOO_MANY_FREEZES_TOTAL"/>
          <xs:enumeration value="FREEZE_MAX_TOTAL_DURATION_REACHED"/>
          <xs:enumeration value="FREEZE_NOT_ALLOWED"/>
          <xs:enumeration value="FREEZE_START_AND_STOP_DATE"/>
          <xs:enumeration value="FREEZE_START_IN_THE_PAST"/>
          <xs:enumeration value="FREEZE_END_BEFORE_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_AFTER_SUBSCRIPTION_END"/>
          <xs:enumeration value="FREEZE_START_BEFORE_SUBSCRIPTION_START"/>
          <xs:enumeration value="FREEZE_OVERLAP"/>
          <xs:enumeration value="FREEZE_FUTURE_FREEZE"/>
          <xs:enumeration value="BOOKINGS_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="PARTICIPATION_ALREADY_CANCELLED"/>
          <xs:enumeration value="PARTICIPATION_CANCELLED"/>
          <xs:enumeration value="MINIMUM_AGE_EXCEPTION"/>
          <xs:enumeration value="TEMPLATE_NOT_DEFINED"/>
          <xs:enumeration value="INVALID_OTHER_PAYER_TYPE"/>
          <xs:enumeration value="DIFFERENT_COUNTRY_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_IS_NOT_STAFF"/>
          <xs:enumeration value="OTHER_PAYER_HAS_OTHER_PAYER"/>
          <xs:enumeration value="NO_VALID_ACCOUNT_FOR_OTHER_PAYER"/>
          <xs:enumeration value="PERSON_STATUS_NOT_VALID_FOR_ATTEND"/>
          <xs:enumeration value="ATTENDING_PERSON_BLACKLISTED"/>
          <xs:enumeration value="MISSING_PRIVILEGE_FOR_ATTEND"/>
          <xs:enumeration value="ATTEND_NOT_POSSIBLE_AT_SPECIFIED_TIME"/>
          <xs:enumeration value="CLIPCARD_NOT_USABLE"/>
          <xs:enumeration value="TOO_MANY_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="NOT_ENOUGH_CLIPS_ON_CLIPCARD"/>
          <xs:enumeration value="LOGIN_BLOCKED"/>
          <xs:enumeration value="PASSWORD_EXPIRED"/>
          <xs:enumeration value="PERSON_DELETED"/>
          <xs:enumeration value="PERSON_ANONYMIZED"/>
          <xs:enumeration value="INVALID_PICTURE"/>
          <xs:enumeration value="PERSON_NOT_FOUND_FOR_VENDING"/>
          <xs:enumeration value="TOO_MANY_MATCHES"/>
          <xs:enumeration value="PASSWORD_NOT_SET"/>
          <xs:enumeration value="PASSWORD_TOO_SHORT"/>
          <xs:enumeration value="CANNOT_PARTICIPATE_IN_FREEZE_PERIOD"/>
          <xs:enumeration value="INVALID_STATUS"/>
          <xs:enumeration value="CONCURRENT_CALLS"/>
          <xs:enumeration value="CANNOT_UPDATE_COMPLETED_QUESTIONNAIRE"/>
          <xs:enumeration value="MISSING_ADMIN_FEE_PRODUCT"/>
          <xs:enumeration value="LOGIN_NOT_VALID"/>
          <xs:enumeration value="ACTIVE_TASKS_ALREADY_EXISTS_FOR_PERSON"/>
          <xs:enumeration value="TASK_TYPE_EXTERNAL_KEY_DOES_NOT_EXIST"/>
          <xs:enumeration value="SUBSCRIPTION_OF_SAME_TYPE"/>
          <xs:enumeration value="PERSON_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_KEY_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_BLOCKED"/>
          <xs:enumeration value="EMPLOYEE_LOGIN_ALREADY_UNBLOCKED"/>
          <xs:enumeration value="INVALID_EMAIL"/>
          <xs:enumeration value="CENTER_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_TYPE_NOT_STRING"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_NOT_FOUND"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_UPDATE_NOT_ALLOWED"/>
          <xs:enumeration value="CENTER_ATTRIBUTE_VALUE_NOT_ALLOWED"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="CHILD_MUST_HAVE_AT_LEAST_ONE_PARENT"/>
          <xs:enumeration value="CHILD_HAS_TOO_MANY_PARENTS"/>
          <xs:enumeration value="PARENT_HAS_TOO_MANY_CHILDREN"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_ALREADY_EXISTS"/>
          <xs:enumeration value="CHILD_PARENT_RELATIONSHIP_DOES_NOT_EXIST"/>
          <xs:enumeration value="GUARDIAN_IS_TOO_YOUNG"/>
          <xs:enumeration value="CHILD_IS_TOO_OLD"/>
          <xs:enumeration value="AGE_NOT_SET"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_PERSON_MISMATCH"/>
          <xs:enumeration value="PAYMENT_CYCLE_TYPE_NOT_ALLOWED_EXCEPTION"/>
          <xs:enumeration value="SUBSCRIPTION_DOES_NOT_BELONG_TO_MEMBER"/>
          <xs:enumeration value="CANNOT_DELETE_SUBSCRIPTION"/>
          <xs:enumeration value="NO_PAYMENT_AGREEMENT_FOUND"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_VALID_FOR_SALES"/>
          <xs:enumeration value="PAYMENT_AGREEMENT_NOT_ACTIVE"/>
          <xs:enumeration value="PAYMENT_CYCLE_NOT_ALLOWED"/>
          <xs:enumeration value="SUBSCRIPTION_SALE_OUTSIDE_HOME_CLUB_NOT_ALLOWED"/>
          <xs:enumeration value="BELOW_REQUIRED_AGE_FOR_EMAIL_CAPTURE"/>
          <xs:enumeration value="ROLE_NOT_FOUND"/>
          <xs:enumeration value="ACTION_NOT_ALLOWED"/>
          <xs:enumeration value="SCOPE_NOT_FOUND"/>
          <xs:enumeration value="EMPLOYEE_BLOCKED"/>
          <xs:enumeration value="ROLE_NOT_ASSIGNED"/>
          <xs:enumeration value="INVALID_EMPLOYEE_KEY"/>
          <xs:enumeration value="MISSING_PRIVILEGES"/>
          <xs:enumeration value="DATE_PARSE_ERROR"/>
          <xs:enumeration value="DATE_INVALID"/>
          <xs:enumeration value="CLIPCARD_NOT_ACTIVE"/>
          <xs:enumeration value="GROUP_ALREADY_EXIST"/>
          <xs:enumeration value="EMPLOYEE_AND_PERSON_KEY_SET"/>
          <xs:enumeration value="MULTIPLE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="MULTIPLE_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_ACTIVE_EMPLOYEE_LOGINS_FOUND"/>
          <xs:enumeration value="NO_BLOCKED_EMPLOYEE_LOGINS_FOUND"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="errorDetailType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="MISSING_ACCESS_GROUP"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_DATE"/>
          <xs:enumeration value="EARLIEST_ALLOWED_BOOKING_TIME"/>
          <xs:enumeration value="MISSING_PRIVILEGES_COUNT"/>
          <xs:enumeration value="DEDUCTION_DAY_VALIDATION_FAILED"/>
          <xs:enumeration value="ALLOWED_BOOKING_WINDOW_TIMESLOT"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="vendingMachineSaleResult">
        <xs:restriction base="xs:string">
          <xs:enumeration value="SUCCESS"/>
          <xs:enumeration value="COULD_NOT_CREATE_SHOPPING_BASKET"/>
          <xs:enumeration value="COULD_NOT_CREATE_PAYMENT_SESSION"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
  </types>
  <message name="VendingAPI_getVendingAccountInfoResponse">
    <part name="return" type="tns:vendingAccountInfo"/>
  </message>
  <message name="VendingAPI_getVendingAccountInfo">
    <part name="parameters" type="tns:getVendingAccountInfoParameters"/>
  </message>
  <message name="VendingAPI_registerVendingSaleResponse">
    <part name="return" type="tns:vendingMachineSaleInfo"/>
  </message>
  <message name="APIException">
    <part element="tns:APIException" name="APIException"/>
  </message>
  <message name="VendingAPI_registerVendingSale">
    <part name="parameters" type="tns:registerVendingSaleParameters"/>
  </message>
  <portType name="VendingAPI">
    <operation name="getVendingAccountInfo" parameterOrder="parameters">
      <input message="tns:VendingAPI_getVendingAccountInfo"/>
      <output message="tns:VendingAPI_getVendingAccountInfoResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
    <operation name="registerVendingSale" parameterOrder="parameters">
      <input message="tns:VendingAPI_registerVendingSale"/>
      <output message="tns:VendingAPI_registerVendingSaleResponse"/>
      <fault message="tns:APIException" name="APIException"/>
    </operation>
  </portType>
  <binding name="VendingAPIBinding" type="tns:VendingAPI">
    <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="getVendingAccountInfo">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
    <operation name="registerVendingSale">
      <soap:operation soapAction=""/>
      <input>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </input>
      <output>
        <soap:body namespace="http://v5.api.eclub.procard.dk/" use="literal"/>
      </output>
      <fault name="APIException">
        <soap:fault name="APIException" use="literal"/>
      </fault>
    </operation>
  </binding>
  <service name="VendingAPIService">
    <port binding="tns:VendingAPIBinding" name="VendingAPIPort">
      <soap:address location="https://lite-test.exerp.com/api/v5/VendingAPI"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://lite-test.exerp.com/api/v5/VendingAPI</con:endpoint></con:endpoints><con:operation id="d57797c7-882e-48ba-ae53-0e735d5f3198" isOneWay="false" action="" name="getVendingAccountInfo" bindingOperationName="getVendingAccountInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="139733aa-933f-43ab-85f1-f90554dffc30" isOneWay="false" action="" name="registerVendingSale" bindingOperationName="registerVendingSale" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:testSuite id="a5f0c82f-b1e2-491a-b2c8-0d6c9a9d85cd" name="createClass"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="7c217b94-f1cf-40f0-b439-f256a6e9f223" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="createClass" searchProperties="true"><con:settings/><con:testStep type="request" name="createClass" id="c5835348-f81d-4688-b055-ae69bbb4a900"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BookingAPIBinding</con:interface><con:operation>createClass</con:operation><con:request name="createClass" id="9927024d-2959-43ab-b22d-daeaaf345b6f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://skilld.exerp.qa/api/v5/BookingAPI</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v5="http://v5.api.eclub.procard.dk/">
   <soapenv:Header/>
   <soapenv:Body>
      <v5:createClass>
         <parameters>
            <activityKey>201</activityKey>
            <centerId>131</centerId>
            <date>2021-07-31</date>
            <duration>20</duration>
            <time>13:00</time>
            <description>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</description>           
            <resourceKeys>
               <center>131</center>
               <id>1</id>
            </resourceKeys>          
            <staffPersonKeys>
               <center>131</center>
               <id>4</id>
            </staffPersonKeys>           
         </parameters>
      </v5:createClass>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ed83bb45-3a9b-4783-8bd3-7454d6f71679"/><con:credentials><con:username>100emp2401</con:username><con:password>b8n1OfNkej</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>activityKey</con:name><con:value>5</con:value></con:property><con:property><con:name>centerId</con:name><con:value>131</con:value></con:property><con:property><con:name>date</con:name><con:value>2021-04-01</con:value></con:property><con:property><con:name>duration</con:name><con:value>30</con:value></con:property><con:property><con:name>time</con:name><con:value>14:00</con:value></con:property><con:property><con:name>description</con:name><con:value>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</con:value></con:property><con:property><con:name>center</con:name><con:value>131</con:value></con:property><con:property><con:name>id1</con:name><con:value>2</con:value></con:property><con:property><con:name>id2</con:name><con:value>2</con:value></con:property></con:properties></con:testCase><con:testCase id="178af7be-98f8-46e3-ab8c-08ab0503992d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="automation" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="0cd7de23-634d-4b6a-a433-90d6064e7f55"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestRunContext 

//To run call several times
for (i=0; i &lt; 500; i++) {

//Create variable of request
def createClass = testRunner.testCase.testSuite.testCases["createClass"].testSteps["createClass"].getPropertyValue("Request")

//Create object 
def xmlCreateClass = new XmlHolder(createClass)

//Create variables
def centerId = testRunner.testCase.testSuite.testCases["createClass"].getPropertyValue("centerId")
def description = testRunner.testCase.testSuite.testCases["createClass"].getPropertyValue("description")
def center = testRunner.testCase.testSuite.testCases["createClass"].getPropertyValue("center")
//Generate random values
def activityKey = ["5", "201", "207", "210", "211"]
def duration = ["10", "15", "20", "25", "30"]
def id = ["1", "2", "3", "4", "5"]
def time = ["10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18:00", "19:00", "20:00", "21:00", "21:30", "13:30", "11:30"]
Random rnd = new Random()
date = new Date()
def date = date + rnd.nextInt(200)
date = date.format("yyyy-MM-dd")

//Set valuest in request 
xmlCreateClass.setNodeValue("//v5:createClass/parameters/activityKey", activityKey[rnd.nextInt(activityKey.size)])
xmlCreateClass.setNodeValue("//v5:createClass/parameters/centerId", centerId)
xmlCreateClass.setNodeValue("//v5:createClass/parameters/date", date)
xmlCreateClass.setNodeValue("//v5:createClass/parameters/duration", duration[rnd.nextInt(duration.size)])
xmlCreateClass.setNodeValue("//v5:createClass/parameters/time", time[rnd.nextInt(time.size)])
xmlCreateClass.setNodeValue("//v5:createClass/parameters/description", description)
xmlCreateClass.setNodeValue("//v5:createClass/parameters/resourceKeys/center", center)
xmlCreateClass.setNodeValue("//v5:createClass/parameters/resourceKeys/id", id[rnd.nextInt(id.size)])
xmlCreateClass.setNodeValue("//v5:createClass/parameters/staffPersonKeys/center", center)
xmlCreateClass.setNodeValue("//v5:createClass/parameters/staffPersonKeys/id", id[rnd.nextInt(id.size)])

//Create variable with prepared XML 
def newXmlcreateClass = xmlCreateClass.getXml()

//Changing body of request by prepared variables
testRunner.testCase.testSuite.testCases["createClass"].testSteps["createClass"].setPropertyValue("Request", newXmlcreateClass)

//Create variable of test step
def createClass_test_step = testRunner.testCase.testSuite.testCases["createClass"].testSteps["createClass"]

//Context preparation
def contextCreateClass = new WsdlTestRunContext(createClass_test_step)

//Run request
createClass_test_step.run(testRunner, contextCreateClass)
}</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/></con:soapui-project>